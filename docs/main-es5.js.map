{"version":3,"sources":["webpack:///Users/eric_/projetos/frontend-genrencia/src/environments/environment.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/clientes/cliente-delete/cliente-delete.component.ts","webpack:///src/app/clientes/cliente-delete/cliente-delete.component.html","webpack:///src/app/clientes/cliente-detalhe/cliente-detalhe.component.ts","webpack:///src/app/clientes/cliente-detalhe/cliente-detalhe.component.html","webpack:///src/app/clientes/cliente.ts","webpack:///src/app/clientes/cliente/cliente.component.ts","webpack:///src/app/clientes/cliente/cliente.component.html","webpack:///src/app/clientes/clientes-routing.module.ts","webpack:///src/app/clientes/clientes.module.ts","webpack:///src/app/configuracoes/configuracoes.component.ts","webpack:///src/app/configuracoes/configuracoes.component.html","webpack:///src/app/empresa/empresa-routing.module.ts","webpack:///src/app/empresa/empresa.module.ts","webpack:///src/app/empresa/empresa.ts","webpack:///src/app/empresa/empresa/empresa.component.ts","webpack:///src/app/empresa/empresa/empresa.component.html","webpack:///src/app/empresa/logo-modal/logo-modal.component.ts","webpack:///src/app/empresa/logo-modal/logo-modal.component.html","webpack:///src/app/formas-pagamentos/forma-pagamento-delete/forma-pagamento-delete.component.ts","webpack:///src/app/formas-pagamentos/forma-pagamento-delete/forma-pagamento-delete.component.html","webpack:///src/app/formas-pagamentos/forma-pagamento-detalhe/forma-pagamento-detalhe.component.ts","webpack:///src/app/formas-pagamentos/forma-pagamento-detalhe/forma-pagamento-detalhe.component.html","webpack:///src/app/formas-pagamentos/forma-pagamento.ts","webpack:///src/app/formas-pagamentos/forma-pagamento/forma-pagamento.component.ts","webpack:///src/app/formas-pagamentos/forma-pagamento/forma-pagamento.component.html","webpack:///src/app/formas-pagamentos/formas-pagamentos-routing.module.ts","webpack:///src/app/formas-pagamentos/formas-pagamentos.module.ts","webpack:///src/app/fornecedores/fornecedor-delete/fornecedor-delete.component.ts","webpack:///src/app/fornecedores/fornecedor-delete/fornecedor-delete.component.html","webpack:///src/app/fornecedores/fornecedor-detalhe/fornecedor-detalhe.component.ts","webpack:///src/app/fornecedores/fornecedor-detalhe/fornecedor-detalhe.component.html","webpack:///src/app/fornecedores/fornecedor/fornecedor.component.ts","webpack:///src/app/fornecedores/fornecedor/fornecedor.component.html","webpack:///src/app/fornecedores/fornecedor/fornecedor.ts","webpack:///src/app/fornecedores/fornecedores-routing.module.ts","webpack:///src/app/fornecedores/fornecedores.module.ts","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/lancamentos/lancamento.ts","webpack:///src/app/lancamentos/lancamento/lancamento.component.ts","webpack:///src/app/lancamentos/lancamento/lancamento.component.html","webpack:///src/app/lancamentos/lancamentos-routing.module.ts","webpack:///src/app/lancamentos/lancamentos.module.ts","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/usuario.ts","webpack:///src/app/produtos/categoria-produto.ts","webpack:///src/app/produtos/produto-delete/produto-delete.component.ts","webpack:///src/app/produtos/produto-delete/produto-delete.component.html","webpack:///src/app/produtos/produto-detalhe/produto-detalhe.component.ts","webpack:///src/app/produtos/produto-detalhe/produto-detalhe.component.html","webpack:///src/app/produtos/produto.ts","webpack:///src/app/produtos/produto/produto.component.ts","webpack:///src/app/produtos/produto/produto.component.html","webpack:///src/app/produtos/produtos-routing.module.ts","webpack:///src/app/produtos/produtos.module.ts","webpack:///src/app/produtos/tipo-produto.ts","webpack:///src/app/service/auth.service.ts","webpack:///src/app/service/buscar-cep.service.ts","webpack:///src/app/service/clientes.service.ts","webpack:///src/app/service/empresa.service.ts","webpack:///src/app/service/forma-pagamento.service.ts","webpack:///src/app/service/fornecedor.service.ts","webpack:///src/app/service/lancamento.service.ts","webpack:///src/app/service/produto.service.ts","webpack:///src/app/template/navbar/navbar.component.ts","webpack:///src/app/template/navbar/navbar.component.html","webpack:///src/app/template/sidebar/sidebar.component.ts","webpack:///src/app/template/sidebar/sidebar.component.html","webpack:///src/app/template/template.module.ts","webpack:///src/app/token.interceptor.ts","webpack:///src/app/util/mascara-util.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["environment","production","apiBaseUrl","clienteId","clienteSecret","obterTokenUrl","buscarCep","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useValue","useClass","multi","declarations","providers","bootstrap","ClienteDeleteComponent","dialogRef","cliente","close","fechar","ClienteDetalheComponent","fb","service","clienteAtualizado","progress","mascaraData","mascaraNascimento","mascaraCpf","mascaraRG","mascaraRg","mascaraCelular","mascaraTelefoneFixo","montarFormulario","clienteAtualizar","formulario","group","required","nome","cpf","rg","dataNascimento","dataCadastro","value","disabled","sexo","email","celular","telefone","observacao","cep1","bairro1","lagradouro1","complemento1","numero1","cep2","bairro2","lagradouro2","complemento2","numero2","atualizar","subscribe","reponse","msg","errorResponse","errors","error","event","cep","target","response","controls","setValue","bairro","logradouro","complemento","buscarCep1","buscarCep2","Cliente","ClienteComponent","locale","dialog","colunas","dataSource","clientes","totalElementos","pagina","tamanho","pageSizeOptions","clientenovo","listaClientes","clienteForm","getClienteAll","content","totalElements","number","data","filtroTable","buscarCliente","filter","trim","toLowerCase","salvar","preventDefault","reset","open","afterClosed","responseClose","deletar","responseDelete","responseFilter","height","width","responseAt","pageIndex","pageSize","submit","applyFilter","paginar","ClientesRoutingModule","forChild","ClientesModule","ConfiguracoesComponent","EmpresaRoutingModule","EmpresaModule","Empresa","EmpresaComponent","mascaraCnpj","empresa","formularioEmpresa","carregarEmpresa","cnpj","nomeFantasia","razaoSocial","areaAtuacao","inscricaoEstadual","inscricaoMunicipal","logoTipo","endereco","numero","cidade","estado","carregar","console","log","uf","localidade","files","foto","formData","FormData","append","upload","ngOnInit","Submit","LogoModalComponent","apagarlogo","apagarLogo","FormaPagamentoDeleteComponent","formaPagamento","FormaPagamentoDetalheComponent","formaPagamentoAtualizado","formularioFormaPagamento","formFp","tipoPagamento","descricao","taxa","FormaPagamento","FormaPagamentoComponent","formaPagamentos","formaPagamentoNovo","listaFormaPagamento","buscaFormaPagamento","onSubmit","FormasPagamentosRoutingModule","FormasPagamentosModule","FornecedorDeleteComponent","fornecedor","FornecedorDetalheComponent","fornecedorAtualizado","fornecedorForm","checked","tipo","dataAbertura","site","FornecedorComponent","fornecedores","fornecedorNovo","listarFornecedor","getFornecedorAll","buscarFornecedor","Fornecedor","FornecedoresRoutingModule","FornecedoresModule","AuthGuard","authService","router","next","state","authenticated","isAuthenticated","navigate","providedIn","HomeComponent","Lancamento","LancamentoComponent","produtoService","clienteService","formaPagService","_onDestroy","carregaClientes","clienteFiltro","produtosFiltro","carregaProdutos","tipoPagamentos","searching","clienteSelecionado","filtroClientes","filtroProdutos","lancamentoNovo","carregarClientes","carregarProdutos","carregarFormaPagamento","valueChanges","pipe","search","includes","filtroCliente","produto","nomeProduto","filtroProduto","filtroTipoPagamentos","formularioLancamento","_filtroFormaPagamento","lancamentoForm","dataLancamento","nomeCliente","valorVenda","desconto","entrega","requiredTrue","lagradouro","total","produtos","array","valor_venda","quantidade","totalProduto","produtoLength","produtosControls","length","addProduto","push","index","removeAt","patchValue","salvarPedido","getClienteById","cli","cli1","salvouPedido","erroSalvar","carregarFp","obj1","obj2","filterValue","formaPag","undefined","produtoexibir","idAtual","selectProduto","at","formaPamento","complete","get","onCliente","ngSubmit","LancamentosRoutingModule","LancamentosModule","LayoutComponent","usuarioLogado","getUsuarioAuthenticado","encerrarSessao","logout","LoginComponent","login","username","password","access_token","JSON","stringify","sessionStorage","setItem","cadastrando","usuario","msgErrorsApi","preparaCadastrar","Usuario","CategoriaProduto","ProdutoDeleteComponent","categoria","ProdutoDetalheComponent","listarCategoriaProdutos","listaTipoProdutos","produtoAtt","categoriaProdutoAtt","tipoProdutoAtt","carregarCategoriaProduto","carregarTipoProdutos","produtoForm","categoriaProdutoForm","tipoProdutoform","formProduto","valorCompra","categoriaProduto","tipoProduto","formCategoriaProduto","nomeCategoriaProduto","formTipoProduto","nomeTipoProduto","atualizarProduto","atualizarCategoriaProduto","atualizarTipoProduto","carregarCategoriasProdutos","Produto","ProdutoComponent","carregaCategoriaProdutos","carregaTipoProdutos","categorias","tipos","totalElementosCategoria","paginaCategoria","tamanhoCategoria","pageSizeOptionsCategoria","totalElementosTipo","paginaTipo","tamanhoTipo","pageSizeOptionsTipo","dataSourceProduto","dataSourceCategoriaProduto","dataSourceTipoProduto","colunasProduto","colunasCategoria","colunasTipo","produtoNovo","categoriaProdutoNovo","tipoProdutoNovo","listarProdutos","listarCategoriaProduto","listarTipoProduto","carregarCategoriaProdutos","salvarProduto","deleteProduto","buscarProdutos","getAllProdutos","salvarCategoriaProduto","getAllCategoriaProdutos","categria","deleteCategoriaProduto","filtroTableCategoria","buscarCategoriaProdutos","salvarTipoProduto","deleteTipoProduto","filtroTableTipo","buscarTipoProdutos","getAllTipoProdutos","submitProduto","submitCategoriaProduto","applyFilterCategoria","paginarCategoria","submitTipoProduto","applyFilterTipo","paginarTipo","applyFilterProduto","ProdutosRoutingModule","ProdutosModule","TipoProduto","AuthService","http","snack","apiUrl","tokenUrl","clientID","ClientSecret","jwtHelper","tokenString","getItem","token","parse","obterToken","expired","isTokenExpired","removeItem","decodeToken","user_name","isError","duration","verticalPosition","horizontalPosition","panelClass","post","params","set","headers","btoa","toString","BuscarCepService","apiCep","ClientesService","put","page","size","filtro","EmpresaService","responseType","patch","FormaPagamentoService","FornecedorService","LancamentoService","lancamento","ProdutoService","apiBaseUrlprod","apiBaseURlcat","apiBaseURlTipo","NavbarComponent","SidebarComponent","TemplateModule","TokenInterceptor","request","url","endsWith","startsWith","jwt","clone","setHeaders","Authorization","handle","MascaraUtil","mascaraCep","qtdHoras","mascaraNit","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n // apiBaseUrl: 'http://localhost:8080',\n apiBaseUrl: 'https://api-gerencia.herokuapp.com',\n  clienteId: 'my-angular-app',\n  clienteSecret: '@321',\n  obterTokenUrl: '/oauth/token',\n  buscarCep: 'https://viacep.com.br/ws'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { AuthGuard } from './guard/auth.guard';\nimport { ConfiguracoesComponent } from './configuracoes/configuracoes.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  {\n    path: '', component: LayoutComponent, children: [\n      { path: 'home', component: HomeComponent, canActivate: [AuthGuard] },           \n      { path: '', redirectTo: '/home', pathMatch: 'full' }\n    ]\n  },\n  {\n    path: '', component: LayoutComponent, children: [\n      { path: 'configuracoes', component: ConfiguracoesComponent, canActivate: [AuthGuard] },          \n      \n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  title = 'Cliente.app';\n\n}\n\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, LOCALE_ID } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatRippleModule } from '@angular/material/core'; \n\nimport { TemplateModule } from './template/template.module';\nimport { HomeComponent } from './home/home.component';\nimport { ClientesModule } from './clientes/clientes.module';\nimport { ClientesService } from './service/clientes.service';\nimport { FormaPagamentoService } from './service/forma-pagamento.service';\nimport { FormasPagamentosModule } from './formas-pagamentos/formas-pagamentos.module';\nimport { EmpresaService } from './service/empresa.service';\nimport { EmpresaModule } from './empresa/empresa.module';\nimport { ProdutosModule } from './produtos/produtos.module';\nimport { FornecedoresModule } from './fornecedores/fornecedores.module';\nimport { FornecedorService } from './service/fornecedor.service';\nimport { LancamentoService } from './service/lancamento.service';\nimport { LancamentosModule } from './lancamentos/lancamentos.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { LoginComponent } from './login/login.component';\nimport { LayoutComponent } from './layout/layout.component';\nimport { ConfiguracoesComponent } from './configuracoes/configuracoes.component';\nimport { AuthService } from './service/auth.service';\nimport { MascaraUtil } from './util/mascara-util';\nimport { TokenInterceptor } from './token.interceptor';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { DatePipe } from '@angular/common';\nimport { registerLocaleData } from '@angular/common';\nimport ptBr from '@angular/common/locales/pt';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { TextMaskModule } from 'angular2-text-mask';\n\nregisterLocaleData(ptBr, 'pt-BR');\n\n\n\n\n\n@NgModule({\n\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    LayoutComponent,\n    ConfiguracoesComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    TemplateModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatCardModule,\n    HttpClientModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatRippleModule,\n    FlexLayoutModule,\n    ClientesModule,\n    FornecedoresModule,\n    ProdutosModule,    \n    FormasPagamentosModule,\n    EmpresaModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    LancamentosModule,\n    TextMaskModule\n    \n\n  ],\n  providers: [\n    ClientesService,\n    FornecedorService,\n    FormaPagamentoService,\n    EmpresaService,\n    LancamentoService,\n    MascaraUtil,\n    AuthService,\n    DatePipe,\n    {\n      provide: LOCALE_ID, useValue: 'pt-BR'\n    },\n    {\n      provide: MAT_DATE_LOCALE, useValue: 'pt-BR'\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Cliente } from '../cliente';\nimport { ClientesService } from 'src/app/service/clientes.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-cliente-delete',\n  templateUrl: './cliente-delete.component.html',\n  styleUrls: ['./cliente-delete.component.css']\n})\nexport class ClienteDeleteComponent implements OnInit {\n\n \n\n  constructor(\n    public dialogRef: MatDialogRef<ClienteDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public cliente: Cliente\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  fechar() {\n    this.dialogRef.close();\n  }\n\n}\n","<mat-card style=\"text-align: center;\">\n    <mat-card-header>\n\n        <mat-card-title>\n            Confirmar\n        </mat-card-title>\n\n    </mat-card-header>\n\n    <mat-card-content>\n        Deseja Confirma a deleção do(a) Cliente <strong>{{ cliente.nome }}</strong> ?\n    </mat-card-content>\n\n    <mat-card-actions>\n        \n        <button mat-stroked-button color=\"primary\" [mat-dialog-close]=\"true\"> \n            <mat-icon>delete</mat-icon>        \n            Confirmar\n        </button>\n\n        <button mat-stroked-button style=\"color: #868d95;\" (click)=\"fechar()\">     \n            <mat-icon>cancel</mat-icon>      \n            Cancelar\n        </button>\n\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Cliente } from '../cliente';\nimport { ClientesService } from 'src/app/service/clientes.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MascaraUtil } from 'src/app/util/mascara-util';\n\n@Component({\n  selector: 'app-cliente-detalhe',\n  templateUrl: './cliente-detalhe.component.html',\n  styleUrls: ['./cliente-detalhe.component.css']\n})\nexport class ClienteDetalheComponent implements OnInit {\n\n\n  formulario: FormGroup;\n  errors: string;\n  progress = false;\n  mascaraData = MascaraUtil.mascaraNascimento;\n  mascaraCpf = MascaraUtil.mascaraCpf;\n  mascaraRG = MascaraUtil.mascaraRg;\n  mascaraCelular = MascaraUtil.mascaraCelular;\n  mascaraTelefoneFixo = MascaraUtil.mascaraTelefoneFixo;\n\n  constructor(\n    private fb: FormBuilder,\n    private service: ClientesService,\n    public dialogRef: MatDialogRef<ClienteDetalheComponent>,\n    @Inject(MAT_DIALOG_DATA) public clienteAtualizado: Cliente\n  ) { }\n\n  ngOnInit(): void {\n    this.montarFormulario(this.clienteAtualizado);\n  }\n\n  montarFormulario(clienteAtualizar: Cliente) {\n    this.formulario = this.fb.group({\n      id: [clienteAtualizar.id, Validators.required],\n      nome: [clienteAtualizar.nome, Validators.required],\n      cpf: [clienteAtualizar.cpf, Validators.required],\n      rg: [clienteAtualizar.rg],\n      dataNascimento: [clienteAtualizar.dataNascimento, Validators.required],\n      dataCadastro: [{\n        value: clienteAtualizar.dataCadastro,\n        disabled: true\n      }, Validators.required],\n      sexo: [clienteAtualizar.sexo],\n      email: [clienteAtualizar.email, Validators.email],\n      celular: [clienteAtualizar.celular],\n      telefone: [clienteAtualizar.telefone],\n      observacao: [clienteAtualizar.observacao],\n\n      cep1: [clienteAtualizar.cep1],\n      bairro1: [clienteAtualizar.bairro1],\n      lagradouro1: [clienteAtualizar.lagradouro1],\n      complemento1: [clienteAtualizar.complemento1],\n      numero1: [clienteAtualizar.numero1],\n\n      cep2: [clienteAtualizar.cep2],\n      bairro2: [clienteAtualizar.bairro2],\n      lagradouro2: [clienteAtualizar.lagradouro2],\n      complemento2: [clienteAtualizar.complemento2],\n      numero2: [clienteAtualizar.numero2]\n    });\n  }\n\n\n  atualizarCliente() {\n    this.progress = true;\n    this.service.atualizar(this.formulario.value).subscribe(reponse => {\n      this.service.msg('Cliente atualizado com sucesso');\n      this.progress = false;\n    }, errorResponse => {\n      this.errors = errorResponse.error.errors;\n      this.service.msg(this.errors, true);\n      this.progress = false;\n    });\n  }\n\n  buscarCep1(event: Event) {\n    const cep = (event.target as HTMLInputElement).value;\n    this.service\n      .buscarCep(cep)\n      .subscribe(response => {\n        this.formulario.controls.bairro1.setValue(response.bairro);\n        this.formulario.controls.lagradouro1.setValue(response.logradouro);\n        this.formulario.controls.complemento1.setValue(response.complemento);\n      }\n      );\n  }\n\n  buscarCep2(event: Event) {\n    const cep = (event.target as HTMLInputElement).value;\n    this.service\n      .buscarCep(cep)\n      .subscribe(response => {\n        this.formulario.controls.bairro2.setValue(response.bairro);\n        this.formulario.controls.lagradouro2.setValue(response.logradouro);\n        this.formulario.controls.complemento2.setValue(response.complemento);\n      }\n      );\n  }\n\n  fechar() {\n    this.dialogRef.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Atualizar Cadastro</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n        <br>\n        <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n            <ol class=\"breadcrumb mb-4\" fxFlex=\"100\">\n                <li class=\"breadcrumb-item active\"> Dados Pessoais </li>\n            </ol>\n\n        </div>\n\n        <form fxLayout=\"column\" [formGroup]='formulario'>\n\n            <div class=\"input-row\" *ngIf=\"formulario.controls.id.value\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"10\">\n                    <mat-label>ID:</mat-label>\n                    <input matInput value=\"{{ clienteAtualizado.id }}\" disabled>\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"15\">\n                    <mat-label>Data de Cadastro:</mat-label>\n                    <input matInput [textMask]=\"{mask: mascaraData, guide: false}\" value=\"{{ clienteAtualizado.dataCadastro }}\" disabled>\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field class=\"full-width\" fxFlex=\"30\">\n                    <mat-label>Nome completo: </mat-label>\n                    <input matInput formControlName=\"nome\" placeholder=\"Nome completo:\">\n                    <mat-error *ngIf=\"formulario.controls.nome.errors && !formulario.controls.nome.pristine\">\n                        <mat-error *ngIf=\"formulario.controls.nome.errors.required \">\n                            Campo nome é obrigatório.\n                        </mat-error>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"15\" color=\"primary\">\n                    <mat-label>Data de nascimento</mat-label>\n                    <input matInput type=\"date\" formControlName=\"dataNascimento\">\n                    <mat-error *ngIf=\"formulario.controls.dataNascimento.errors && !formulario.controls.dataNascimento.pristine\">\n                        <mat-error *ngIf=\"formulario.controls.dataNascimento.errors.required \">\n                            Campo Data de nascimento é obrigatório.\n                        </mat-error>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"14\">\n                    <mat-label>CPF:</mat-label>\n                    <input matInput formControlName=\"cpf\" [textMask]=\"{mask: mascaraCpf, guide: false}\" placeholder=\"CPF:\">\n                    <mat-error *ngIf=\"formulario.controls.cpf.errors && !formulario.controls.cpf.pristine\">\n                        <mat-error *ngIf=\"formulario.controls.cpf.errors.required \">\n                            Campo cpf é obrigatório.\n                        </mat-error>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"14\">\n                    <mat-label>RG:</mat-label>\n                    <input matInput formControlName=\"rg\" [textMask]=\"{mask: mascaraRG, guide: false}\" placeholder=\"RG:\">\n                </mat-form-field>\n\n                <div fxFlex=10>\n                    <mat-radio-group formControlName=\"sexo\">\n                        <mat-radio-button value=\"M\">Masculino</mat-radio-button>\n                        <mat-radio-button value=\"F\">Feminino</mat-radio-button>\n                    </mat-radio-group>\n                </div>\n\n\n            </div>\n\n\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"30\">\n                    <mat-label>Email:</mat-label>\n                    <input matInput formControlName=\"email\" placeholder=\"Email:\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"15\">\n                    <mat-label>Celular:</mat-label>\n                    <input matInput formControlName=\"celular\" [textMask]=\"{mask: mascaraCelular, guide: false}\" name=\"celular\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"15\">\n                    <mat-label>Telefone:</mat-label>\n                    <input matInput formControlName=\"telefone\" [textMask]=\"{mask: mascaraTelefoneFixo, guide: false}\" name=\"telefone\">\n                </mat-form-field>\n\n            </div>\n\n            <br>\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <ol class=\"breadcrumb mb-4\" fxFlex=\"100\">\n                    <li class=\"breadcrumb-item active\"> Endereço Principal </li>\n                </ol>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>CEP:</mat-label>\n                    <input matInput formControlName=\"cep1\" placeholder=\"CEP:\" (keyup)=\"buscarCep1($event)\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Bairro:</mat-label>\n                    <input matInput formControlName=\"bairro1\" placeholder=\"Endereço:\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Endereço:</mat-label>\n                    <input matInput formControlName=\"lagradouro1\" placeholder=\"Endereço:\">\n                </mat-form-field>\n\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Complemento:</mat-label>\n                    <input matInput formControlName=\"complemento1\" placeholder=\"Complemento:\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>Nº :</mat-label>\n                    <input matInput formControlName=\"numero1\" placeholder=\"Complemento:\">\n                </mat-form-field>\n\n            </div>\n            <br>\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <ol class=\"breadcrumb mb-4\" fxFlex=\"100\">\n                    <li class=\"breadcrumb-item active\"> Endereço Secundário </li>\n                </ol>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>CEP:</mat-label>\n                    <input matInput formControlName=\"cep2\" placeholder=\"CEP:\" (keyup)=\"buscarCep2($event)\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Bairro:</mat-label>\n                    <input matInput formControlName=\"bairro2\" placeholder=\"Endereço:\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Endereço:</mat-label>\n                    <input matInput formControlName=\"lagradouro2\" placeholder=\"Endereço:\">\n                </mat-form-field>\n\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Complemento:</mat-label>\n                    <input matInput formControlName=\"complemento2\" placeholder=\"Complemento:\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>Nº :</mat-label>\n                    <input matInput formControlName=\"numero2\" placeholder=\"Complemento:\">\n                </mat-form-field>\n\n            </div>\n\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                <button mat-stroked-button type=\"submit\" *ngIf=\"!progress\" (click)=\"atualizarCliente()\" [disabled]=\"formulario.invalid\" color=\"primary\"> \n                    <mat-icon>refresh</mat-icon>                              \n                    Atualizar\n                </button>\n\n                <button mat-stroked-button style=\"color: #868d95;\" *ngIf=\"!progress\" (click)=\"fechar()\">     \n                    <mat-icon>cancel</mat-icon>      \n                    Cancelar\n                </button>\n\n            </div>\n\n            <br>\n        </form>\n\n    </mat-card-content>\n</mat-card>","export class Cliente {\r\n\r\n    id: number;\r\n    nome: string;\r\n    cpf: string;\r\n    rg: string;\r\n    dataCadastro: string;\r\n    dataNascimento: string;\r\n    sexo: string;\r\n    email: string;\r\n    celular: string;\r\n    telefone: string;\r\n    observacao: string;\r\n\r\n    cep1: string;\r\n    bairro1: string;\r\n    lagradouro1: string;\r\n    complemento1: string;\r\n    numero1: string;\r\n\r\n    cep2: string;\r\n    bairro2: string;\r\n    lagradouro2: string;\r\n    complemento2: string;\r\n    numero2: string;\r\n\r\n}\r\n","import { Component, OnInit, LOCALE_ID, Inject, ViewChild, TemplateRef } from '@angular/core';\nimport { Cliente } from '../cliente';\nimport { ClientesService } from 'src/app/service/clientes.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MascaraUtil } from 'src/app/util/mascara-util';\nimport { ClienteDeleteComponent } from '../cliente-delete/cliente-delete.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ClienteDetalheComponent } from '../cliente-detalhe/cliente-detalhe.component';\nimport { PageEvent } from '@angular/material/paginator';\n\n\n@Component({\n  selector: 'app-cliente',\n  templateUrl: './cliente.component.html',\n  styleUrls: ['./cliente.component.css'],\n})\n\nexport class ClienteComponent implements OnInit {\n\n  // mascaras para o formulário\n  mascaraData = MascaraUtil.mascaraNascimento;\n  mascaraCpf = MascaraUtil.mascaraCpf;\n  mascaraRg = MascaraUtil.mascaraRg;\n  mascaraCelular = MascaraUtil.mascaraCelular;\n  mascaraTelefoneFixo = MascaraUtil.mascaraTelefoneFixo;\n  errors: string;\n\n\n  formulario: FormGroup;\n  colunas = ['id', 'nome', 'cpf', 'dataCadastro', 'detalhes', 'apagar'];\n  dataSource = new MatTableDataSource<Cliente>();\n  progress = false;\n\n\n  clientes: Cliente[] = [];\n  clientenovo: Cliente;\n\n  totalElementos = 0;\n  pagina = 0;\n  tamanho = 4;\n  pageSizeOptions: number[] = [2, 4, 6, 10];\n  filtroTable;\n\n\n  constructor(\n    @Inject(LOCALE_ID) locale: string,\n    private service: ClientesService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n  ) {\n    this.clientenovo = new Cliente();\n  }\n\n  ngOnInit(): void {\n    this.listaClientes(this.pagina, this.tamanho);\n    this.montarFormulario(this.clientenovo);\n  }\n\n\n  montarFormulario(clienteForm: Cliente) {\n\n    this.formulario = this.fb.group({\n      id: [clienteForm.id],\n      nome: [clienteForm.nome, Validators.required],\n      cpf: [clienteForm.cpf, Validators.required],\n      rg: [clienteForm.rg],\n      dataNascimento: [clienteForm.dataNascimento, Validators.required],\n      dataCadastro: [{\n        value: clienteForm.dataCadastro,\n        disabled: true\n      }],\n      sexo: [clienteForm.sexo],\n      email: [clienteForm.email, Validators.email],\n      celular: [clienteForm.celular],\n      telefone: [clienteForm.telefone],\n      observacao: [clienteForm.observacao],\n\n      cep1: [clienteForm.cep1],\n      bairro1: [clienteForm.bairro1],\n      lagradouro1: [clienteForm.lagradouro1],\n      complemento1: [clienteForm.complemento1],\n      numero1: [clienteForm.numero1],\n\n      cep2: [clienteForm.cep2],\n      bairro2: [clienteForm.bairro2],\n      lagradouro2: [clienteForm.lagradouro2],\n      complemento2: [clienteForm.complemento2],\n      numero2: [clienteForm.numero2]\n\n    });\n  }\n\n  listaClientes(pagina = 0, tamanho = 4) {\n    this.service.getClienteAll(pagina, tamanho)\n      .subscribe(response => {\n        this.clientes = response.content;\n        this.totalElementos = response.totalElements;\n        this.pagina = response.number;\n        this.dataSource.data = this.clientes;\n      },\n        errorResponse => {\n          this.service.msg('Error ao Carregar Clientes', true);\n        });\n  }\n\n\n  applyFilter(event: Event) {\n    this.filtroTable = (event.target as HTMLInputElement).value;\n    this.service.buscarCliente(this.filtroTable, 0, 4)\n      .subscribe(response => {\n        this.clientes = response.content,\n          this.totalElementos = response.totalElements;\n        this.pagina = response.number;\n        this.dataSource.data = this.clientes;\n      },\n        errorResponse => {\n          this.service.msg('erro ao buscar', true);\n        });\n    this.dataSource.filter = this.filtroTable.trim().toLowerCase();\n\n  }\n\n  submit() {\n    this.progress = true;\n    this.service\n      .salvar(this.formulario.value)\n      .subscribe(response => {\n        this.service.msg('Cliente salvo com sucesso.');\n        this.formulario.setValue(response);\n        this.clientenovo = response;\n        this.listaClientes();\n        this.progress = false;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n  }\n\n  atualizarCliente(event: Event) {\n    event.preventDefault();\n    this.progress = true;\n    this.service.atualizar(this.formulario.value)\n      .subscribe(reponse => {\n        this.service.msg('Cliente atualizado.');\n        this.progress = false;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n  }\n\n  novoCliente(event: Event) {\n    event.preventDefault();\n    this.clientenovo = new Cliente();\n    this.formulario.reset();\n  }\n\n  preparaDelecaoForm(cliente: Cliente, event: Event) {\n    event.preventDefault();\n    this.dialog.open(ClienteDeleteComponent, {\n      data: cliente\n    }).afterClosed().subscribe(responseClose => {\n      if (responseClose) {\n        this.progress = true;\n        this.service.deletar(cliente)\n          .subscribe(responseDelete => {\n            this.service.msg('Cliente deletado!');\n            this.clientenovo = new Cliente();\n            this.formulario.reset();\n            this.progress = false;\n          }, errorResponse => {\n            this.service.msg('Ocorreu um erro ao deletar o Cliente!', true);\n            this.progress = false;\n          });\n      }\n    });\n  }\n\n  preparaDelecaoList(cliente: Cliente, event: Event) {\n    event.preventDefault();\n    this.dialog.open(ClienteDeleteComponent, {\n      data: cliente\n    }).afterClosed().subscribe(response => {\n      if (response) {      \n        this.service.deletar(cliente)\n          .subscribe(responseDelete => {\n            this.service.msg('Cliente deletado com sucesso!');\n            if (!this.filtroTable) {\n              this.listaClientes(this.pagina, this.tamanho);              \n            } else {\n              this.service.buscarCliente(this.filtroTable, this.pagina, this.tamanho)\n                .subscribe(responseFilter => {\n                  this.clientes = responseFilter.content;\n                  this.totalElementos = responseFilter.totalElements;\n                  this.pagina = responseFilter.number;\n                  this.dataSource.data = this.clientes;\n                });\n            }\n            this.progress = false;\n          }, errorResponse => {\n            this.service.msg('Ocorreu um erro ao deletar o cliente', true),\n              this.progress = false;\n          });\n      }\n    });\n\n  }\n\n  detalhesCliente(cliente: Cliente) {\n    this.dialog.open(ClienteDetalheComponent, {\n      height: '500px',\n      width: '850px',\n      data: cliente\n    }).afterClosed().subscribe(response => {\n      if (!this.filtroTable) {\n        this.listaClientes(this.pagina, this.tamanho);\n      } else {\n        this.service.buscarCliente(this.filtroTable, this.pagina, this.tamanho)\n          .subscribe(responseAt => {\n            this.clientes = responseAt.content;\n            this.totalElementos = responseAt.totalElements;\n            this.pagina = responseAt.number;\n            this.dataSource.data = this.clientes;\n          });\n      }\n    });\n  }\n\n\n  buscarCep1(event: Event) {\n    const cep = (event.target as HTMLInputElement).value;\n    this.service\n      .buscarCep(cep)\n      .subscribe(response => {\n        this.formulario.controls.bairro1.setValue(response.bairro);\n        this.formulario.controls.lagradouro1.setValue(response.logradouro);\n        this.formulario.controls.complemento1.setValue(response.complemento);\n      }\n      );\n  }\n\n  buscarCep2(event: Event) {\n    const cep = (event.target as HTMLInputElement).value;\n    this.service\n      .buscarCep(cep)\n      .subscribe(response => {\n        this.formulario.controls.bairro2.setValue(response.bairro);\n        this.formulario.controls.lagradouro2.setValue(response.logradouro);\n        this.formulario.controls.complemento2.setValue(response.complemento);\n      }\n      );\n  }\n\n  paginar(event: PageEvent) {\n    if (!this.filtroTable) {\n      this.pagina = event.pageIndex;\n      this.tamanho = event.pageSize;\n      this.listaClientes(this.pagina, this.tamanho);\n    } else {\n      this.pagina = event.pageIndex;\n      this.tamanho = event.pageSize;\n      this.service.buscarCliente(this.filtroTable, this.pagina, this.tamanho)\n        .subscribe(response => {\n          this.clientes = response.content;\n            this.totalElementos = response.totalElements;\n          this.pagina = response.number;\n          this.dataSource.data = this.clientes;\n        });\n    }\n  }\n\n}\n\n","<br>\n<mat-tab-group>\n    <mat-tab label=\"Novo cliente\">\n        <ng-template mat-tab-label>\n            <mat-icon>add</mat-icon>\n            Novo Cliente\n        </ng-template>\n\n        <mat-card>\n\n            <br><br>\n\n            <mat-card-title>Cadastro</mat-card-title> <br>\n\n\n            <mat-divider></mat-divider> <br>\n\n            <mat-card-content>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                    fxLayoutGap.lt-md=\"0px\">\n                    <mat-card-subtitle fxFlex=\"100\">\n                        <ol class=\"breadcrumb mb-4\">\n                            <li class=\"breadcrumb-item active\"> Dados Pessoais </li>\n                        </ol>\n                    </mat-card-subtitle>\n                </div>\n\n\n                <form fxLayout=\"column\" [formGroup]='formulario' (ngSubmit)=\"submit()\">\n\n\n\n                    <div class=\"input-row\" *ngIf=\"formulario.controls.id.value\" fxLayout=\"row\" fxLayout.lt-md=\"column\"\n                        fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>ID :</mat-label>\n                            <input matInput value=\"{{ clientenovo.id }}\" disabled>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>Data de Cadastro :</mat-label>\n                            <input matInput [textMask]=\"{mask: mascaraData, guide: false}\"\n                                value=\"{{ clientenovo.dataCadastro }}\" disabled>\n                        </mat-form-field>\n\n                    </div>\n \n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field class=\"full-width\" fxFlex=\"30\">\n                            <mat-label>Nome Completo: </mat-label>\n                            <input matInput formControlName=\"nome\" placeholder=\"Nome Completo:\">                           \n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"15\" color=\"primary\">\n                            <mat-label>Data de nascimento</mat-label>\n                            <input matInput type=\"date\" formControlName=\"dataNascimento\">\n                            <mat-error\n                                *ngIf=\"formulario.controls.dataNascimento.errors && !formulario.controls.dataNascimento.pristine\">\n                                <mat-error *ngIf=\"formulario.controls.dataNascimento.errors.required \">\n                                    Campo Data de nascimento é obrigatório.\n                                </mat-error>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"12\">\n                            <mat-label>CPF:</mat-label>\n                            <input matInput formControlName=\"cpf\" [textMask]=\"{mask: mascaraCpf, guide: false}\"\n                                placeholder=\"CPF:\">\n                            <mat-error *ngIf=\"formulario.controls.cpf.errors && !formulario.controls.cpf.pristine\">\n                                <mat-error *ngIf=\"formulario.controls.cpf.errors.required \">\n                                    Campo cpf é obrigatório.\n                                </mat-error>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"13\">\n                            <mat-label>RG:</mat-label>\n                            <input matInput formControlName=\"rg\" placeholder=\"RG:\"\n                                [textMask]=\"{mask: mascaraRg, guide: false}\">\n                        </mat-form-field>\n\n                        <div fxFlex=10>\n                            <mat-radio-group formControlName=\"sexo\">\n                                <mat-radio-button value=\"M\">Masculino</mat-radio-button>\n                                <mat-radio-button value=\"F\">Feminino</mat-radio-button>\n                            </mat-radio-group>\n                        </div>\n\n\n                    </div>\n\n\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"30\">\n                            <mat-label>Email:</mat-label>\n                            <input matInput formControlName=\"email\" placeholder=\"Email:\">\n                            <mat-error *ngIf=\"formulario.controls.email.errors && !formulario.controls.email.pristine\">\n                                <mat-error *ngIf=\"formulario.controls.email.errors.email\">\n                                    Email inválido\n                                </mat-error>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>Celular:</mat-label>\n                            <input matInput formControlName=\"celular\" [textMask]=\"{mask: mascaraCelular, guide: false}\"\n                                name=\"celular\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"12\">\n                            <mat-label>Telefone:</mat-label>\n                            <input matInput formControlName=\"telefone\"\n                                [textMask]=\"{mask: mascaraTelefoneFixo, guide: false}\" name=\"telefone\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n                        <mat-card-subtitle fxFlex=\"100\">\n                            <ol class=\"breadcrumb mb-4\">\n                                <li class=\"breadcrumb-item active\"> Endereço Principal </li>\n                            </ol>\n                        </mat-card-subtitle>\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"12\">\n                            <mat-label>CEP:</mat-label>\n                            <input matInput formControlName=\"cep1\" placeholder=\"CEP:\" (keyup)=\"buscarCep1($event)\">\n                        </mat-form-field>\n\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Bairro:</mat-label>\n                            <input matInput formControlName=\"bairro1\" placeholder=\"Endereço:\">\n                        </mat-form-field>\n\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Endereço:</mat-label>\n                            <input matInput formControlName=\"lagradouro1\" placeholder=\"Endereço:\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Complemento:</mat-label>\n                            <input matInput formControlName=\"complemento1\" placeholder=\"Complemento:\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Nº :</mat-label>\n                            <input matInput formControlName=\"numero1\" placeholder=\"Complemento:\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n                        <mat-card-subtitle fxFlex=\"100\">\n                            <ol class=\"breadcrumb mb-4\">\n                                <li class=\"breadcrumb-item active\"> Endereço Secundário </li>\n                            </ol>\n                        </mat-card-subtitle>\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"12\">\n                            <mat-label>CEP:</mat-label>\n                            <input matInput formControlName=\"cep2\" placeholder=\"CEP:\" (keyup)=\"buscarCep2($event)\">\n                        </mat-form-field>\n\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Bairro:</mat-label>\n                            <input matInput formControlName=\"bairro2\" placeholder=\"Endereço:\">\n                        </mat-form-field>\n\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Endereço:</mat-label>\n                            <input matInput formControlName=\"lagradouro2\" placeholder=\"Endereço:\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Complemento:</mat-label>\n                            <input matInput formControlName=\"complemento2\" placeholder=\"Complemento:\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Nº :</mat-label>\n                            <input matInput formControlName=\"numero2\" placeholder=\"Complemento:\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\">\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>Observação:</mat-label>\n                            <textarea matInput formControlName=\"observacao\" name=\"observacao\"></textarea>\n                        </mat-form-field>\n                    </div>\n                    <br>\n\n                    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                        <button mat-stroked-button [disabled]=\"formulario.invalid\" type=\"submit\"\n                            *ngIf=\"!formulario.controls.id.value && !progress\" color=\"primary\">\n                            <mat-icon>save</mat-icon>\n                            Cadastrar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formulario.controls.id.value && !progress\"\n                            [disabled]=\"formulario.invalid\" (click)=\"atualizarCliente($event)\" color=\"primary\">\n                            <mat-icon>refresh</mat-icon>\n                            Atualizar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formulario.controls.id.value && !progress\"\n                            (click)=\"preparaDelecaoForm(formulario.value, $event)\" color=\"warn\">\n                            <mat-icon>delete</mat-icon>\n                            Apagar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formulario.controls.id.value && !progress\"\n                            (click)=\"novoCliente($event)\" style=\" color: #28a745\">\n                            <mat-icon>add</mat-icon>\n                            Novo Cliente\n                        </button>\n\n                    </div>\n\n                    <br>\n                </form>\n\n            </mat-card-content>\n        </mat-card>\n    </mat-tab>\n\n    <mat-tab label=\"Clientes\">\n        <ng-template mat-tab-label>\n            <mat-icon>list</mat-icon>\n            Clientes\n        </ng-template>\n        <mat-card>\n\n            <br><br>\n\n            <mat-card-title>Clientes</mat-card-title> <br>\n\n            <mat-card-content>\n\n                <mat-divider></mat-divider> <br>\n\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Buscar Cliente</mat-label>\n                    <input matInput placeholder=\"Buscar\" (keyup)=\"applyFilter($event)\">\n                </mat-form-field>\n\n                <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 full-width\">\n\n\n                    <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef> ID </th>\n                        <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"nome\">\n                        <th mat-header-cell *matHeaderCellDef>Nome</th>\n                        <td mat-cell *matCellDef=\"let cliente\">{{ cliente.nome }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"cpf\">\n                        <th mat-header-cell *matHeaderCellDef>CPF</th>\n                        <td mat-cell *matCellDef=\"let cliente\">{{ cliente.cpf }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"dataCadastro\">\n                        <th mat-header-cell *matHeaderCellDef>Data de Cadastro</th>\n                        <td mat-cell *matCellDef=\"let cliente\">{{ cliente.dataCadastro }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"detalhes\">\n                        <th mat-header-cell *matHeaderCellDef>Detalhes</th>\n                        <td mat-cell *matCellDef=\"let cliente\">\n                            <button mat-icon-button (click)=\"detalhesCliente(cliente)\">\n                                <mat-icon color=\"primary\">assignment</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"apagar\">\n                        <th mat-header-cell *matHeaderCellDef>Apagar</th>\n                        <td mat-cell *matCellDef=\"let cliente\">\n                            <button mat-icon-button (click)=\"preparaDelecaoList(cliente, $event)\">\n                                <mat-icon color=\"warn\">delete_forever</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"colunas\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: colunas;\"></tr>\n                </table>\n\n                <mat-paginator [length]=\"totalElementos\" [pageIndex]=\"pagina\" [pageSize]=\"tamanho\"\n                    [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons (page)=\"paginar($event)\"></mat-paginator>\n\n            </mat-card-content>\n\n        </mat-card>\n\n    </mat-tab>\n</mat-tab-group>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ClienteComponent } from './cliente/cliente.component';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { AuthGuard } from '../guard/auth.guard';\n\n\n\n\nconst routes: Routes = [\n  {\n    path: 'clientes', component: LayoutComponent, canActivate: [AuthGuard], children: [\n\n      { path: 'principal', component: ClienteComponent },\n      { path: '', redirectTo: '/clientes/principal', pathMatch: 'full' }\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ClientesRoutingModule { }\n","import { CommonModule} from '@angular/common';\n\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { TextMaskModule } from 'angular2-text-mask';\n\nimport { ClienteDeleteComponent } from './cliente-delete/cliente-delete.component';\nimport { ClienteDetalheComponent } from './cliente-detalhe/cliente-detalhe.component';\nimport { ClientesRoutingModule } from './clientes-routing.module';\nimport { ClienteComponent } from './cliente/cliente.component';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n\n\n@NgModule({\n  declarations: [\n    ClienteComponent,\n    ClienteDeleteComponent,\n    ClienteDetalheComponent\n\n\n  ],\n  imports: [\n    CommonModule,\n    ClientesRoutingModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatIconModule,\n    MatDividerModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    TextMaskModule,\n    MatPaginatorModule,\n    \n  ],\n  exports: [\n    ClienteComponent,\n    ClienteDeleteComponent,\n    ClienteDetalheComponent\n  ]\n})\nexport class ClientesModule {\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configuracoes',\n  templateUrl: './configuracoes.component.html',\n  styleUrls: ['./configuracoes.component.css']\n})\nexport class ConfiguracoesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Configurações</mat-card-title> <br>\n    <mat-divider></mat-divider><br>    \n    <ol class=\"breadcrumb mb-4\">\n        <li class=\"breadcrumb-item active\">Configurações</li>\n    </ol>\n    \n    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n    \n        <div class=\"zoom configuracao\">\n            <div class=\"configuracao\" mat-ripple routerLink=\"/empresa/\">\n            </div>\n        </div>\n    \n    </div>\n</mat-card>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { AuthGuard } from '../guard/auth.guard';\nimport { EmpresaComponent } from './empresa/empresa.component';\n\nconst routes: Routes = [\n  {\n    path: 'empresa', component: LayoutComponent, canActivate: [AuthGuard], children: [\n\n      { path: 'principal', component: EmpresaComponent },\n      { path: '', redirectTo: '/empresa/principal', pathMatch: 'full' }\n\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmpresaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmpresaRoutingModule } from './empresa-routing.module';\nimport { EmpresaComponent } from './empresa/empresa.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { LogoModalComponent } from './logo-modal/logo-modal.component';\n\n\n@NgModule({\n  declarations: [EmpresaComponent, LogoModalComponent],\n  imports: [\n    CommonModule,\n    EmpresaRoutingModule,\n    FormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatIconModule,\n    MatDividerModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatPaginatorModule,\n    TextMaskModule,\n    \n  ],\n  exports:[\n    EmpresaComponent,\n    LogoModalComponent\n  ]\n})\nexport class EmpresaModule { }\n","export class Empresa{\r\n    id: number;\r\n    cnpj: string;\r\n    nomeFantasia: string;\r\n    razaoSocial: string;\r\n    logoTipo: string;\r\n    areaAtuacao: string;\r\n    inscricaoEstadual: string;\r\n    inscricaoMunicipal: string;\r\n    telefone: string;\r\n    celular: string;\r\n    endereco: string;\r\n    numero: string;\r\n    bairro: string;\r\n    cidade: string;\r\n    estado: string;\r\n    cep: string;\r\n    email: string;       \r\n}","import { Component, OnInit } from '@angular/core';\nimport { Empresa } from '../empresa';\nimport { EmpresaService } from 'src/app/service/empresa.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MascaraUtil } from 'src/app/util/mascara-util';\nimport { BuscarCepService } from 'src/app/service/buscar-cep.service';\nimport { LogoModalComponent } from '../logo-modal/logo-modal.component';\n\n@Component({\n  selector: 'app-empresa',\n  templateUrl: './empresa.component.html',\n  styleUrls: ['./empresa.component.css']\n})\nexport class EmpresaComponent implements OnInit {\n\n  progress = false;\n  errors: string;\n  empresa: Empresa;  \n  formulario: FormGroup;\n\n  mascaraCnpj = MascaraUtil.mascaraCnpj;\n  mascaraCelular = MascaraUtil.mascaraCelular;\n  mascaraTelefoneFixo = MascaraUtil.mascaraTelefoneFixo;\n  \n  constructor(\n    private service: EmpresaService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private cep: BuscarCepService,\n  ) {\n    this.empresa = new Empresa();\n   }\n\n  ngOnInit(): void {\n    this.formularioEmpresa(this.empresa)\n    this.carregarEmpresa();\n  }\n\n  formularioEmpresa(empresa: Empresa) {\n    this.formulario = this.fb.group({\n      id: [empresa.id],\n      cnpj: [empresa.cnpj, Validators.required],\n      nomeFantasia: [empresa.nomeFantasia, Validators.required],\n      razaoSocial: [empresa.razaoSocial, Validators.required],      \n      areaAtuacao: [empresa.areaAtuacao],\n      inscricaoEstadual: [empresa.inscricaoEstadual],\n      inscricaoMunicipal: [empresa.inscricaoMunicipal],  \n      logoTipo: [empresa.logoTipo], \n      telefone: [empresa.telefone],   \n      celular: [empresa.celular],   \n      endereco: [empresa.endereco],   \n      numero: [empresa.numero],  \n      bairro: [empresa.bairro],  \n      cidade: [empresa.cidade],  \n      estado: [empresa.estado],  \n      cep: [empresa.cep],  \n      email: [empresa.email],  \n    });\n  }\n\n  carregarEmpresa(){\n    this.service.carregar().subscribe(response => {          \n      this.empresa = response;\n      this.formulario.setValue(this.empresa);\n    \n    });\n  }\n\n  \n\n  Submit() {\n    console.log('Salvando....');\n    this.progress = true;\n    console.log(this.formulario.value);\n    this.service.salvar(this.formulario.value)\n      .subscribe(response => {\n        this.formulario.setValue(response);\n        this.empresa = response;\n        this.progress = false;\n        this.service.msg('Salvo com sucesso');        \n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      })\n  }\n\n  atualizaEmpresa(event: Event){\n    event.preventDefault();\n    this.progress = true;\n    this.service.atualizar(this.formulario.value)\n      .subscribe(reponse => {\n        this.service.msg('Atualizado.');\n        this.progress = false;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n  }\n\n  buscarCep(event: Event) {\n    const cep = (event.target as HTMLInputElement).value;\n    this.cep\n      .buscarCep(cep)\n      .subscribe(response => {\n        this.formulario.controls.bairro.setValue(response.bairro);\n        this.formulario.controls.endereco.setValue(response.logradouro);\n        this.formulario.controls.estado.setValue(response.uf);\n        this.formulario.controls.cidade.setValue(response.localidade);\n      }\n      );\n  }\n\n  uploadLogo(event, empresa){\n    const files = event.target.files;\n    if(files){\n      const foto = files[0];\n      const formData: FormData = new FormData();\n      formData.append(\"foto\", foto);\n      this.service\n      .upload(empresa, formData)\n      .subscribe(response => this.carregarEmpresa());\n    }\n  }\n\n  visualizarFoto(event : Event){\n    event.preventDefault();\n    this.dialog.open(LogoModalComponent, {      \n      data: this.empresa\n    }).afterClosed().subscribe(responseClose => {\n      this.ngOnInit();\n    });\n  }\n}\n\n","<mat-card>\n\n    <mat-card-title>Empresa</mat-card-title> <br>\n    <mat-divider></mat-divider><br>    \n    \n    <mat-card-content>\n        <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n            <mat-card-subtitle fxFlex=\"100\">\n                <ol class=\"breadcrumb mb-4\">\n                    <li class=\"breadcrumb-item active\"> Dados da Empresa </li>\n                </ol>\n            </mat-card-subtitle>\n        </div>\n\n        <div *ngIf=\"empresa.logoTipo\">\n            <span class=\"spacer\"></span>\n            <img width=\"100\" height=\"100\" src=\"data:image/jpg;base64,{{ empresa.logoTipo }}\"\n                (click)=\"visualizarFoto($event)\">\n        </div>  \n    \n<br> <mat-divider></mat-divider><br>\n        <form fxLayout=\"column\" [formGroup]=\"formulario\" (ngSubmit)=\"Submit()\">\n\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\"\n                *ngIf=\"formulario.controls.id.value\">\n\n                <div *ngIf=\"!empresa.logoTipo\" fxFlex=\"15\">\n\n                    <mat-label>Logo</mat-label><br>\n                    <input type=\"file\" formControlName=\"logoTipo\" (change)=\"uploadLogo($event, empresa)\">\n                    <br><br>\n                </div>\n\n               \n\n            </div>   \n                          \n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field class=\"full-width\" fxFlex=\"40\">\n                    <mat-label>Razão Social:</mat-label>\n                    <input matInput formControlName=\"razaoSocial\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"40\">\n                    <mat-label>Nome Fantasia:</mat-label>\n                    <input matInput formControlName=\"nomeFantasia\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"20\">\n                    <mat-label>CNPJ:</mat-label>\n                    <input matInput formControlName=\"cnpj\" [textMask]=\"{mask: mascaraCnpj, guide: false}\">\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"20\">\n                    <mat-label>Inscrição Estadual:</mat-label>\n                    <input matInput formControlName=\"inscricaoEstadual\"  maxlength=\"20\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"20\">\n                    <mat-label>Inscrição Municipal:</mat-label>\n                    <input matInput formControlName=\"inscricaoMunicipal\" maxlength=\"20\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"40\">\n                    <mat-label>Área de Atuação:</mat-label>\n                    <input matInput formControlName=\"areaAtuacao\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"10\">\n                    <mat-label>Celular:</mat-label>\n                    <input matInput formControlName=\"celular\" [textMask]=\"{mask: mascaraCelular, guide: false}\"\n                        name=\"celular\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"10\">\n                    <mat-label>Telefone:</mat-label>\n                    <input matInput formControlName=\"telefone\" [textMask]=\"{mask: mascaraTelefoneFixo, guide: false}\"\n                        name=\"telefone\">\n                </mat-form-field>\n\n            </div>\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>CEP:</mat-label>\n                    <input matInput formControlName=\"cep\" placeholder=\"CEP:\" (keyup)=\"buscarCep($event)\" maxlength=\"9\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Bairro:</mat-label>\n                    <input matInput formControlName=\"bairro\" placeholder=\"Endereço:\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Endereço:</mat-label>\n                    <input matInput formControlName=\"endereco\" placeholder=\"Endereço:\">\n                </mat-form-field>\n\n\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"30\">\n                    <mat-label>Cidade:</mat-label>\n                    <input matInput formControlName=\"cidade\" placeholder=\"Cidade :\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>Estado:</mat-label>\n                    <input matInput formControlName=\"estado\" placeholder=\"Estado :\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>Nº:</mat-label>\n                    <input matInput formControlName=\"numero\" placeholder=\"Complemento:\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"30\">\n                    <mat-label>Email:</mat-label>\n                    <input matInput formControlName=\"email\" placeholder=\"Email:\">\n                    <mat-error *ngIf=\"formulario.controls.email.errors && !formulario.controls.email.pristine\">\n                        <mat-error *ngIf=\"formulario.controls.email.errors.email\">\n                            Email inválido\n                        </mat-error>\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                <button mat-stroked-button [disabled]=\"formulario.invalid\" type=\"submit\"\n                    *ngIf=\"!formulario.controls.id.value && !progress\" color=\"primary\">\n                    <mat-icon>save</mat-icon>\n                    Cadastrar\n                </button>\n\n                <button mat-stroked-button *ngIf=\"formulario.controls.id.value && !progress\"\n                    (click)=\"atualizaEmpresa($event)\" [disabled]=\"formulario.invalid\" color=\"primary\">\n                    <mat-icon>refresh</mat-icon>\n                    Atualizar\n                </button>\n            </div>\n        </form>\n    </mat-card-content>\n\n</mat-card>","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { EmpresaService } from 'src/app/service/empresa.service';\nimport { Empresa } from '../empresa';\n\n@Component({\n  selector: 'app-logo-modal',\n  templateUrl: './logo-modal.component.html',\n  styleUrls: ['./logo-modal.component.css']\n})\nexport class LogoModalComponent implements OnInit {\n\n  constructor(\n    private service: EmpresaService,\n    public dialogRef: MatDialogRef<LogoModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public empresa: Empresa\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  fechar() {\n    this.dialogRef.close();\n  }\n\n  apagarLogo(){       \n    this.service.apagarlogo(this.empresa)\n    .subscribe(response => this.fechar()); \n   \n  }\n}\n","<div >\n    <img width=\"400\" height=\"400\" src=\"data:image/jpg;base64,{{ empresa.logoTipo }}\">\n</div>\n\n<button mat-icon-button (click)=\"apagarLogo()\"> \n    <mat-icon color=\"warn\">delete_forever</mat-icon>\n  </button>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormaPagamento } from '../forma-pagamento';\n\n@Component({\n  selector: 'app-forma-pagamento-delete',\n  templateUrl: './forma-pagamento-delete.component.html',\n  styleUrls: ['./forma-pagamento-delete.component.css']\n})\nexport class FormaPagamentoDeleteComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<FormaPagamentoDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public formaPagamento: FormaPagamento\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  fechar() {\n    this.dialogRef.close();\n  }\n\n\n}\n","<mat-card style=\"text-align: center;\">\n    <mat-card-header>\n\n        <mat-card-title>\n            Confirmar\n        </mat-card-title>\n\n    </mat-card-header>\n\n    <mat-card-content>\n        Deseja Confirma a deleção do(a) Cliente <strong>{{ formaPagamento.descricao }}</strong> ?\n    </mat-card-content>\n\n    <mat-card-actions>\n        \n        <button mat-stroked-button color=\"primary\" [mat-dialog-close]=\"true\"> \n            <mat-icon>delete</mat-icon>        \n            Confirmar\n        </button>\n\n        <button mat-stroked-button style=\"color: #868d95;\" (click)=\"fechar()\">     \n            <mat-icon>cancel</mat-icon>      \n            Cancelar\n        </button>\n\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { FormaPagamento } from '../forma-pagamento';\nimport { FormaPagamentoService } from 'src/app/service/forma-pagamento.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-forma-pagamento-detalhe',\n  templateUrl: './forma-pagamento-detalhe.component.html',\n  styleUrls: ['./forma-pagamento-detalhe.component.css']\n})\nexport class FormaPagamentoDetalheComponent implements OnInit {\n\n  formulario: FormGroup;\n  errors: string;\n  progress = false;\n\n  constructor(\n    private service: FormaPagamentoService,\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<FormaPagamentoDetalheComponent>,\n    @Inject(MAT_DIALOG_DATA) public formaPagamentoAtualizado: FormaPagamento\n  ) { \n   \n  }\n\n  ngOnInit(): void {\n    this.formularioFormaPagamento(this.formaPagamentoAtualizado);\n  }\n\n  formularioFormaPagamento(formFp: FormaPagamento) {\n    this.formulario = this.fb.group({\n      id: [formFp.id],\n      tipoPagamento: [formFp.tipoPagamento, Validators.required],\n      descricao: [formFp.descricao, Validators.required],\n      taxa: [formFp.taxa]\n    });\n  }\n\n  atualizarFormaPagamento() {\n    this.progress = true;\n    this.service.atualizar(this.formulario.value).subscribe(reponse => {\n      this.service.msg('Atualizado com sucesso!');\n      this.progress = false;\n    }, errorResponse => {\n      this.errors = errorResponse.error.errors;\n      this.service.msg(this.errors, true);\n      this.progress = false;\n    });\n  }\n\n  fechar() {\n    this.dialogRef.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Atualizar</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n\n        <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n            <mat-card-subtitle fxFlex=\"100\">\n                <ol class=\"breadcrumb mb-4\">\n                    <li class=\"breadcrumb-item active\">  Forma de Pagamento </li>\n                </ol>\n            </mat-card-subtitle>\n        </div>\n\n        <form fxLayout=\"column\" [formGroup]=\"formulario\">\n        \n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\" *ngIf=\"formaPagamentoAtualizado.id\">\n\n                <mat-form-field fxFlex=\"15\">\n                    <mat-label>ID :</mat-label>\n                    <input matInput value=\"{{ formaPagamentoAtualizado.id }}\" disabled>\n                </mat-form-field>                  \n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field class=\"full-width\" fxFlex=\"90\">\n                    <mat-label>Descrição</mat-label>\n                    <input matInput formControlName=\"descricao\">\n                </mat-form-field>\n\n                <mat-form-field class=\"taxa\" >\n                    <mat-label>Taxa</mat-label>\n                    <input matInput formControlName=\"taxa\">\n                </mat-form-field>      \n\n            </div>\n\n            <div fxFlex=10>\n                <mat-radio-group formControlName=\"tipoPagamento\">\n                    <mat-radio-button value=\"cc\">Cartão de Crédito</mat-radio-button>\n                    <mat-radio-button value=\"cd\">Cartão de Débito</mat-radio-button>\n                    <mat-radio-button value=\"bo\">Boleto</mat-radio-button>\n                    <mat-radio-button value=\"di\">Dinheiro</mat-radio-button>\n                </mat-radio-group>                                          \n            </div>\n\n        \n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                <button mat-stroked-button type=\"submit\" *ngIf=\"!progress\" (click)=\"atualizarFormaPagamento()\" [disabled]=\"formulario.invalid\" color=\"primary\"> \n                    <mat-icon>refresh</mat-icon>                              \n                    Atualizar\n                </button>\n\n                <button mat-stroked-button style=\"color: #868d95;\" *ngIf=\"!progress\" (click)=\"fechar()\">     \n                    <mat-icon>cancel</mat-icon>      \n                    Cancelar\n                </button>\n\n            </div>           \n\n        </form>\n\n    </mat-card-content>\n</mat-card>","export class FormaPagamento {\r\n    id: number;\r\n    tipoPagamento: string;\r\n    descricao: string;\r\n    taxa: number;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { FormaPagamentoService } from 'src/app/service/forma-pagamento.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormaPagamento } from '../forma-pagamento';\nimport { FormaPagamentoDeleteComponent } from '../forma-pagamento-delete/forma-pagamento-delete.component';\nimport { PageEvent } from '@angular/material/paginator';\nimport { FormaPagamentoDetalheComponent } from '../forma-pagamento-detalhe/forma-pagamento-detalhe.component';\n\n@Component({\n  selector: 'app-forma-pagamento',\n  templateUrl: './forma-pagamento.component.html',\n  styleUrls: ['./forma-pagamento.component.css']\n})\nexport class FormaPagamentoComponent implements OnInit {\n\n  progress = false;\n  errors: string;\n  formaPagamentoNovo: FormaPagamento;\n  formaPagamentos: FormaPagamento[] = [];\n\n  formulario: FormGroup;\n  colunas = ['id', 'descricao', 'formaPagamento',  'taxa', 'detalhes', 'apagar'];\n  dataSource = new MatTableDataSource<FormaPagamento>();\n\n  totalElementos = 0;\n  pagina = 0;\n  tamanho = 4;\n  pageSizeOptions: number[] = [2, 4, 6, 10];\n  filtroTable;\n\n  constructor(\n    private service: FormaPagamentoService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n  ) {\n    this.formaPagamentoNovo = new FormaPagamento();\n  }\n\n  ngOnInit(): void {    \n    this.formaPagamentoNovo = new FormaPagamento();\n    this.formularioFormaPagamento(this.formaPagamentoNovo);\n    this.listaFormaPagamento(this.pagina, this.tamanho);\n  }\n\n  formularioFormaPagamento(formFp: FormaPagamento) {\n    this.formulario = this.fb.group({\n      id: [formFp.id],\n      tipoPagamento: [formFp.tipoPagamento, Validators.required],\n      descricao: [formFp.descricao, Validators.required],\n      taxa: [formFp.taxa]\n    });\n  }\n\n\n  onSubmit() {\n    console.log('Salvando....');\n    this.progress = true;\n    console.log(this.formulario.value);\n    this.service.salvar(this.formulario.value)\n      .subscribe(response => {\n        this.formulario.setValue(response);\n        this.formaPagamentoNovo = response;\n        this.progress = false;\n        this.service.msg('Salvo com sucesso');\n        this.listaFormaPagamento();\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      })\n  }\n\n  atualizarFormPg(event: Event) {\n    event.preventDefault();\n    this.progress = true;\n    this.service.atualizar(this.formulario.value)\n      .subscribe(reponse => {\n        this.service.msg('Atualizado.');\n        this.progress = false;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n  }\n  \n  preparaDelecao(formaPagamento: FormaPagamento, event: Event){\n    event.preventDefault();\n    this.dialog.open(FormaPagamentoDeleteComponent, {\n      data: formaPagamento\n    }).afterClosed().subscribe(responseClose => {\n      if (responseClose) {\n        this.progress = true;\n        console.log(formaPagamento)\n        this.service.deletar(formaPagamento)\n          .subscribe(responseDelete => {\n            console.log(responseDelete);\n            this.service.msg('Forma de pagamento deletado!');\n            this.formaPagamentoNovo = new FormaPagamento();\n           this,this.formulario.reset();\n            this.progress = false;\n          }, errorResponse => {\n            console.log(errorResponse);\n            this.service.msg('Ocorreu um erro ao deletar a forma de pagamento!', true);\n            this.progress = false;\n          });\n      }\n    });\n  }\n\n  \n  preparaDelecaoList(formaPagamento: FormaPagamento, event: Event) {\n    event.preventDefault();\n    this.dialog.open(FormaPagamentoDeleteComponent, {\n      data: formaPagamento\n    }).afterClosed().subscribe(response => {\n      if (response) {      \n        this.service.deletar(formaPagamento)\n          .subscribe(responseDelete => {\n            this.service.msg('deletado com sucesso!');\n            if (!this.filtroTable) {\n              this.listaFormaPagamento(this.pagina, this.tamanho);              \n            } else {\n              this.service.buscaFormaPagamento(this.filtroTable, this.pagina, this.tamanho)\n                .subscribe(responseFilter => {\n                  this.formaPagamentos = responseFilter.content;\n                  this.totalElementos = responseFilter.totalElements;\n                  this.pagina = responseFilter.number;\n                  this.dataSource.data = this.formaPagamentos;\n                });\n            }\n            this.progress = false;\n          }, errorResponse => {\n            this.service.msg('Ocorreu um erro ao deletar!', true),\n              this.progress = false;\n          });\n      }\n    });\n\n  }\n\n  detalharFormaPagamento(formaPagamento: FormaPagamento) {\n    this.dialog.open(FormaPagamentoDetalheComponent, {      \n      data: formaPagamento\n    }).afterClosed().subscribe(response => {\n      if (!this.filtroTable) {\n        this.listaFormaPagamento(this.pagina, this.tamanho);\n      } else {\n        this.service.buscaFormaPagamento(this.filtroTable, this.pagina, this.tamanho)\n          .subscribe(responseAt => {\n            this.formaPagamentos = responseAt.content;\n            this.totalElementos = responseAt.totalElements;\n            this.pagina = responseAt.number;\n            this.dataSource.data = this.formaPagamentos;\n          });\n      }\n    });\n  }\n\n\n  listaFormaPagamento(pagina = 0, tamanho = 4) {\n    this.service.listaFormaPagamento(pagina, tamanho)\n      .subscribe(response => {\n        this.formaPagamentos = response.content;\n        this.totalElementos = response.totalElements;\n        this.pagina = response.number;\n        this.dataSource.data = this.formaPagamentos;\n      },\n        errorResponse => {\n          this.service.msg('Error ao Carregar Clientes', true);\n        });\n  }\n\n  \n  paginar(event: PageEvent) {\n    if (!this.filtroTable) {\n      this.pagina = event.pageIndex;\n      this.tamanho = event.pageSize;\n      this.listaFormaPagamento(this.pagina, this.tamanho);\n    } else {\n      this.pagina = event.pageIndex;\n      this.tamanho = event.pageSize;\n      this.service.buscaFormaPagamento(this.filtroTable, this.pagina, this.tamanho)\n        .subscribe(response => {\n          this.formaPagamentos = response.content;\n          this.totalElementos = response.totalElements;\n          this.pagina = response.number;\n          this.dataSource.data = this.formaPagamentos;\n        });\n    }\n  }\n\n  applyFilter(event: Event) {\n    this.filtroTable = (event.target as HTMLInputElement).value;\n    this.service.buscaFormaPagamento(this.filtroTable, 0, 4)\n      .subscribe(response => {\n        this.formaPagamentos = response.content;\n        this.totalElementos = response.totalElements;\n        this.pagina = response.number;\n        this.dataSource.data = this.formaPagamentos;\n      },\n        errorResponse => {\n          this.service.msg('erro ao buscar', true);\n        });\n    this.dataSource.filter = this.filtroTable.trim().toLowerCase();\n\n  }\n\n  novoFormPag(event ?: Event){\n    event.preventDefault();\n    this.formaPagamentoNovo = new FormaPagamento();\n    this.formulario.reset();\n  }\n  \n\n}\n","<mat-tab-group>\n    <mat-tab Label=\"Forma de fornecedor\">\n\n        <ng-template mat-tab-label>\n            <mat-icon>add</mat-icon>\n            Forma de Pagamento\n        </ng-template>\n\n        <mat-card>\n            <br><br>\n                <mat-card-title>{{ formaPagamentoNovo.id ? \"Atualizar\" : \"Cadastro\" }}</mat-card-title> <br>\n           \n                <mat-divider></mat-divider> <br>\n            <mat-card-content>\n        \n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                    <mat-card-subtitle fxFlex=\"100\">\n                        <ol class=\"breadcrumb mb-4\">\n                            <li class=\"breadcrumb-item active\">  Forma de Pagamento </li>\n                        </ol>\n                    </mat-card-subtitle>\n                </div>\n        \n                <form fxLayout=\"column\" [formGroup]=\"formulario\" (ngSubmit)=\"onSubmit()\">\n                \n        \n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\" *ngIf=\"formulario.controls.id.value\">\n        \n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>ID :</mat-label>\n                            <input matInput value=\"{{ formaPagamentoNovo.id }}\" disabled>\n                        </mat-form-field>                  \n        \n                    </div>\n        \n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n        \n                        <mat-form-field class=\"full-width\" fxFlex=\"90\">\n                            <mat-label>Descrição</mat-label>\n                            <input matInput formControlName=\"descricao\">\n                        </mat-form-field>\n        \n                        <mat-form-field class=\"taxa\" >\n                            <mat-label>Taxa</mat-label>\n                            <input matInput formControlName=\"taxa\">\n                        </mat-form-field>      \n        \n                    </div>\n        \n                    <div fxFlex=10>\n                        <mat-radio-group formControlName=\"tipoPagamento\">\n                            <mat-radio-button value=\"cc\">Cartão de Crédito</mat-radio-button>\n                            <mat-radio-button value=\"cd\">Cartão de Débito</mat-radio-button>\n                            <mat-radio-button value=\"bo\">Boleto</mat-radio-button>\n                            <mat-radio-button value=\"di\">Dinheiro</mat-radio-button>\n                        </mat-radio-group>                                          \n                    </div>\n                    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                        <button mat-stroked-button [disabled]=\"formulario.invalid\" type=\"submit\" *ngIf=\"!formulario.controls.id.value && !progress\" color=\"primary\"> \n                             <mat-icon>save</mat-icon>                              \n                            Cadastrar\n                        </button>        \n                        \n                        <button mat-stroked-button *ngIf=\"formulario.controls.id.value && !progress\" (click)=\"atualizarFormPg($event)\" [disabled]=\"formulario.invalid\"  color=\"primary\"> \n                            <mat-icon>refresh</mat-icon>                              \n                            Atualizar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formulario.controls.id.value && !progress\" (click)=\"preparaDelecao(formulario.value, $event)\"  color=\"warn\"> \n                            <mat-icon>delete</mat-icon>                              \n                            Apagar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formulario.controls.id.value && !progress\" (click)=\"novoFormPag($event)\" style=\" color: #28a745\"> \n                            <mat-icon>add</mat-icon>                              \n                            Novo\n                        </button>\n\n                    </div>\n\n                    \n\n                </form>\n\n            </mat-card-content>\n        </mat-card>\n\n    </mat-tab>\n \n    <mat-tab label=\"Clientes\">\n        <ng-template mat-tab-label>\n            <mat-icon>list</mat-icon>\n            Formas de Pagamentos\n        </ng-template>\n        <mat-card>\n            \n                <br>\n                <br>\n\n                <mat-card-title>Formas de Pagamentos</mat-card-title> <br>\n\n                <mat-card-content>\n\n                    <mat-divider></mat-divider> <br>\n\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Buscar forma de pagamentos</mat-label>\n                        <input matInput placeholder=\"buscar\" (keyup)=\"applyFilter($event)\" >\n                    </mat-form-field>\n                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 full-width\">                       \n                       \n\n                        <ng-container matColumnDef=\"id\">\n                            <th mat-header-cell *matHeaderCellDef> ID </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"descricao\">\n                            <th mat-header-cell *matHeaderCellDef>Descrição</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.descricao }}</td>\n                        </ng-container>                        \n\n                        <ng-container matColumnDef=\"formaPagamento\">\n                            <th mat-header-cell *matHeaderCellDef>Tipo</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.tipoPagamento }}</td>\n                        </ng-container>   \n                        \n                        <ng-container matColumnDef=\"taxa\">\n                            <th mat-header-cell *matHeaderCellDef>Taxa</th>\n                            <td mat-cell *matCellDef=\"let element\">{{ element.taxa }}</td>\n                        </ng-container>     \n\n                        <ng-container matColumnDef=\"detalhes\">\n                            <th mat-header-cell *matHeaderCellDef>Detalhes</th>\n                            <td mat-cell *matCellDef=\"let element\">\n                                <button mat-icon-button (click)=\"detalharFormaPagamento(element)\" > \n                                <mat-icon color=\"primary\">assignment</mat-icon>\n                              </button>\n                            </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"apagar\">\n                            <th mat-header-cell *matHeaderCellDef>Apagar</th>\n                            <td mat-cell *matCellDef=\"let element\">\n                                <button mat-icon-button (click)=\"preparaDelecaoList(element, $event)\"> \n                                <mat-icon color=\"warn\">delete_forever</mat-icon>\n                              </button>\n                            </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"colunas\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: colunas;\"></tr>\n                    </table>\n\n                    <mat-paginator [length]=\"totalElementos\" [pageIndex]=\"pagina\" [pageSize]=\"tamanho\" [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons (page)=\"paginar($event)\"></mat-paginator>\n\n                </mat-card-content>\n          \n        </mat-card>\n\n    </mat-tab>\n</mat-tab-group>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { AuthGuard } from '../guard/auth.guard';\nimport { FormaPagamentoComponent } from './forma-pagamento/forma-pagamento.component';\n\nconst routes: Routes = [\n  {\n    path: 'forma-pagamento', component: LayoutComponent, canActivate: [AuthGuard], children: [\n      { path: 'principal', component: FormaPagamentoComponent },\n      { path: '', redirectTo: '/forma-pagamento/principal', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FormasPagamentosRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormasPagamentosRoutingModule } from './formas-pagamentos-routing.module';\nimport { FormaPagamentoComponent } from './forma-pagamento/forma-pagamento.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormaPagamentoDeleteComponent } from './forma-pagamento-delete/forma-pagamento-delete.component';\nimport { FormaPagamentoDetalheComponent } from './forma-pagamento-detalhe/forma-pagamento-detalhe.component';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\n\n@NgModule({\n  declarations: [FormaPagamentoComponent, FormaPagamentoDeleteComponent, FormaPagamentoDetalheComponent],\n  imports: [\n    CommonModule,\n    FormasPagamentosRoutingModule,\n    FormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatIconModule,\n    MatDividerModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    MatButtonModule,\n    MatRadioModule,\n    MatPaginatorModule,\n    \n    \n\n  ],\n  exports: [\n    FormaPagamentoComponent\n  ]\n})\nexport class FormasPagamentosModule { }\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Fornecedor } from '../fornecedor/fornecedor';\nimport { FornecedorService } from 'src/app/service/fornecedor.service';\n\n@Component({\n  selector: 'app-fornecedor-delete',\n  templateUrl: './fornecedor-delete.component.html',\n  styleUrls: ['./fornecedor-delete.component.css']\n})\nexport class FornecedorDeleteComponent implements OnInit {\n\n  progress = false;\n\n  constructor(\n    private service: FornecedorService,\n    public dialogRef: MatDialogRef<FornecedorDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public fornecedor: Fornecedor\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  deletarFornecedor() {\n    this.progress = true;\n    this.service.deletar(this.fornecedor)\n      .subscribe(response => {\n        this.service.msg('Fornecedor deletado!');\n        this.fechar();\n        this.progress = false;\n      }, errorResponse => {\n        this.service.msg('Ocorreu um erro ao deletar o Fornecedor!', true);\n        this.progress = false;\n      });\n  }\n\n  fechar() {\n    this.dialogRef.close();\n  }\n}\n","<mat-card style=\"text-align: center;\">\n    <mat-card-header>\n\n        <mat-card-title>\n            <div matDialogTitle>Confirmação</div>\n        </mat-card-title>\n\n    </mat-card-header>\n\n    <mat-card-content>\n        <div mat-dialog-content>Deseja Confirma a deleção do(a) Fornecedor <strong>{{ fornecedor.razaoSocial }}</strong> ?</div>\n    </mat-card-content>\n\n    <mat-card-actions>\n\n        <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n        <button mat-stroked-button color=\"primary\" *ngIf=\"!progress\" [mat-dialog-close]=\"true\"> \n                <mat-icon>delete</mat-icon>        \n                Confirmar\n            </button>\n\n        <button mat-stroked-button style=\"color: #868d95;\" *ngIf=\"!progress\" (click)=\"fechar()\">     \n                <mat-icon>cancel</mat-icon>      \n                Cancelar\n            </button>\n\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MascaraUtil } from 'src/app/util/mascara-util';\nimport { Fornecedor } from '../fornecedor/fornecedor';\nimport { FornecedorService } from 'src/app/service/fornecedor.service';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { BuscarCepService } from 'src/app/service/buscar-cep.service';\n\n@Component({\n  selector: 'app-fornecedor-detalhe',\n  templateUrl: './fornecedor-detalhe.component.html',\n  styleUrls: ['./fornecedor-detalhe.component.css']\n})\nexport class FornecedorDetalheComponent implements OnInit {\n\n  mascaraData = MascaraUtil.mascaraNascimento;\n  mascaraCpf = MascaraUtil.mascaraCpf;\n  mascaraCnpj = MascaraUtil.mascaraCnpj;\n  mascaraCelular = MascaraUtil.mascaraCelular;\n  mascaraTelefoneFixo = MascaraUtil.mascaraTelefoneFixo;\n  errors: string;\n  progress = false;\n\n  formulario: FormGroup;\n\n  constructor(\n    private cep: BuscarCepService,\n    private fb: FormBuilder,\n    private service: FornecedorService,\n    public dialogRef: MatDialogRef<FornecedorDetalheComponent>,\n    @Inject(MAT_DIALOG_DATA) public fornecedorAtualizado: Fornecedor\n  ) { }\n\n  ngOnInit(): void {\n    this.montarFormulario(this.fornecedorAtualizado);\n  }\n\n  montarFormulario(fornecedorForm: Fornecedor) {\n    this.formulario = this.fb.group({\n      id: [fornecedorForm.id],\n      razaoSocial: [fornecedorForm.razaoSocial, Validators.required],\n      cpf: [fornecedorForm.cpf],\n      cnpj: [fornecedorForm.cnpj],\n      checked: [fornecedorForm.checked = false],\n      tipo: [fornecedorForm.tipo],\n      inscricaoEstadual: [fornecedorForm.inscricaoEstadual],\n      inscricaoMunicipal: [fornecedorForm.inscricaoMunicipal],\n      celular: [fornecedorForm.celular],\n      telefone: [fornecedorForm.endereco],\n      dataCadastro: [fornecedorForm.dataCadastro],\n      dataAbertura: [fornecedorForm.dataAbertura],\n      endereco: [fornecedorForm.endereco],\n      numero: [fornecedorForm.numero],\n      bairro: [fornecedorForm.bairro],\n      cidade: [fornecedorForm.cidade],\n      estado: [fornecedorForm.estado],\n      cep: [fornecedorForm.cep],\n      email: [fornecedorForm.email],\n      site: [fornecedorForm.site],\n      observacao: [fornecedorForm.observacao]\n    });\n  }\n\n  atualizarFornecedor() {\n    this.progress = true;\n    if (this.formulario.controls.checked.value) {\n      this.formulario.controls.tipo.setValue('PF');\n      this.formulario.controls.cnpj.setValue(null);\n    } else if (!this.formulario.controls.checked.value) {\n      this.formulario.controls.tipo.setValue('PJ');\n      this.formulario.controls.cpf.setValue(null);\n    }\n    this.service.atualizar(this.formulario.value)\n      .subscribe(response => {\n        this.service.msg('Fornecedor atualizado.');\n        this.progress = false;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n  }\n\n\n  buscarCep(event: Event) {\n    const cep = (event.target as HTMLInputElement).value;\n    this.cep\n      .buscarCep(cep)\n      .subscribe(response => {\n        this.formulario.controls.bairro.setValue(response.bairro);\n        this.formulario.controls.endereco.setValue(response.logradouro);\n        this.formulario.controls.estado.setValue(response.uf);\n        this.formulario.controls.cidade.setValue(response.localidade);\n      }\n      );\n  }\n\n  fechar() {\n    this.dialogRef.close();\n  }\n\n}\n","<mat-card>\n    <mat-card-header>\n        <mat-card-title>Cadastro</mat-card-title>\n    </mat-card-header>\n    <mat-card-content>\n\n        <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n            <mat-card-subtitle fxFlex=\"100\">\n                <ol class=\"breadcrumb mb-4\">\n                    <li class=\"breadcrumb-item active\"> Dados Fornecedor </li>\n                </ol>\n            </mat-card-subtitle>\n        </div>\n\n        <form fxLayout=\"column\" [formGroup]=\"formulario\">\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <div fxFlex=\"21\">\n                    <mat-slide-toggle color=\"primary\" type=\"checkbox\" formControlName=\"checked\">Pessoa Física ?</mat-slide-toggle>\n                </div>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\" *ngIf=\"formulario.controls.id.value\">\n\n                <mat-form-field fxFlex=\"15\">\n                    <mat-label>ID :</mat-label>\n                    <input matInput value=\"{{ fornecedorAtualizado.id }}\" disabled>\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"15\">\n                    <mat-label>Data de Cadastro:</mat-label>\n                    <input matInput [textMask]=\"{mask: mascaraData, guide: false}\" value=\"{{ fornecedorAtualizado.dataCadastro }}\" disabled>\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field class=\"full-width\" fxFlex=\"100\">\n                    <mat-label>Razão social</mat-label>\n                    <input matInput formControlName=\"razaoSocial\">\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field *ngIf=\"!formulario.controls.checked.value\" fxFlex=\"20\">\n                    <mat-label>CNPJ</mat-label>\n                    <input matInput formControlName=\"cnpj\" [textMask]=\"{mask: mascaraCnpj, guide: false}\">\n                </mat-form-field>\n\n                <mat-form-field *ngIf=\"formulario.controls.checked.value\" fxFlex=\"20\">\n                    <mat-label>CPF</mat-label>\n                    <input matInput formControlName=\"cpf\" [textMask]=\"{mask: mascaraCpf, guide: false}\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"20\">\n                    <mat-label>Inscrição Estadual</mat-label>\n                    <input matInput formControlName=\"inscricaoEstadual\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"20\">\n                    <mat-label>Inscrição Municiapal</mat-label>\n                    <input matInput formControlName=\"inscricaoMunicipal\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"15\" color=\"primary\">\n                    <mat-label>Data de abertura</mat-label>\n                    <input matInput type=\"date\" formControlName=\"dataAbertura\">\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n\n\n                <mat-form-field fxFlex=\"15\">\n                    <mat-label>Celular :</mat-label>\n                    <input matInput formControlName=\"celular\" [textMask]=\"{mask: mascaraCelular, guide: false}\" name=\"celular\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>Telefone :</mat-label>\n                    <input matInput formControlName=\"telefone\" [textMask]=\"{mask: mascaraTelefoneFixo, guide: false}\" name=\"telefone\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"30\">\n                    <mat-label>Email:</mat-label>\n                    <input matInput formControlName=\"email\" placeholder=\"Email:\">\n                    <mat-error *ngIf=\"formulario.controls.email.errors && !formulario.controls.email.pristine\">\n                        <mat-error *ngIf=\"formulario.controls.email.errors.email\">\n                            Email inválido\n                        </mat-error>\n                    </mat-error>\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"30\">\n                    <mat-label>Site :</mat-label>\n                    <input matInput formControlName=\"site\" placeholder=\"Site :\">\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-card-subtitle fxFlex=\"100\">\n                    <ol class=\"breadcrumb mb-4\">\n                        <li class=\"breadcrumb-item active\"> Endereço </li>\n                    </ol>\n                </mat-card-subtitle>\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>CEP :</mat-label>\n                    <input matInput formControlName=\"cep\" placeholder=\"CEP:\" (keyup)=\"buscarCep($event)\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Bairro :</mat-label>\n                    <input matInput formControlName=\"bairro\" placeholder=\"Endereço:\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Endereço :</mat-label>\n                    <input matInput formControlName=\"endereco\" placeholder=\"Endereço:\">\n                </mat-form-field>\n\n\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"30\">\n                    <mat-label>Cidade :</mat-label>\n                    <input matInput formControlName=\"cidade\" placeholder=\"Cidade :\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>Estado :</mat-label>\n                    <input matInput formControlName=\"estado\" placeholder=\"Estado :\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>Nº :</mat-label>\n                    <input matInput formControlName=\"numero\" placeholder=\"Complemento:\">\n                </mat-form-field>\n\n            </div>\n\n\n            <div class=\"input-row\">\n                <mat-form-field class=\"full-width\" appearance=\"outline\">\n                    <mat-label>Observação:</mat-label>\n                    <textarea matInput formControlName=\"observacao\" name=\"observacao\"></textarea>\n                </mat-form-field>\n            </div>\n\n            <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                <button mat-stroked-button type=\"submit\" *ngIf=\"!progress\" (click)=\"atualizarFornecedor()\" [disabled]=\"formulario.invalid\" color=\"primary\"> \n                    <mat-icon>refresh</mat-icon>                              \n                    Atualizar\n                </button>\n\n                <button mat-stroked-button style=\"color: #868d95;\" *ngIf=\"!progress\" (click)=\"fechar()\">     \n                    <mat-icon>cancel</mat-icon>      \n                    Cancelar\n                </button>\n\n            </div>\n\n        </form>\n\n    </mat-card-content>\n</mat-card>","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Fornecedor } from './fornecedor';\nimport { FornecedorService } from 'src/app/service/fornecedor.service';\nimport { MascaraUtil } from 'src/app/util/mascara-util';\nimport { BuscarCepService } from 'src/app/service/buscar-cep.service';\nimport { FornecedorDeleteComponent } from '../fornecedor-delete/fornecedor-delete.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PageEvent } from '@angular/material/paginator';\n\nimport { FornecedorDetalheComponent } from '../fornecedor-detalhe/fornecedor-detalhe.component';\n\n@Component({\n  selector: 'app-fornecedor',\n  templateUrl: './fornecedor.component.html',\n  styleUrls: ['./fornecedor.component.css']\n})\nexport class FornecedorComponent implements OnInit {\n \n\n  mascaraData = MascaraUtil.mascaraNascimento;\n  mascaraCpf = MascaraUtil.mascaraCpf;\n  mascaraCnpj = MascaraUtil.mascaraCnpj;\n  mascaraCelular = MascaraUtil.mascaraCelular;\n  mascaraTelefoneFixo = MascaraUtil.mascaraTelefoneFixo;\n  errors: string;\n\n  fornecedorNovo: Fornecedor;\n  fornecedores: Fornecedor[] = [];\n\n  formulario: FormGroup;\n  colunas = ['id', 'razaoSocial', 'cnpj_cpf', 'tipo', 'dataCadastro', 'detalhes', 'apagar'];\n  dataSource = new MatTableDataSource<Fornecedor>();\n\n  progress = false;\n\n\n  totalElementos = 0;\n  pagina = 0;\n  tamanho = 4;\n  pageSizeOptions: number[] = [2, 4, 6, 10];\n  filtroTable;\n\n\n  constructor(\n    private service: FornecedorService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private cep: BuscarCepService,\n  ) {\n    this.fornecedorNovo = new Fornecedor();\n  }\n\n  ngOnInit(): void {\n    this.montarFormulario(this.fornecedorNovo);\n    this.listarFornecedor(this.pagina, this.tamanho);\n  }\n\n  montarFormulario(fornecedorForm: Fornecedor) {\n    this.formulario = this.fb.group({\n      id: [fornecedorForm.id],\n      razaoSocial: [fornecedorForm.razaoSocial, Validators.required],\n      cpf: [fornecedorForm.cpf],\n      cnpj: [fornecedorForm.cnpj],\n      checked: [fornecedorForm.checked = false],\n      tipo: [fornecedorForm.tipo],\n      inscricaoEstadual: [fornecedorForm.inscricaoEstadual],\n      inscricaoMunicipal: [fornecedorForm.inscricaoMunicipal],\n      celular: [fornecedorForm.celular],\n      telefone: [fornecedorForm.endereco],\n      dataCadastro: [fornecedorForm.dataCadastro],\n      dataAbertura: [fornecedorForm.dataAbertura],\n      endereco: [fornecedorForm.endereco],\n      numero: [fornecedorForm.numero],\n      bairro: [fornecedorForm.bairro],\n      cidade: [fornecedorForm.cidade],\n      estado: [fornecedorForm.estado],\n      cep: [fornecedorForm.cep],\n      email: [fornecedorForm.email],\n      site: [fornecedorForm.site],\n      observacao: [fornecedorForm.observacao]\n    });\n  }\n\n  submit() {\n    console.log('Salvando....');\n    this.progress = true;\n    if (this.formulario.controls.checked.value) {\n      this.formulario.controls.tipo.setValue('PF');\n      this.formulario.controls.cnpj.setValue(null);\n    } else if (!this.formulario.controls.checked.value) {\n      this.formulario.controls.tipo.setValue('PJ');\n      this.formulario.controls.cpf.setValue(null);\n    }\n    console.log(this.formulario.value);\n    this.service.salvar(this.formulario.value)\n      .subscribe(response => {\n        this.formulario.setValue(response);\n        this.fornecedorNovo = response;\n        this.progress = false;\n        this.service.msg('Salvo Com sucesso');\n        this.listarFornecedor();\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n\n  }\n\n  atualizarFornecedor(event: Event) {\n    console.log('Atualizando....');\n    event.preventDefault();\n    this.progress = true;\n    if (this.formulario.controls.checked.value) {\n      this.formulario.controls.tipo.setValue('PF');\n      this.formulario.controls.cnpj.setValue(null);\n    } else if (!this.formulario.controls.checked.value) {\n      this.formulario.controls.tipo.setValue('PJ');\n      this.formulario.controls.cpf.setValue(null);\n    }\n    this.service.atualizar(this.formulario.value)\n      .subscribe(response => {\n        this.service.msg('Fornecedor atualizado.');\n        this.progress = false;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n  }\n\n\n\n  listarFornecedor(pagina = 0, tamanho = 4) {\n    this.service.getFornecedorAll(pagina, tamanho)\n      .subscribe(response => {\n        console.log(response);\n        this.fornecedores = response.content;\n        this.totalElementos = response.totalElements;\n        this.pagina = response.number;\n        this.dataSource.data = this.fornecedores;\n      },\n        errorResponse => {\n          this.service.msg('Error ao Carregar Clientes', true);\n        });\n  }\n\n  detalhesFornecedor(fornecedor: Fornecedor) {\n    this.dialog.open(FornecedorDetalheComponent, {\n      height: '500px',\n      width: '850px',\n      data: fornecedor\n    }).afterClosed().subscribe(response => {\n      if (!this.filtroTable) {\n        this.listarFornecedor(this.pagina, this.tamanho);\n      } else {\n        this.service.buscarFornecedor(this.filtroTable, this.pagina, this.tamanho)\n          .subscribe(responseAt => {\n            this.fornecedores = responseAt.content;\n            this.totalElementos = responseAt.totalElements;\n            this.pagina = responseAt.number;\n            this.dataSource.data = this.fornecedores;\n          });\n      }\n    });\n\n  }\n\n  applyFilter(event: Event) {\n    this.filtroTable = (event.target as HTMLInputElement).value;\n    this.service.buscarFornecedor(this.filtroTable, 0, 4)\n      .subscribe(response => {\n        this.fornecedores = response.content;\n        this.totalElementos = response.totalElements;\n        this.pagina = response.number;\n        this.dataSource.data = this.fornecedores;\n      },\n        errorResponse => {\n          this.service.msg('erro ao buscar', true);\n        });\n    this.dataSource.filter = this.filtroTable.trim().toLowerCase();\n\n  }\n\n  preparaDelecaoForm(fornecedor: Fornecedor, event: Event) {\n    event.preventDefault();\n    this.dialog.open(FornecedorDeleteComponent, {\n      data: fornecedor\n    }).afterClosed().subscribe(responseClose => {\n      if (responseClose) {\n        this.progress = true;\n        this.service.deletar(fornecedor)\n          .subscribe(responseDelete => {\n            this.service.msg('Fornecedor deletado!');\n            this.fornecedorNovo = new Fornecedor();\n            this.formulario.reset();\n            this.progress = false;\n          }, errorResponse => {\n            this.service.msg('Ocorreu um erro ao deletar o Fornecedor!', true);\n            this.progress = false;\n          });\n      }\n    });\n  }\n\n  preparaDelecaoList(fornecedor: Fornecedor, event: Event) {\n    event.preventDefault();\n    this.dialog.open(FornecedorDeleteComponent, {\n      data: fornecedor\n    }).afterClosed().subscribe(response => {\n      if (response) {\n   \n        this.service.deletar(fornecedor)\n          .subscribe(responseDelete => {\n            this.service.msg('Fornecedor deletado com sucesso!');\n            if (!this.filtroTable) {\n              this.listarFornecedor(this.pagina, this.tamanho);\n             \n            } else {\n              this.service.buscarFornecedor(this.filtroTable, this.pagina, this.tamanho)\n                .subscribe(responseFilter => {\n                  this.fornecedores = responseFilter.content;\n                  this.totalElementos = responseFilter.totalElements;\n                  this.pagina = responseFilter.number;\n                  this.dataSource.data = this.fornecedores;\n\n                });\n            }\n\n          }, errorResponse => {\n            this.service.msg('Ocorreu um erro ao deletar o cliente', true);\n\n          });\n      }\n    });\n  }\n\n  paginar(event: PageEvent) {\n    this.pagina = event.pageIndex;\n    this.tamanho = event.pageSize;\n    this.listarFornecedor(this.pagina, this.tamanho);\n  }\n\n  novoCliente(event: Event) {\n    event.preventDefault();\n    this.fornecedorNovo = new Fornecedor();\n    this.formulario.reset();\n  }\n\n  buscarCep(event: Event) {\n    const cep = (event.target as HTMLInputElement).value;\n    this.cep\n      .buscarCep(cep)\n      .subscribe(response => {\n        this.formulario.controls.bairro.setValue(response.bairro);\n        this.formulario.controls.endereco.setValue(response.logradouro);\n        this.formulario.controls.estado.setValue(response.uf);\n        this.formulario.controls.cidade.setValue(response.localidade);\n      }\n      );\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab Label=\"Novo fornecedor\">\n\n        <ng-template mat-tab-label>\n            <mat-icon>add</mat-icon>\n            Novo Fornecedor\n        </ng-template>\n\n        <mat-card>\n            <br><br>\n                <mat-card-title>Cadastro</mat-card-title> <br>\n            <mat-divider></mat-divider> <br>\n            <mat-card-content>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                    <mat-card-subtitle fxFlex=\"100\">\n                        <ol class=\"breadcrumb mb-4\">\n                            <li class=\"breadcrumb-item active\"> Dados Fornecedor </li>\n                        </ol>\n                    </mat-card-subtitle>\n                </div>\n\n                <form fxLayout=\"column\" [formGroup]=\"formulario\" (ngSubmit)=\"submit()\">\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <div fxFlex=\"21\">\n                            <mat-slide-toggle color=\"primary\" type=\"checkbox\" formControlName=\"checked\">Pessoa Física ?</mat-slide-toggle>\n                        </div>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\" *ngIf=\"formulario.controls.id.value\">\n\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>ID:</mat-label>\n                            <input matInput value=\"{{ fornecedorNovo.id }}\" disabled>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>Data de Cadastro:</mat-label>\n                            <input matInput [textMask]=\"{mask: mascaraData, guide: false}\" value=\"{{ fornecedorNovo.dataCadastro }}\" disabled>\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field class=\"full-width\" fxFlex=\"100\">\n                            <mat-label>Razão Social:</mat-label>\n                            <input matInput formControlName=\"razaoSocial\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field *ngIf=\"!formulario.controls.checked.value\" fxFlex=\"20\">\n                            <mat-label>CNPJ:</mat-label>\n                            <input matInput formControlName=\"cnpj\" [textMask]=\"{mask: mascaraCnpj, guide: false}\">\n                        </mat-form-field>\n\n                        <mat-form-field *ngIf=\"formulario.controls.checked.value\" fxFlex=\"20\">\n                            <mat-label>CPF:</mat-label>\n                            <input matInput formControlName=\"cpf\" [textMask]=\"{mask: mascaraCpf, guide: false}\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"20\">\n                            <mat-label>Inscrição Estadual:</mat-label>\n                            <input matInput formControlName=\"inscricaoEstadual\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"20\">\n                            <mat-label>Inscrição Municipal:</mat-label>\n                            <input matInput formControlName=\"inscricaoMunicipal\">\n                        </mat-form-field>\n\n\n                        <mat-form-field fxFlex=\"15\" color=\"primary\">\n                            <mat-label>Data de abertura:</mat-label>\n                            <input matInput type=\"date\" formControlName=\"dataAbertura\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n\n\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>Celular:</mat-label>\n                            <input matInput formControlName=\"celular\" [textMask]=\"{mask: mascaraCelular, guide: false}\" name=\"celular\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"12\">\n                            <mat-label>Telefone:</mat-label>\n                            <input matInput formControlName=\"telefone\" [textMask]=\"{mask: mascaraTelefoneFixo, guide: false}\" name=\"telefone\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"30\">\n                            <mat-label>Email:</mat-label>\n                            <input matInput formControlName=\"email\" placeholder=\"Email:\">\n                            <mat-error *ngIf=\"formulario.controls.email.errors && !formulario.controls.email.pristine\">\n                                <mat-error *ngIf=\"formulario.controls.email.errors.email\">\n                                    Email inválido\n                                </mat-error>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"30\">\n                            <mat-label>Site</mat-label>\n                            <input matInput formControlName=\"site\" placeholder=\"Site\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                        <mat-card-subtitle fxFlex=\"100\">\n                            <ol class=\"breadcrumb mb-4\">\n                                <li class=\"breadcrumb-item active\"> Endereço: </li>\n                            </ol>\n                        </mat-card-subtitle>\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"12\">\n                            <mat-label>CEP:</mat-label>\n                            <input matInput formControlName=\"cep\" placeholder=\"CEP:\" (keyup)=\"buscarCep($event)\">\n                        </mat-form-field>\n\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Bairro:</mat-label>\n                            <input matInput formControlName=\"bairro\" placeholder=\"Endereço\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"45\">\n                            <mat-label>Endereço:</mat-label>\n                            <input matInput formControlName=\"endereco\" placeholder=\"Endereço\">\n                        </mat-form-field>\n\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"30\">\n                            <mat-label>Cidade:</mat-label>\n                            <input matInput formControlName=\"cidade\" placeholder=\"Cidade\">\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"12\">\n                            <mat-label>Estado:</mat-label>\n                            <input matInput formControlName=\"estado\" placeholder=\"Estado\">\n                        </mat-form-field>\n\n\n                        <mat-form-field fxFlex=\"12\">\n                            <mat-label>Nº:</mat-label>\n                            <input matInput formControlName=\"numero\" placeholder=\"Complemento\">\n                        </mat-form-field>\n\n                    </div>\n\n\n                    <div class=\"input-row\">\n                        <mat-form-field class=\"full-width\" appearance=\"outline\">\n                            <mat-label>Observação:</mat-label>\n                            <textarea matInput formControlName=\"observacao\" name=\"observacao\"></textarea>\n                        </mat-form-field>\n                    </div>\n\n                    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                        <button mat-stroked-button [disabled]=\"formulario.invalid\" type=\"submit\" *ngIf=\"!formulario.controls.id.value && !progress\" color=\"primary\"> \n                             <mat-icon>save</mat-icon>                              \n                            Cadastrar\n                        </button>\n\n                        <button mat-stroked-button type=\"button\" *ngIf=\"formulario.controls.id.value && !progress\" (click)=\"atualizarFornecedor($event)\" [disabled]=\"formulario.invalid\" color=\"primary\"> \n                            <mat-icon>refresh</mat-icon>                              \n                            Atualizar\n                        </button>\n\n                        <button mat-stroked-button type=\"button\" *ngIf=\"formulario.controls.id.value && !progress\" (click)=\"preparaDelecaoForm(formulario.value, $event)\" [disabled]=\"formulario.invalid\" color=\"warn\"> \n                            <mat-icon>delete</mat-icon>                              \n                            Apagar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formulario.controls.id.value && !progress\" (click)=\"novoCliente($event)\" style=\" color: #28a745\"> \n                            <mat-icon>add</mat-icon>                              \n                            Novo cliente\n                        </button>\n\n                    </div>\n\n                </form>\n\n            </mat-card-content>\n        </mat-card>\n\n    </mat-tab>\n    <mat-tab Label=\"Fornecedores\">\n        <ng-template mat-tab-label>\n            <mat-icon>list</mat-icon>\n            Fornecedores\n        </ng-template>\n      \n            \n\n            <mat-card>\n                <br>\n                <br>\n\n                <mat-card-title>Fornecedores</mat-card-title> <br>\n\n                <mat-card-content>\n\n                    <mat-divider></mat-divider> <br>\n\n                    <mat-form-field class=\"full-width\">\n                        <mat-label>Buscar Cliente</mat-label>\n                        <input matInput placeholder=\"buscar\" (keyup)=\"applyFilter($event)\">\n                    </mat-form-field>\n                    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8 full-width\">\n\n\n                        <ng-container matColumnDef=\"id\">\n                            <th mat-header-cell *matHeaderCellDef> ID </th>\n                            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"razaoSocial\">\n                            <th mat-header-cell *matHeaderCellDef>Razão Social</th>\n                            <td mat-cell *matCellDef=\"let fornecedor\">{{ fornecedor.razaoSocial }}</td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"cnpj_cpf\">\n                            <th mat-header-cell *matHeaderCellDef>CNPJ / CPF </th>\n                            <td mat-cell *matCellDef=\"let fornecedor\">{{ fornecedor.cnpj}} {{ fornecedor.cpf}}</td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"tipo\">\n                            <th mat-header-cell *matHeaderCellDef>Tipo</th>\n                            <td mat-cell *matCellDef=\"let fornecedor\">{{ fornecedor.tipo }}</td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"dataCadastro\">\n                            <th mat-header-cell *matHeaderCellDef>Data de Cadastro</th>\n                            <td mat-cell *matCellDef=\"let fornecedor\">{{ fornecedor.dataCadastro }}</td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"detalhes\">\n                            <th mat-header-cell *matHeaderCellDef>Detalhes</th>\n                            <td mat-cell *matCellDef=\"let fornecedor\">\n                                <button mat-icon-button (click)=\"detalhesFornecedor(fornecedor)\"> \n                                <mat-icon color=\"primary\">assignment</mat-icon>\n                              </button>\n                            </td>\n                        </ng-container>\n\n                        <ng-container matColumnDef=\"apagar\">\n                            <th mat-header-cell *matHeaderCellDef>Apagar</th>\n                            <td mat-cell *matCellDef=\"let fornecedor\">\n                                <button mat-icon-button *ngIf=\"!progress\" (click)=\"preparaDelecaoList(fornecedor, $event)\"> \n                                <mat-icon color=\"warn\">delete_forever</mat-icon>\n                              </button>\n                            </td>\n                        </ng-container>\n\n                        <tr mat-header-row *matHeaderRowDef=\"colunas\"></tr>\n                        <tr mat-row *matRowDef=\"let row; columns: colunas;\"></tr>\n                    </table>\n\n                    <mat-paginator [length]=\"totalElementos\" [pageIndex]=\"pagina\" [pageSize]=\"tamanho\" [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons (page)=\"paginar($event)\"></mat-paginator>\n\n                </mat-card-content>\n            </mat-card>\n       \n    </mat-tab>\n</mat-tab-group>","export class Fornecedor {\r\n    id: number;\r\n    razaoSocial: string;\r\n    cnpj: string;\r\n    cpf: string;\r\n    tipo: string;\r\n    inscricaoEstadual: string;\r\n    inscricaoMunicipal: string;\r\n    endereco: string;\r\n    numero: string;\r\n    bairro: string;\r\n    cidade: string;\r\n    estado: string;\r\n    cep: string;\r\n    email: string;\r\n    site: string;\r\n    telefone: string;\r\n    celular: string;\r\n    dataCadastro: string;\r\n    dataAbertura: string;\r\n    checked: boolean;\r\n    observacao: string;\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FornecedorComponent } from './fornecedor/fornecedor.component';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { AuthGuard } from '../guard/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'fornecedores', component: LayoutComponent, canActivate: [AuthGuard], children: [\n      { path: 'principal', component: FornecedorComponent },\n      { path: '', redirectTo: '/fornecedores/principal', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FornecedoresRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FornecedoresRoutingModule } from './fornecedores-routing.module';\nimport { FornecedorComponent } from './fornecedor/fornecedor.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { FornecedorDeleteComponent } from './fornecedor-delete/fornecedor-delete.component';\n\nimport { FornecedorDetalheComponent } from './fornecedor-detalhe/fornecedor-detalhe.component';\n\n\n\n@NgModule({\n  declarations: [FornecedorComponent, FornecedorDeleteComponent, FornecedorDetalheComponent],\n  imports: [\n    CommonModule,\n    FornecedoresRoutingModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatIconModule,\n    MatDividerModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    TextMaskModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    \n  ],\n  exports: [\n    FornecedorComponent,\n    FornecedorDeleteComponent,\n    FornecedorDeleteComponent\n  ]\n})\nexport class FornecedoresModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../service/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n\n    const authenticated = this.authService.isAuthenticated();\n\n    if (authenticated) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Home</mat-card-title> <br>\n    <mat-divider></mat-divider><br>    \n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Bem Vindo!</li>\n</ol>\n\n<div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n    <div class=\"zoom pedidos\">\n        <div class=\"pedidos\" mat-ripple routerLink=\"/lancamento/principal\">\n        </div>\n    </div>\n\n    <div class=\"zoom producao\">\n        <div class=\"producao\" mat-ripple routerLink=\"/produtos/principal\">\n        </div>\n    </div>\n\n    <div class=\"zoom status\">\n        <div class=\"status\" mat-ripple routerLink=\"/produtos/principal\">\n        </div>\n    </div>\n</div>\n</mat-card>\n","import { Cliente } from '../clientes/cliente';\r\nimport { FormaPagamento } from '../formas-pagamentos/forma-pagamento';\r\nimport { Produto } from '../produtos/produto';\r\n\r\n\r\n\r\nexport class Lancamento {\r\n\r\n    id: number;\r\n    dataCadastro: string;\r\n    dataLancamento: string;\r\n    cliente: Cliente;\r\n    produto: Produto;\r\n    tipoPagamento: FormaPagamento;\r\n    valorVenda: string;\r\n    taxa: string;\r\n    desconto: string;\r\n    cep: string;\r\n    bairro: string;\r\n    lagradouro: string;\r\n    complemento: string;\r\n    numero: string;\r\n    telefone: string;\r\n    celular: string;   \r\n} ","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Cliente } from 'src/app/clientes/cliente';\nimport { ClientesService } from 'src/app/service/clientes.service';\nimport { LancamentoService } from 'src/app/service/lancamento.service';\nimport { ProdutoService } from 'src/app/service/produto.service';\nimport { Lancamento } from '../lancamento';\nimport { RelacaoProdutos } from '../relacaoProdutos';\nimport { debounceTime, delay, filter, map, startWith, takeUntil, tap } from 'rxjs/operators';\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\nimport { Produto } from 'src/app/produtos/produto';\nimport { FormaPagamento } from 'src/app/formas-pagamentos/forma-pagamento';\nimport { FormaPagamentoService } from 'src/app/service/forma-pagamento.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ConditionalExpr, ConstantPool } from '@angular/compiler';\nimport { MascaraUtil } from 'src/app/util/mascara-util';\n\n@Component({\n  selector: 'app-lancamento',\n  templateUrl: './lancamento.component.html',\n  styleUrls: ['./lancamento.component.css']\n})\nexport class LancamentoComponent implements OnInit, OnDestroy {\n\n  protected _onDestroy = new Subject<void>();\n\n  // mascara para formulário\n  mascaraData = MascaraUtil.mascaraNascimento;\n  mascaraCpf = MascaraUtil.mascaraCpf;\n  mascaraCelular = MascaraUtil.mascaraCelular;\n  mascaraTelefoneFixo = MascaraUtil.mascaraTelefoneFixo;\n\n  // carregamentos\n  protected carregaClientes: Cliente[] = [];\n  public clienteFiltro: FormControl = new FormControl();\n  public produtosFiltro: FormControl = new FormControl();\n  protected carregaProdutos: Produto[] = [];\n  protected tipoPagamentos: FormaPagamento[] = [];\n\n  /** indica o inicio da filtragem dos clientes */\n  public searching = false;\n\n  // variavel de erro\n  errors: string;\n\n  // variaveis de objetos\n  lancamentoNovo: Lancamento;\n  clienteSelecionado = new Cliente;\n\n  // variaveis de formulario\n  formularioLancamento: FormGroup;\n\n  //filtros\n  filtroClientes: ReplaySubject<Cliente[]> = new ReplaySubject<Cliente[]>(1);\n  filtroProdutos: ReplaySubject<Produto[]> = new ReplaySubject<Produto[]>(1);\n  filtroTipoPagamentos: Observable<FormaPagamento[]>;\n\n  constructor(\n    private service: LancamentoService,\n    private produtoService: ProdutoService,\n    private clienteService: ClientesService,\n    private formaPagService: FormaPagamentoService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n  ) {\n    this.lancamentoNovo = new Lancamento();\n\n  }\n\n  ngOnInit(): void {\n    this.carregarClientes();\n    this.carregarProdutos();\n    this.carregarFormaPagamento();\n    this.formulario(this.lancamentoNovo);\n    // inicializar filtro dos campos(clientes, produtos e forma de pagamento)    \n    this.clienteFiltro.valueChanges\n      .pipe(\n        filter(search => !!search),\n        tap(() => this.searching = true),\n        takeUntil(this._onDestroy),\n        debounceTime(200),\n        map(search => {\n          if (!this.carregaClientes) {\n            return [];\n          }\n          // simulate server fetching and filtering data\n          return this.carregaClientes.filter(cliente => cliente.nome.toLowerCase().includes(search.toLowerCase()));\n\n        }),\n        delay(500),\n        takeUntil(this._onDestroy)\n      )\n      .subscribe(filtroCliente => {\n        this.searching = false;\n        this.filtroClientes.next(filtroCliente);\n      }, error => {\n        // no errors in our simulated example\n        this.searching = false;\n        // handle error...\n      });\n\n    this.produtosFiltro.valueChanges\n      .pipe(\n        filter(search => !!search),\n        tap(() => this.searching = true),\n        takeUntil(this._onDestroy),\n        debounceTime(200),\n        map(search => {\n          if (!this.carregaClientes) {\n            return [];\n          }\n          // simulate server fetching and filtering data\n          return this.carregaProdutos.filter(produto => produto.nomeProduto.toLowerCase().includes(search.toLowerCase()));\n        }),\n        delay(500),\n        takeUntil(this._onDestroy)\n      )\n      .subscribe(filtroProduto => {\n        this.searching = false;\n        this.filtroProdutos.next(filtroProduto);\n      }, error => {\n        // no errors in our simulated example\n        this.searching = false;\n        // handle error...\n      });\n\n\n    this.filtroTipoPagamentos = this.formularioLancamento.controls.tipoPagamento.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filtroFormaPagamento(value))\n    );\n  }\n\n\n  formulario(\n    lancamentoForm?: Lancamento\n  ) {\n    this.formularioLancamento = this.fb.group({\n      id: [lancamentoForm.id],\n      dataCadastro: [lancamentoForm.dataCadastro],\n      dataLancamento: [],\n      clienteId: [],\n      nomeCliente: [\" \", Validators.required],\n      cpf: [],\n      dataNascimento: [],\n      cliente: [],\n      email: [],\n      tipoPagamento: [lancamentoForm.tipoPagamento],\n      valorVenda: [lancamentoForm.valorVenda],\n      taxa: [lancamentoForm.taxa],\n      desconto: [lancamentoForm.desconto],\n      entrega: [\" \", Validators.requiredTrue],\n      cep: [lancamentoForm.cep],\n      bairro: [lancamentoForm.bairro],\n      lagradouro: [lancamentoForm.lagradouro],\n      complemento: [lancamentoForm.complemento],\n      numero: [lancamentoForm.numero],\n      telefone: [lancamentoForm.telefone],\n      celular: [lancamentoForm.celular],\n      total: [100],\n      produtos: this.fb.array([\n        this.fb.group({\n          produto: [],\n          valor_venda: [],\n          quantidade: [1],\n          totalProduto: []\n        })\n      ])\n    });\n  }\n\n  get produtosControls() {\n    return this.formularioLancamento.get('produtos') as FormArray;\n  }\n\n  adicionarProduto(event: Event) {\n    event.preventDefault();\n    const produtoLength = this.produtosControls.length;\n    const addProduto = this.fb.group({\n      produto: [],\n      valor_venda: [],\n      quantidade: [1],\n      totalProduto: []\n    })\n\n    this.produtosControls.push(addProduto);\n  }\n\n  removerProduto(index) {\n    this.produtosControls.removeAt(index);\n  }\n\n\n  ngSubmit() {\n\n    if (this.formularioLancamento.controls.entrega.value == \"p\") {\n      console.log(\"salvando true\");\n      console.log(this.formularioLancamento.value);     \n          this.formularioLancamento.patchValue({\n            cep: this.clienteSelecionado.cep1,\n            lagradouro: this.clienteSelecionado.lagradouro1,\n            complemento: this.clienteSelecionado.complemento1,\n            numero: this.clienteSelecionado.numero1,\n            bairro: this.clienteSelecionado.bairro1,\n          });\n          this.salvarPedido();\n      \n    } else if (this.formularioLancamento.controls.entrega.value == \"s\") {\n      console.log(\"salvando false\");\n      this.clienteService.getClienteById(this.formularioLancamento.controls.cliente.value)\n        .subscribe(cli => {\n          const cli1 = cli;\n          this.formularioLancamento.patchValue({\n            cep: cli1.cep2,\n            lagradouro: cli1.lagradouro2,\n            complemento: cli1.complemento2,\n            numero: cli1.numero2,\n            bairro: cli1.bairro2,\n          });\n          this.salvarPedido();\n        })\n    }\n  }\n\n  salvarPedido() {\n    console.log(this.formularioLancamento.value);\n    this.service.salvar(this.formularioLancamento.value).subscribe\n      (salvouPedido => {\n        this.service.msg(\"Pedido Realizado\");\n        console.log(salvouPedido);\n      }, erroSalvar => {\n        this.errors = erroSalvar.error.errors;\n        this.service.msg(this.errors, true);\n\n      }\n      )\n  }\n\n  //CARREGAMENTOS autocomplete\n  carregarClientes() {\n    this.clienteService.carregarClientes()\n      .subscribe(clientes => {\n        this.carregaClientes = clientes;\n      }, errorResponse => {\n        this.errors = errorResponse.error.error;\n        console.log(errorResponse);\n        this.clienteService.msg(this.errors, true);\n      })\n  }\n\n  carregarProdutos() {\n    this.produtoService.carregarProdutos()\n      .subscribe(produtos => {\n        this.carregaProdutos = produtos;\n      }, errorResponse => {\n\n        this.errors = errorResponse.error.error;\n        console.log(errorResponse);\n        this.produtoService.msg(this.errors, true)\n      })\n  }\n\n  carregarFormaPagamento() {\n    this.formaPagService.carregarFp()\n      .subscribe(formaPagamentos => {\n        this.tipoPagamentos = formaPagamentos;\n      }, errorResponse => {\n        this.errors = errorResponse.error.error;\n        console.log(errorResponse);\n        this.produtoService.msg(this.errors, true);\n      })\n  }\n\n  // COMPARAR OS SELECTS DO OS DADOS DO BANCO\n  compararObj(obj1, obj2) {\n    return obj1 && obj2 ? (obj1.id === obj2.id) : obj1 === obj2;\n  }\n\n  //filtros dos autocomplete\n  private _filtroCliente(value: any): Cliente[] {\n    const filterValue = value;\n    return this.carregaClientes.filter(cliente =>\n      cliente.nome.toLowerCase().includes(filterValue)\n    );\n  }\n\n  private _filtroProduto(value: any): Produto[] {\n    const filterValue = value;\n    return this.carregaProdutos.filter(produto =>\n      produto.nomeProduto.toLowerCase().includes(filterValue)\n    );\n  }\n\n  private _filtroFormaPagamento(value: any) {\n    const filterValue = value;\n    return this.tipoPagamentos.filter(formaPag =>\n      formaPag.descricao.toLowerCase().includes(filterValue.toLowerCase())\n    );\n\n  }\n  displayCliente(cliente: Cliente) {\n    return cliente ? cliente.nome : undefined;\n  }\n\n  displayProduto(produtoexibir: Produto) {\n    return produtoexibir ? produtoexibir.nomeProduto : undefined;\n  }\n  //id: any\n  onCliente(id: any) {\n\n    const idAtual = this.formularioLancamento.value.cliente;\n\n    if (idAtual == id) {\n\n    } else {\n      this.clienteService.getClienteById(id).subscribe\n        (cli => {\n          this.clienteSelecionado = cli;\n          if (this.clienteSelecionado.id == id) {\n            this.formularioLancamento.patchValue({\n              cliente: this.clienteSelecionado.id,\n              clienteId: this.clienteSelecionado.id,\n              nomeCliente: this.clienteSelecionado.nome,\n              cpf: this.clienteSelecionado.cpf,\n              dataNascimento: this.clienteSelecionado.dataNascimento,\n              telefone: this.clienteSelecionado.telefone,\n              celular: this.clienteSelecionado.celular,\n              email: this.clienteSelecionado.email\n            });\n            console.log(\"ok\")\n          }\n        })\n    }\n  }\n\n  onProduto(selectProduto: Produto, index: any) {\n    if (selectProduto.id) {\n\n      (<FormArray>this.formularioLancamento.controls['produtos']).at(index)\n        .patchValue({\n          produto: selectProduto.id,\n          valor_venda: selectProduto.valorVenda,\n          quantidade: 1,\n          totalProduto: ''\n        });\n\n      const valorVenda = (<FormArray>this.formularioLancamento.controls['produtos']).at(index).value.valor_venda;\n      const quantidade = (<FormArray>this.formularioLancamento.controls['produtos']).at(index).value.quantidade;\n      (<FormArray>this.formularioLancamento.controls['produtos']).at(index).patchValue({\n        totalProduto: valorVenda * quantidade\n      })\n\n      console.log(\"Venda = \" + valorVenda + \" quantidade = \" + quantidade)\n\n\n    }\n\n\n  }\n\n  displayFormaPagamento(formaPamento: FormaPagamento) {\n    return formaPamento ? formaPamento.descricao : undefined;\n  }\n\n\n  ngOnDestroy() {\n    this._onDestroy.next();\n    this._onDestroy.complete();\n  }\n}\n","<mat-card>\n    <br> <br>\n\n    <mat-card-title>{{ lancamentoNovo.id ? \"Atualizar\" : \"Novo Pedido\" }}</mat-card-title> <br>\n\n    <mat-divider></mat-divider> <br>\n\n    <mat-horizontal-stepper #firststepper>\n        <mat-step [stepControl]=\"firststepper\">\n            <form [formGroup]=\"formularioLancamento\">\n\n                <ng-template matStepLabel>Informe o nome do cliente</ng-template>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                    fxLayoutGap.lt-md=\"0px\">\n                    <mat-card-subtitle fxFlex=\"100\">\n\n                        <h4 class=\"breadcrumb-item active\"> Informações do cliente </h4>\n\n                    </mat-card-subtitle>\n                </div>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                    fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-form-field fxFlex=100>\n                        <mat-select formControlName=\"clienteId\" placeholder=\"Selecione o cliente\"\n                            (ngModelChange)=\"onCliente($event)\">\n                            <!-- place ngx-mat-select-search inside mat-option to allow opening without initial selection -->\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"clienteFiltro\" [searching]=\"searching\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-option *ngFor=\"let cliente of filtroClientes | async\" [value]=\"cliente.id\">\n                                {{ cliente.nome }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n\n                <br>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                    fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-form-field class=\"full-width\" fxFlex=\"30\">\n                        <mat-label>Nome Completo: </mat-label>\n                        <input matInput formControlName=\"nomeCliente\" readonly=\"true\" placeholder=\"Nome Completo:\">\n                    </mat-form-field>\n\n                    <mat-form-field fxFlex=\"15\" color=\"primary\">\n                        <mat-label>Data de nascimento</mat-label>\n                        <input matInput type=\"date\" formControlName=\"dataNascimento\">\n                    </mat-form-field>\n\n                    <mat-form-field fxFlex=\"12\">\n                        <mat-label>CPF:</mat-label>\n                        <input matInput formControlName=\"cpf\" [textMask]=\"{mask: mascaraCpf, guide: false}\"\n                            placeholder=\"CPF:\">\n                    </mat-form-field>\n\n                    <mat-form-field fxFlex=\"30\">\n                        <mat-label>Email:</mat-label>\n                        <input matInput formControlName=\"email\" placeholder=\"Email:\">\n                    </mat-form-field>\n\n\n                </div>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                    fxLayoutGap.lt-md=\"0px\">\n\n                   \n                    <mat-form-field fxFlex=\"15\">\n                        <mat-label>Celular:</mat-label>\n                        <input matInput formControlName=\"celular\" [textMask]=\"{mask: mascaraCelular, guide: false}\"\n                            name=\"celular\">\n                    </mat-form-field>\n\n                    <mat-form-field fxFlex=\"12\">\n                        <mat-label>Telefone:</mat-label>\n                        <input matInput formControlName=\"telefone\"\n                            [textMask]=\"{mask: mascaraTelefoneFixo, guide: false}\" name=\"telefone\">\n                    </mat-form-field>\n\n                   \n                        <section class=\"example-section\">\n                            <label class=\"example-margin\">Local de entrega:</label>\n                            <mat-radio-group formControlName=\"entrega\">\n                              <mat-radio-button class=\"example-margin\" value=\"p\">Principal</mat-radio-button>\n                              <mat-radio-button class=\"example-margin\" value=\"s\">Secundário</mat-radio-button>\n                            </mat-radio-group>\n                          </section>\n                    \n\n\n                </div>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                fxLayoutGap.lt-md=\"0px\">\n                <mat-card-subtitle fxFlex=\"100\">\n                    <ol class=\"breadcrumb mb-4\">\n                        <li class=\"breadcrumb-item active\"> Endereço Principal </li>\n                    </ol>\n                </mat-card-subtitle>\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>CEP:</mat-label>\n                    <input matInput placeholder=\"CEP:\" value=\"{{ clienteSelecionado.cep1 }}\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Bairro:</mat-label>\n                    <input matInput  placeholder=\"Endereço:\" value=\"{{ clienteSelecionado.bairro1  }}\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Endereço:</mat-label>\n                    <input matInput  placeholder=\"Endereço:\" value=\"{{ clienteSelecionado.lagradouro1 }}\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Complemento:</mat-label>\n                    <input matInput  placeholder=\"Complemento:\" value=\"{{ clienteSelecionado.complemento1 }}\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Nº :</mat-label>\n                    <input matInput  placeholder=\"Numero:\" value=\"{{ clienteSelecionado.numero1 }}\">\n                </mat-form-field>\n\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                fxLayoutGap.lt-md=\"0px\">\n                <mat-card-subtitle fxFlex=\"100\">\n                    <ol class=\"breadcrumb mb-4\">\n                        <li class=\"breadcrumb-item active\"> Endereço Secundário </li>\n                    </ol>\n                </mat-card-subtitle>\n            </div>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                fxLayoutGap.lt-md=\"0px\">\n\n                <mat-form-field fxFlex=\"12\">\n                    <mat-label>CEP:</mat-label>\n                    <input matInput  placeholder=\"CEP:\" value=\"{{ clienteSelecionado.cep2 }}\" >\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Bairro:</mat-label>\n                    <input matInput  placeholder=\"Endereço:\" value=\"{{ clienteSelecionado.bairro2 }}\">\n                </mat-form-field>\n\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Endereço:</mat-label>\n                    <input matInput  placeholder=\"Endereço:\" value=\"{{ clienteSelecionado.lagradouro2 }}\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Complemento:</mat-label>\n                    <input matInput  placeholder=\"Complemento:\" value=\"{{ clienteSelecionado.complemento2 }}\">\n                </mat-form-field>\n\n                <mat-form-field fxFlex=\"45\">\n                    <mat-label>Nº :</mat-label>\n                    <input matInput placeholder=\"Complemento:\" value=\"{{ clienteSelecionado.numero2 }}\">\n                </mat-form-field>\n\n            </div>\n\n                <div>\n                                  <!-- matStepperNext -->\n                    <button mat-raised-button  color=\"primary\"  (click)=\"ngSubmit()\">\n                        <mat-icon>send</mat-icon>\n                        Confirmar Cliente\n                    </button>\n                </div>\n            </form>\n        </mat-step>\n        <!-- #docregion label -->\n        <mat-step [stepControl]=\"firststepper\" label=\"Produtos do pedido\">\n            <!-- #enddocregion label -->\n            <form [formGroup]=\"formularioLancamento\">\n                <mat-form-field>\n                    <mat-label>Address</mat-label>\n                    <input matInput placeholder=\"Ex. 1 Main St, New York, NY\" required />\n                </mat-form-field>\n                <div>\n                    <button mat-button matStepperPrevious>Back</button>\n                    <button mat-button matStepperNext>Next</button>\n                </div>\n            </form>\n        </mat-step>\n        <mat-step>\n            <ng-template matStepLabel>Done</ng-template>\n            <p>You are now done.</p>\n            <div>\n                <button mat-button matStepperPrevious>Back</button>\n\n                <button mat-button (click)=\"firststepper.reset()\">Reset</button>\n            </div>\n        </mat-step>\n    </mat-horizontal-stepper>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { AuthGuard } from '../guard/auth.guard';\nimport { LancamentoComponent } from '../lancamentos/lancamento/lancamento.component';\nimport { ProdutoComponent } from '../produtos/produto/produto.component'\n\nconst routes: Routes = [\n  {\n    path: 'lancamento', component: LayoutComponent, canActivate: [AuthGuard], children: [\n      { path: 'principal', component: LancamentoComponent },\n      { path: '', redirectTo: '/lancamento/principal', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LancamentosRoutingModule { }\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatSelectModule } from '@angular/material/select';\nimport { LancamentosRoutingModule } from './lancamentos-routing.module';\nimport { LancamentoComponent } from './lancamento/lancamento.component';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { MatStepperModule } from '@angular/material/stepper';\n\n\n\n@NgModule({\n  declarations: [LancamentoComponent],\n  imports: [\n    CommonModule,\n    LancamentosRoutingModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatIconModule,\n    MatDividerModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    TextMaskModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    NgxMatSelectSearchModule,\n    MatStepperModule,    \n  ],\n  exports: [\n    LancamentoComponent\n  ]\n})\nexport class LancamentosModule { }\n","import { Component, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport jQuery from 'jquery';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  usuarioLogado: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n\n    this.usuarioLogado = this.authService.getUsuarioAuthenticado();\n  }\n  \n  ngAfterViewInit() {\n    \n  }\n  \n  logout() {\n    this.authService.encerrarSessao();\n  \n  }\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <button mat-icon-button>\n        <mat-icon (click)=\"sidenav.toggle()\">menu</mat-icon>\n      </button>\n      <h1>GenrenciaRE</h1>\n      <span class=\"menu-spacer\"></span>   \n      <span class=\"spacer\"></span>       \n   <div>\n    <a mat-button > Usuario conectado {{ usuarioLogado }} </a>\n   </div>\n      \n    \n    </mat-toolbar-row>\n     \n    \n  </mat-toolbar>\n\n  <mat-sidenav-container >\n    <mat-sidenav #sidenav>\n      <mat-nav-list>\n        <div > Sistema</div>\n\n\n        <mat-nav-list>\n\n            <a mat-list-item class=\"nav-link\" routerLink=\"/home\" routerLinkActive=\"selected\">\n                <div class=\"sb-nav-link-icon \"> <span class=\"material-icons \"> \n                    home    \n                </span> </div>\n                <div class=\"sb-nav-link-icon\"> Home </div> \n                 \n            </a>\n\n        </mat-nav-list>\n\n        <div >Consulta / Cadastro</div>\n\n\n        <mat-nav-list>\n\n            <a mat-list-item class=\"nav-link\" routerLink=\"/clientes/principal\" routerLinkActive=\"selected\">\n                <div class=\"sb-nav-link-icon \"> <span class=\"material-icons \"> \n                    face    \n                </span> </div>\n                <div class=\"sb-nav-link-icon\"> Clientes </div> \n                 \n            </a>\n\n        </mat-nav-list>\n\n        <mat-nav-list>\n\n            <a mat-list-item class=\"nav-link \" routerLink=\"/produtos/principal\" routerLinkActive=\"selected\">\n                <div class=\"sb-nav-link-icon \"> <span class=\"material-icons \"> \n                    <i class=\"fab fa-product-hunt\"></i>\n                </span> </div>\n                <div class=\"sb-nav-link-icon\"> Produtos </div>                         \n            </a>\n\n        </mat-nav-list>               \n\n        <mat-nav-list>\n            <a mat-list-item class=\"nav-link \" routerLink=\"/fornecedores/principal\" routerLinkActive=\"selected\">\n                <div class=\"sb-nav-link-icon \">\n                    <span class=\"material-icons \"> shopping_cart</span> </div>\n                    <div class=\"sb-nav-link-icon\"> Fornecedores </div>                         \n            </a>\n        </mat-nav-list>\n\n        <mat-nav-list>\n            <a mat-list-item class=\"nav-link \" routerLink=\"/forma-pagamento/principal\" routerLinkActive=\"selected\">\n                <div class=\"sb-nav-link-icon \">\n                    <span class=\"material-icons \"> payment </span> </div>\n                    <div class=\"sb-nav-link-icon\"> Formas de Pagamento </div>                         \n            </a>\n        </mat-nav-list>\n\n        <div class=\"sb-sidenav-menu-heading\">Configurações Gerais</div>\n\n        <mat-nav-list>\n\n            <a mat-list-item class=\"nav-link\"  routerLink=\"/configuracoes\" routerLinkActive=\"selected\">\n                <div class=\"sb-nav-link-icon \"> <span class=\"material-icons \"> \n                    settings    \n                </span> </div>\n                <div class=\"sb-nav-link-icon\"> Configurações </div>  \n            </a>\n\n        </mat-nav-list>\n\n        <div class=\"sb-sidenav-menu-heading \">Logout</div>\n\n        <mat-nav-list>\n            <a mat-list-item class=\"nav-link \" href=\"# \" (click)=\"logout(); \">\n                <div class=\"sb-nav-link-icon \"></div>\n                <span class=\"material-icons \">\n                exit_to_app</span> Sair\n            </a>\n        </mat-nav-list>\n  \n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <div style=\"height: 88vh;\">\n  \n        <router-outlet></router-outlet>\n      </div>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n  \n  \n  ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuario } from './usuario';\nimport { AuthService } from '../service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  username: string;\n  password: string;\n  cadastrando: boolean;\n  msgErrorsApi: string;\n  progress = false;\n\n\n  constructor(private router: Router,\n    private authService: AuthService,\n  ) { }\n\n  onSubmit() {\n    this.progress = true;\n    this.authService\n      .login(this.username, this.password)\n      .subscribe(response => {\n        const access_token = JSON.stringify(response);\n        sessionStorage.setItem('access_token', access_token);\n        this.router.navigate(['/home']);\n        this.authService.msg('Bem vindo, ' + this.username);\n        this.progress = false;\n      }, errorResponse => {\n        this.progress = false;\n        this.authService.msg('Usuário e/ou senha incorretos(s).', true);\n      });\n  }\n\n  preparaCadastrar(event) {\n    event.preventDefault();\n    this.cadastrando = true;\n  }\n  cancelaCadastro() {\n    this.cadastrando = false;\n  }\n\n  cadastrar() {\n    const usuario: Usuario = new Usuario();\n    usuario.username = this.username;\n    usuario.password = this.password;\n    this.authService\n      .salvar(usuario)\n      .subscribe(response => {\n        this.authService.msg('Cadastro realizado com sucesso! efetue o login.');\n        this.cadastrando = false;\n        this.username = '';\n        this.password = '';\n      }, errorResponse => {\n        this.msgErrorsApi = errorResponse.error.errors;\n        this.authService.msg(this.msgErrorsApi, true);\n\n      });\n  }\n\n}\n","<div class=\"bg-primary\">\n    <div id=\"layoutAuthentication\">\n        <div id=\"layoutAuthentication_content\">\n            <main>\n                <div class=\"container\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-lg-5\">\n                            <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                <div class=\"card-header\">\n                                    <mat-card-title>\n                                        {{ cadastrando ? 'Cadastro' : 'Entrar' }}\n                                    </mat-card-title>\n\n                                </div>\n                                <div class=\"card-body\">\n                                    <form #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n                                        <p>\n                                            <mat-form-field>\n                                                <mat-label>Login</mat-label>\n                                                <input matInput placeholder=\"Digite seu login\" [(ngModel)]=\"username\" name=\"username\" id=\"inputUsername\" autocomplete=\"off\">\n                                            </mat-form-field>\n                                        </p>\n\n                                        <p>\n                                            <mat-form-field>\n                                                <mat-label>Senha</mat-label>\n                                                <input matInput placeholder=\"Digite sua senha\" type=\"password\" [(ngModel)]=\"password\" name=\"password\" id=\"inputPassword\">\n                                            </mat-form-field>\n                                        </p>\n\n\n                                        <div>\n                                            <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                                            <button mat-stroked-button color=\"primary\" type=\"submit\" *ngIf=\"!cadastrando && !progress\">\n                                                <mat-icon>send</mat-icon>  \n                                                Enviar\n                                            </button>\n                                        </div>\n\n\n                                        <button mat-stroked-button color=\"primary\" type=\"button\" (click)=\"cadastrar()\" *ngIf=\"cadastrando\">\n                                            Cadastrar</button>\n\n\n\n                                        <button mat-stroked-button class=\"ml-2\" color=\"warn\" type=\"button\" *ngIf=\"cadastrando\" (click)=\"cancelaCadastro()\">\n                                            Cancelar cadastro</button>\n\n                                    </form>\n                                </div>\n                                <div class=\"card-footer small\">\n                                    <a href=\"\" (click)=\"preparaCadastrar($event)\">\n                                        Não possui Usuario? cadastre-se!</a>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n        <div id=\"layoutAuthentication_footer\">\n            <footer class=\"py-4 bg-light mt-auto\">\n                <div class=\"container-fluid\">\n                    <div class=\"d-flex align-items-center justify-content-between small\">\n                        <div class=\"text-muted\">Copyright &copy; Your Website 2020</div>\n                        <div>\n                            <a href=\"#\">Privacy Policy</a> &middot;\n                            <a href=\"#\">Terms &amp; Conditions</a>\n                        </div>\n                    </div>\n                </div>\n            </footer>\n        </div>\n    </div>\n</div>","export class Usuario {\r\n    username: string;\r\n    password: string;\r\n}","export class CategoriaProduto {\r\n\r\n    id: number;\r\n    dataCadastro: string;\r\n    nomeCategoriaProduto: string;\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ProdutoDetalheComponent } from '../produto-detalhe/produto-detalhe.component';\nimport { Produto } from '../produto';\nimport { TipoProduto } from '../tipo-produto';\nimport { CategoriaProduto } from '../categoria-produto';\n\n@Component({\n  selector: 'app-produto-delete',\n  templateUrl: './produto-delete.component.html',\n  styleUrls: ['./produto-delete.component.css']\n})\nexport class ProdutoDeleteComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ProdutoDetalheComponent>,\n    @Inject(MAT_DIALOG_DATA) public produto?: Produto,\n    @Inject(MAT_DIALOG_DATA) public categoria?: CategoriaProduto,\n    @Inject(MAT_DIALOG_DATA) public tipo?: TipoProduto,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  fechar() {\n    this.dialogRef.close();\n  }\n\n}\n","<mat-card style=\"text-align: center;\">\n    <mat-card-header>\n\n        <mat-card-title>\n            Confirmar\n        </mat-card-title>\n\n    </mat-card-header>\n\n    <div *ngIf=\"produto.nomeProduto\">\n        <mat-card-content>\n            Deseja Confirmar a deleção do Produto <strong>{{ produto.nomeProduto }}</strong> ?\n        </mat-card-content>\n    </div>\n\n    <div *ngIf=\"categoria.nomeCategoriaProduto\">\n        <mat-card-content>\n            Deseja Confirmar a deleção da Categoria <strong>{{ categoria.nomeCategoriaProduto }}</strong> ?\n        </mat-card-content>\n    </div>\n\n    <div *ngIf=\"tipo.nomeTipoProduto\">\n        <mat-card-content>\n            Deseja Confirmar a deleção do Tipo <strong>{{ tipo.nomeTipoProduto }}</strong> ?\n        </mat-card-content>\n    </div>\n\n    <mat-card-actions>\n\n        <button mat-stroked-button color=\"primary\" [mat-dialog-close]=\"true\"> \n            <mat-icon>delete</mat-icon>        \n            Confirmar\n        </button>\n\n        <button mat-stroked-button style=\"color: #868d95;\" (click)=\"fechar()\">     \n            <mat-icon>cancel</mat-icon>      \n            Cancelar\n        </button>\n\n    </mat-card-actions>\n</mat-card>","import { Component, OnInit, Inject } from '@angular/core';\nimport { ProdutoDeleteComponent } from '../produto-delete/produto-delete.component';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Produto } from '../produto';\nimport { CategoriaProduto } from '../categoria-produto';\nimport { TipoProduto } from '../tipo-produto';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { ProdutoService } from 'src/app/service/produto.service';\n\n@Component({\n  selector: 'app-produto-detalhe',\n  templateUrl: './produto-detalhe.component.html',\n  styleUrls: ['./produto-detalhe.component.css']\n})\nexport class ProdutoDetalheComponent implements OnInit {\n\n  formProduto: FormGroup;\n  formCategoriaProduto: FormGroup;\n  formTipoProduto: FormGroup;\n  errors: string;\n  progress = false;\n\n  produtoAtt: Produto;\n  categoriaProdutoAtt: CategoriaProduto;\n  tipoProdutoAtt: TipoProduto;\n\n  listarCategoriaProdutos: CategoriaProduto[] = [];\n  listaTipoProdutos: TipoProduto[] = [];\n\n  constructor(\n    private service: ProdutoService,\n    private fb: FormBuilder,\n    public dialogRef: MatDialogRef<ProdutoDeleteComponent>,\n    @Inject(MAT_DIALOG_DATA) public produto?: Produto,\n    @Inject(MAT_DIALOG_DATA) public categoria?: CategoriaProduto,\n    @Inject(MAT_DIALOG_DATA) public tipo?: TipoProduto,\n  ) {\n    this.produtoAtt = new Produto();\n    this.categoriaProdutoAtt = categoria;\n    this.tipoProdutoAtt = tipo;\n  }\n\n  ngOnInit(): void {\n    this.produtoAtt = this.produto;\n    this.montarFormulario(this.produtoAtt, this.categoriaProdutoAtt, this.tipo);\n    this.carregarCategoriaProduto();\n    this.carregarTipoProdutos();\n  }\n\n  // FORMULARIOS DE PRODUTO, CATEGORIA E TIPO PRODUTO\n  montarFormulario(\n    produtoForm: Produto,\n    categoriaProdutoForm: CategoriaProduto,\n    tipoProdutoform: TipoProduto\n  ) {\n    this.formProduto = this.fb.group({\n      id: [produtoForm.id],\n      dataCadastro: [produtoForm.dataCadastro],\n      nomeProduto: [produtoForm.nomeProduto, Validators.required],\n      valorVenda: [produtoForm.valorVenda, Validators.required],\n      valorCompra: [produtoForm.valorCompra, Validators.required],\n      categoriaProduto: [produtoForm.categoriaProduto, Validators.required],\n      tipoProduto: [produtoForm.tipoProduto, Validators.required]\n    });\n\n    this.formCategoriaProduto = this.fb.group({\n      id: [categoriaProdutoForm.id],\n      dataCadastro: [categoriaProdutoForm.dataCadastro],\n      nomeCategoriaProduto: [categoriaProdutoForm.nomeCategoriaProduto, Validators.required]\n    });\n\n    this.formTipoProduto = this.fb.group({\n      id: [tipoProdutoform.id],\n      dataCadastro: [tipoProdutoform.dataCadastro],\n      nomeTipoProduto: [tipoProdutoform.nomeTipoProduto, Validators.required]\n    });\n  }\n\n  atualizarProdutos() {\n    this.progress = true;\n    this.service.atualizarProduto(this.formProduto.value)\n      .subscribe(response => {\n        this.service.msg('Produto Atualizado!');\n        this.progress = false;\n      }, errorResponse => {\n        this.progress = false;\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n      });\n  }\n\n  atualizarCategoriaProduto() {\n    this.progress = true;\n    this.service.atualizarCategoriaProduto(this.formCategoriaProduto.value)\n      .subscribe(response => {\n        this.service.msg('Categoria Atualizado!');\n        this.progress = false;\n      }, errorResponse => {\n        this.progress = false;\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n      });\n  }\n\n  \n  atualizarTipoProduto() {\n    this.progress = true;\n    this.service.atualizarTipoProduto(this.formTipoProduto.value)\n      .subscribe(response => {\n        this.service.msg('Tipo Produto Atualizado!');\n        this.progress = false;\n      }, errorResponse => {\n        this.progress = false;\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n      });\n  }\n\n carregarCategoriaProduto() {\n    this.service.carregarCategoriasProdutos()\n      .subscribe(response => {\n        this.listarCategoriaProdutos = response;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg('Não foi possível Carregar as Categorias', true);\n      });\n  }\n\n carregarTipoProdutos() {\n    this.service.carregarTipoProdutos()\n      .subscribe(response => {\n        console.log(response);\n        this.listaTipoProdutos = response;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg('Não foi possível Carregar os tipos', true);\n      });\n  } \n\n  fechar(event: Event) {\n    event.preventDefault();\n    this.dialogRef.close();\n  }\n\n  // COMPARAR OS SELECTS DO OS DADOS DO BANCO\n  compararObj(obj1, obj2) {\n    return obj1 && obj2 ? (obj1.id === obj2.id) : obj1 === obj2;\n  }\n\n\n\n}\n","<div *ngIf=\"produto.nomeProduto\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Atualizar Produto</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-content>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-card-subtitle fxFlex=\"100\">\n                    <ol class=\"breadcrumb mb-4\">\n                        <li class=\"breadcrumb-item active\"> Produto </li>\n                    </ol>\n                </mat-card-subtitle>\n            </div>\n\n            <form fxLayout=\"column\" [formGroup]=\"formProduto\" (ngSubmit)=\"atualizarProdutos()\">\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\" *ngIf=\"formProduto.controls.id.value\">\n                    <mat-form-field fxFlex=\"15\">\n                        <mat-label>ID :</mat-label>\n                        <input matInput value=\"{{ produtoAtt.id }}\" disabled>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>Data de Cadastro</mat-label>\n                        <input matInput type=\"text\" value=\"{{ produtoAtt.dataCadastro }}\" disabled>\n                    </mat-form-field>\n                </div>\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-form-field fxFlex=\"100\">\n                        <mat-label>Descrição</mat-label>\n                        <input matInput formControlName=\"nomeProduto\" placeholder=\"Descrição\">\n                    </mat-form-field>\n\n                </div>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-form-field fxFlex=\"50\">\n                        <mat-label>Categoria</mat-label>\n                        <mat-select placeholder=\"selecione a categoria\" formControlName=\"categoriaProduto\" [compareWith]=\"compararObj\">\n                            <mat-option *ngFor=\"let categoria of listarCategoriaProdutos\" [value]=\"categoria\">\n                                {{ categoria.nomeCategoriaProduto }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                    <mat-form-field fxFlex=\"50\">\n                        <mat-label>Tipo</mat-label>\n                        <mat-select placeholder=\"selecione a tipo\" formControlName=\"tipoProduto\" [compareWith]=\"compararObj\">\n                            <mat-option *ngFor=\"let tipo of listaTipoProdutos\" [value]=\"tipo\">\n                                {{ tipo.nomeTipoProduto }}\n                            </mat-option>\n                        </mat-select>\n                    </mat-form-field>\n\n                </div>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-form-field>\n                        <mat-label>Preço de compra</mat-label>\n                        <input matInput type=\"tex\" formControlName=\"valorCompra\" class=\"valor\">\n                        <span matPrefix>R$&nbsp;</span>\n                    </mat-form-field>\n\n\n                    <mat-form-field>\n                        <mat-label>Preço de venda</mat-label>\n                        <input matInput type=\"text\" formControlName=\"valorVenda\" class=\"valor\">\n                        <span matPrefix>R$&nbsp;</span>\n                    </mat-form-field>\n\n                </div>\n\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                    <button mat-stroked-button [disabled]=\"formProduto.invalid\" type=\"submit\" *ngIf=\"!progress\" color=\"primary\"> \n                         <mat-icon>save</mat-icon>                              \n                         Atualizar\n                    </button>\n\n                    <button mat-stroked-button *ngIf=\"!progress\"  (click)=\"fechar($event)\" color=\"warn\"> \n                        <mat-icon>delete</mat-icon>                              \n                        Cancelar\n                    </button>\n\n                </div>\n\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<div *ngIf=\"categoria.nomeCategoriaProduto\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Atualizar Categoria</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-content>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-card-subtitle fxFlex=\"100\">\n                    <ol class=\"breadcrumb mb-4\">\n                        <li class=\"breadcrumb-item active\"> Categoria </li>\n                    </ol>\n                </mat-card-subtitle>\n            </div>\n\n            <form fxLayout=\"column\" [formGroup]=\"formCategoriaProduto\" (ngSubmit)=\"atualizarCategoriaProduto()\">\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\" *ngIf=\"formProduto.controls.id.value\">\n                    <mat-form-field fxFlex=\"15\">\n                        <mat-label>ID :</mat-label>\n                        <input matInput value=\"{{ categoriaProdutoAtt.id }}\" disabled>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>Data de Cadastro</mat-label>\n                        <input matInput type=\"text\" value=\"{{ categoriaProdutoAtt.dataCadastro }}\" disabled>\n                    </mat-form-field>\n                </div>\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-form-field fxFlex=\"100\">\n                        <mat-label>Descrição</mat-label>\n                        <input matInput formControlName=\"nomeCategoriaProduto\" placeholder=\"Descrição\">\n                    </mat-form-field>\n\n                </div>\n                \n\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                    <button mat-stroked-button [disabled]=\"formCategoriaProduto.invalid\" type=\"submit\" *ngIf=\"!progress\" color=\"primary\"> \n                         <mat-icon>save</mat-icon>                              \n                         Atualizar\n                    </button>\n\n                    <button mat-stroked-button *ngIf=\"!progress\"  (click)=\"fechar($event)\" color=\"warn\"> \n                        <mat-icon>delete</mat-icon>                              \n                        Cancelar\n                    </button>\n\n                </div>\n\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>\n\n<div *ngIf=\"tipo.nomeTipoProduto\">\n    <mat-card>\n        <mat-card-header>\n            <mat-card-title>Atualizar Tipo</mat-card-title>\n        </mat-card-header>\n\n        <mat-card-content>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n                <mat-card-subtitle fxFlex=\"100\">\n                    <ol class=\"breadcrumb mb-4\">\n                        <li class=\"breadcrumb-item active\"> Tipo Produto </li>\n                    </ol>\n                </mat-card-subtitle>\n            </div>\n\n            <form fxLayout=\"column\" [formGroup]=\"formTipoProduto\" (ngSubmit)=\"atualizarTipoProduto()\">\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\" *ngIf=\"formProduto.controls.id.value\">\n                    <mat-form-field fxFlex=\"15\">\n                        <mat-label>ID :</mat-label>\n                        <input matInput value=\"{{ tipoProdutoAtt.id }}\" disabled>\n                    </mat-form-field>\n\n                    <mat-form-field>\n                        <mat-label>Data de Cadastro</mat-label>\n                        <input matInput type=\"text\" value=\"{{ tipoProdutoAtt.dataCadastro }}\" disabled>\n                    </mat-form-field>\n                </div>\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\" fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-form-field fxFlex=\"100\">\n                        <mat-label>Descrição</mat-label>\n                        <input matInput formControlName=\"nomeTipoProduto\" placeholder=\"Descrição\">\n                    </mat-form-field>\n\n                </div>\n                \n\n                <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                    <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                    <button mat-stroked-button [disabled]=\"formTipoProduto.invalid\" type=\"submit\" *ngIf=\"!progress\" color=\"primary\"> \n                         <mat-icon>save</mat-icon>                              \n                         Atualizar\n                    </button>\n\n                    <button mat-stroked-button *ngIf=\"!progress\"  (click)=\"fechar($event)\" color=\"warn\"> \n                        <mat-icon>delete</mat-icon>                              \n                        Cancelar\n                    </button>\n\n                </div>\n\n            </form>\n        </mat-card-content>\n    </mat-card>\n</div>","import { Cliente } from '../clientes/cliente';\r\nimport { CategoriaProduto } from './categoria-produto';\r\nimport { TipoProduto } from './tipo-produto';\r\n\r\nexport class Produto {\r\n\r\n    id: number;\r\n    dataCadastro: string;\r\n    nomeProduto: string;\r\n    valorVenda: string;\r\n    valorCompra: string;  \r\n    categoriaProduto: CategoriaProduto;\r\n    tipoProduto: TipoProduto;\r\n    cliente: Cliente;\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { ProdutoService } from 'src/app/service/produto.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Produto } from '../produto';\nimport { CategoriaProduto } from '../categoria-produto';\nimport { TipoProduto } from '../tipo-produto';\nimport { ProdutoDeleteComponent } from '../produto-delete/produto-delete.component';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { PageEvent } from '@angular/material/paginator';\nimport { ProdutoDetalheComponent } from '../produto-detalhe/produto-detalhe.component';\n\n\n\n@Component({\n  selector: 'app-produto',\n  templateUrl: './produto.component.html',\n  styleUrls: ['./produto.component.css']\n})\nexport class ProdutoComponent implements OnInit {\n  // Variaveis para cadastro \n  produtoNovo: Produto;\n  categoriaProdutoNovo: CategoriaProduto;\n  tipoProdutoNovo: TipoProduto;\n  // carregamentos\n  carregaCategoriaProdutos: CategoriaProduto[] = [];\n  carregaTipoProdutos: TipoProduto[] = [];\n  produtos: Produto[] = [];\n  categorias: CategoriaProduto[] = []\n  tipos: TipoProduto[] = []\n\n  // Formularios\n  formProduto: FormGroup;\n  formCategoriaProduto: FormGroup;\n  formTipoProduto: FormGroup;\n  errors: string;\n  progress = false;\n\n  // PAGINAÇÃO\n  totalElementos = 0;\n  pagina = 0;\n  tamanho = 4;\n  pageSizeOptions: number[] = [2, 4, 6, 10];\n  filtroTable;\n\n  totalElementosCategoria = 0;\n  paginaCategoria = 0;\n  tamanhoCategoria = 4;\n  pageSizeOptionsCategoria: number[] = [2, 4, 6, 10];\n  filtroTableCategoria;\n\n  totalElementosTipo = 0;\n  paginaTipo = 0;\n  tamanhoTipo = 4;\n  pageSizeOptionsTipo: number[] = [2, 4, 6, 10];\n  filtroTableTipo;\n\n  //Montar a tabelas\n  dataSourceProduto = new MatTableDataSource<Produto>();\n  dataSourceCategoriaProduto = new MatTableDataSource<CategoriaProduto>();\n  dataSourceTipoProduto = new MatTableDataSource<TipoProduto>();\n  colunasProduto = ['id', 'produto', 'categoria', 'tipo', 'dataCadastro', 'detalhes', 'apagar'];\n  colunasCategoria = ['id', 'categoria', 'dataCadastro', 'detalhes', 'apagar'];\n  colunasTipo = ['id', 'tipo', 'dataCadastro', 'detalhes', 'apagar'];\n\n\n  constructor(\n    private service: ProdutoService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n  ) {\n    this.produtoNovo = new Produto();\n    this.categoriaProdutoNovo = new CategoriaProduto();\n    this.tipoProdutoNovo = new TipoProduto();\n  }\n\n  ngOnInit(): void {\n    this.montarFormulario(this.produtoNovo, this.categoriaProdutoNovo, this.tipoProdutoNovo);\n    this.listarProdutos(this.pagina, this.tamanho);\n    this.listarCategoriaProduto(this.paginaCategoria, this.tamanhoCategoria);\n    this.listarTipoProduto(this.paginaTipo, this.tamanhoTipo);\n    this.carregarCategoriaProdutos();\n    this.carregarTipoProdutos();\n  }\n\n  // FORMULARIOS DE PRODUTO, CATEGORIA E TIPO PRODUTO\n  montarFormulario(\n    produtoForm: Produto,\n    categoriaProdutoForm: CategoriaProduto,\n    tipoProdutoform: TipoProduto\n  ) {\n    this.formProduto = this.fb.group({\n      id: [produtoForm.id],\n      dataCadastro: [produtoForm.dataCadastro],\n      nomeProduto: [produtoForm.nomeProduto, Validators.required],\n      valorVenda: [produtoForm.valorVenda, Validators.required],\n      valorCompra: [produtoForm.valorCompra],\n      categoriaProduto: [produtoForm.categoriaProduto, Validators.required],\n      tipoProduto: [produtoForm.tipoProduto, Validators.required]\n    });\n\n    this.formCategoriaProduto = this.fb.group({\n      id: [categoriaProdutoForm.id],\n      dataCadastro: [categoriaProdutoForm.dataCadastro],\n      nomeCategoriaProduto: [categoriaProdutoForm.nomeCategoriaProduto, Validators.required]\n    });\n\n    this.formTipoProduto = this.fb.group({\n      id: [tipoProdutoform.id],\n      dataCadastro: [tipoProdutoform.dataCadastro],\n      nomeTipoProduto: [tipoProdutoform.nomeTipoProduto, Validators.required]\n    });\n  }\n\n  //------------------------------------------------------- FUNÇÕES FORMULARIO PRODUTOS\n  submitProduto() {\n    this.progress = true;\n    this.service.salvarProduto(this.formProduto.value)\n      .subscribe(response => {\n        this.produtoNovo = response;\n        this.formProduto.setValue(response);\n        this.service.msg('Produto Salvo!');\n        this.progress = false;\n      }, errorResponse => {\n        this.progress = false;\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg(this.errors, true);\n      });\n  }\n\n  atualizarProdutos(event: Event) {\n    event.preventDefault();\n    this.progress = true;\n    this.service.atualizarProduto(this.formProduto.value)\n      .subscribe(response => {\n        this.service.msg('Produto Atualizado!');\n        this.listarProdutos(this.pagina, this.tamanho)\n        this.progress = false;\n      }, errorResponse => {\n        this.progress = false;\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n      });\n  }\n\n  PreparadeletarProdutoForm(produto: Produto, event: Event) {\n    event.preventDefault();\n    this.dialog.open(ProdutoDeleteComponent, {\n      data: produto\n    }).afterClosed().subscribe(responseClose => {\n      if (responseClose) {\n        this.progress = true;\n        this.service.deleteProduto(this.formProduto.value)\n          .subscribe(responseDelete => {\n            this.service.msg('Fornecedor deletado!');\n            this.produtoNovo = new Produto();\n            this.formProduto.reset();\n            this.progress = false;\n          }, errorResponse => {\n            this.progress = false;\n            this.errors = errorResponse.error.errors;\n            this.service.msg(this.errors, true);\n          });\n      }\n    });\n\n  }\n\n  preparaDelecaoProdutoList(produto: Produto, event: Event) {\n    event.preventDefault();\n    this.dialog.open(ProdutoDeleteComponent, {\n      data: produto\n    }).afterClosed().subscribe(response => {\n      if (response) {\n\n        this.service.deleteProduto(produto)\n          .subscribe(responseDelete => {\n            this.service.msg('Produto deletado!');\n            if (!this.filtroTable) {\n              this.listarProdutos(this.pagina, this.tamanho);\n\n            } else {\n              this.service.buscarProdutos(this.filtroTable, this.pagina, this.tamanho)\n                .subscribe(responseFilter => {\n                  this.produtos = responseFilter.content;\n                  this.totalElementos = responseFilter.totalElements;\n                  this.pagina = responseFilter.number;\n                  this.dataSourceProduto.data = this.produtos;\n\n                });\n            }\n\n          }, errorResponse => {\n            this.service.msg('Ocorreu um erro ao deletar o cliente', true)\n\n          });\n      }\n    });\n  }\n\n  applyFilterProduto(event: Event) {\n    this.filtroTable = (event.target as HTMLInputElement).value;\n    this.service.buscarProdutos(this.filtroTable, 0, 4)\n      .subscribe(response => {\n        this.produtos = response.content;\n        this.totalElementos = response.totalElements;\n        this.pagina = response.number;\n        this.dataSourceProduto.data = this.produtos;\n      },\n        errorResponse => {\n          this.service.msg('erro ao buscar', true);\n        });\n    this.dataSourceProduto.filter = this.filtroTable.trim().toLowerCase();\n\n  }\n\n  listarProdutos(pagina = 0, tamanho = 4) {\n    this.service.getAllProdutos(pagina, tamanho)\n      .subscribe(response => {\n        this.produtos = response.content;\n        this.totalElementos = response.totalElements;\n        this.pagina = response.number;\n        this.dataSourceProduto.data = this.produtos;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg('Não foi possível Carregar os produtos', true);\n      });\n  }\n\n  DetalhesProduto(produto: Produto) {\n    this.dialog.open(ProdutoDetalheComponent, {\n      height: '500px',\n      width: '850px',\n      data: produto\n\n    }).afterClosed().subscribe(response => {\n      if (!this.filtroTable) {\n        this.listarProdutos(this.pagina, this.tamanho);\n      } else {\n        this.service.buscarProdutos(this.filtroTable, this.pagina, this.tamanho)\n          .subscribe(responseAt => {\n            this.produtos = responseAt.content;\n            this.totalElementos = responseAt.totalElements;\n            this.pagina = responseAt.number;\n            this.dataSourceProduto.data = this.produtos;\n          });\n      }\n    });\n  }\n\n  novoProduto(event: Event) {\n    event.preventDefault();\n    this.produtoNovo = new Produto();\n    this.formProduto.reset();\n  }\n\n  // ------------------------------------------------------- FUNÇÕES FORMULARIO Categoria\n  submitCategoriaProduto() {\n    this.progress = true;\n    this.service.salvarCategoriaProduto(this.formCategoriaProduto.value)\n      .subscribe(response => {\n        this.formCategoriaProduto.setValue(response);\n        this.categoriaProdutoNovo = response;\n        this.service.msg('Categoria Salvo!');\n        this.carregarCategoriaProdutos();\n        this.listarCategoriaProduto(this.paginaCategoria, this.tamanhoCategoria);\n        this.progress = false;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n  }\n\n  carregarCategoriaProdutos() {\n    this.service.carregarCategoriasProdutos()\n      .subscribe(response => {\n        console.log(response);\n        this.carregaCategoriaProdutos = response;\n        console.log(this.carregaCategoriaProdutos);\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg('Não foi possível Carregar as Categorias', true);\n      });\n  }\n\n  listarCategoriaProduto(pagina = 0, tamanho = 4) {\n    this.service.getAllCategoriaProdutos(pagina, tamanho)\n      .subscribe(response => {\n        this.categorias = response.content;\n        this.totalElementosCategoria = response.totalElements;\n        this.paginaCategoria = response.number;\n        this.dataSourceCategoriaProduto.data = this.categorias;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg('Não foi possível Carregar categorias', true);\n      });\n  }\n\n  PreparadeletarCategoriaForm(categria: CategoriaProduto, event: Event) {\n    event.preventDefault();\n    this.dialog.open(ProdutoDeleteComponent, {\n      data: categria\n    }).afterClosed().subscribe(responseClose => {\n      if (responseClose) {\n        this.progress = true;\n        this.service.deleteCategoriaProduto(this.formCategoriaProduto.value)\n          .subscribe(responseDelete => {\n            this.service.msg('Categoria deletado!');\n            this.categoriaProdutoNovo = new CategoriaProduto();\n            this.formCategoriaProduto.reset();\n            this.carregarCategoriaProdutos();\n            this.listarCategoriaProduto(this.paginaCategoria, this.tamanhoCategoria)\n            this.progress = false;\n          }, errorResponse => {\n            this.progress = false;\n            this.errors = errorResponse.error.errors;\n            this.service.msg(this.errors, true);\n          });\n      }\n    });\n  }\n\n  PreparadeletarCategoriaList(categoria: CategoriaProduto, event: Event) {\n    event.preventDefault();\n    this.dialog.open(ProdutoDeleteComponent, {\n      data: categoria\n    }).afterClosed().subscribe(response => {\n      if (response) {\n\n        this.service.deleteCategoriaProduto(categoria)\n          .subscribe(responseDelete => {\n            this.service.msg('Categoria deletado!');\n            if (!this.filtroTableCategoria) {\n              this.listarCategoriaProduto(this.paginaCategoria, this.tamanhoCategoria);\n\n            } else {\n              this.service.buscarCategoriaProdutos(this.filtroTableCategoria, this.paginaCategoria, this.tamanhoCategoria)\n                .subscribe(responseFilter => {\n                  this.categorias = responseFilter.content;\n                  this.totalElementosCategoria = responseFilter.totalElements;\n                  this.paginaCategoria = responseFilter.number;\n                  this.dataSourceCategoriaProduto.data = this.categorias;\n\n                });\n            }\n\n          }, errorResponse => {\n            this.service.msg('Ocorreu um erro ao deletar a Categoria', true)\n\n          });\n      }\n    });\n  }\n\n  atualizarCategoriaProduto(event: Event) {\n    event.preventDefault();\n    this.progress = true;\n    this.service.atualizarCategoriaProduto(this.formCategoriaProduto.value)\n      .subscribe(response => {\n        this.service.msg('Categoria Atualizado!');\n        this.carregarCategoriaProdutos();\n        this.listarCategoriaProduto(this.paginaCategoria, this.tamanhoCategoria)\n        this.progress = false;\n      }, errorResponse => {\n        this.progress = false;\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n      });\n  }\n\n  detalhesCategoriaproduto(categoria: CategoriaProduto) {\n    this.dialog.open(ProdutoDetalheComponent, {\n      data: categoria\n\n    }).afterClosed().subscribe(response => {\n      if (!this.filtroTableCategoria) {\n        this.listarCategoriaProduto(this.pagina, this.tamanho);\n      } else {\n        this.service.buscarCategoriaProdutos(this.filtroTableCategoria, this.paginaCategoria, this.tamanhoCategoria)\n          .subscribe(responseAt => {\n            this.categorias = responseAt.content;\n            this.totalElementosCategoria = responseAt.totalElements;\n            this.paginaCategoria = responseAt.number;\n            this.dataSourceCategoriaProduto.data = this.categorias;\n          });\n      }\n    });\n  }\n\n  novaCategoria(event: Event) {\n    event.preventDefault();\n    this.categoriaProdutoNovo = new CategoriaProduto();\n    this.formCategoriaProduto.reset();\n  }\n\n  applyFilterCategoria(event: Event) {\n    this.filtroTableCategoria = (event.target as HTMLInputElement).value;\n    this.service.buscarCategoriaProdutos(this.filtroTableCategoria, 0, 4)\n      .subscribe(response => {\n        this.categorias = response.content;\n        this.totalElementosCategoria = response.totalElements;\n        this.paginaCategoria = response.number;\n        this.dataSourceCategoriaProduto.data = this.categorias;\n      },\n        errorResponse => {\n          this.service.msg('erro ao buscar', true);\n        });\n    this.dataSourceCategoriaProduto.filter = this.filtroTableCategoria.trim().toLowerCase();\n\n  }\n\n\n  //------------------------------------------------------- FUNÇÕES FORMULARIO TIPO PRODUTOS\n  submitTipoProduto() {\n    this.progress = true;\n    this.service.salvarTipoProduto(this.formTipoProduto.value)\n      .subscribe(response => {\n        this.formTipoProduto.setValue(response);\n        this.tipoProdutoNovo = response;\n        this.carregarTipoProdutos();\n        this.listarTipoProduto(this.paginaTipo, this.tamanhoTipo);\n        this.service.msg('Tipo produto Salvo!');\n        this.progress = false;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg(this.errors, true);\n        this.progress = false;\n      });\n  }\n\n  PreparadeleteTipoProdutoForm(tipoProduto: TipoProduto, event: Event) {\n    event.preventDefault();\n    this.dialog.open(ProdutoDeleteComponent, {\n      data: tipoProduto\n    }).afterClosed().subscribe(responseClose => {\n      if (responseClose) {\n        this.progress = true;\n        this.service.deleteTipoProduto(this.formTipoProduto.value)\n          .subscribe(responseDelete => {\n            this.service.msg('Tipo Produto deletado!');\n            this.tipoProdutoNovo = new TipoProduto();\n            this.formTipoProduto.reset();\n            this.carregarTipoProdutos();\n            this.listarTipoProduto(this.paginaTipo, this.tamanhoTipo);\n            this.progress = false;\n          }, errorResponse => {\n            this.progress = false;\n            this.errors = errorResponse.error.errors;\n            this.service.msg(this.errors, true);\n          });\n      }\n    });\n  }\n\n  PreparadeleteTipoProdutoList(tipoProduto: TipoProduto, event: Event) {\n    event.preventDefault();\n    this.dialog.open(ProdutoDeleteComponent, {\n      data: tipoProduto\n    }).afterClosed().subscribe(response => {\n      if (response) {\n\n        this.service.deleteTipoProduto(tipoProduto)\n          .subscribe(responseDelete => {\n            this.service.msg('Tipo produto deletado!');\n            if (!this.filtroTableTipo) {\n              this.listarTipoProduto(this.paginaTipo, this.tamanhoTipo);\n\n            } else {\n              this.service.buscarTipoProdutos(this.filtroTableTipo, this.paginaTipo, this.tamanhoTipo)\n                .subscribe(responseFilter => {\n                  this.tipos = responseFilter.content;\n                  this.totalElementosTipo = responseFilter.totalElements;\n                  this.paginaTipo = responseFilter.number;\n                  this.dataSourceTipoProduto.data = this.tipos;\n\n                });\n            }\n\n          }, errorResponse => {\n            this.service.msg('Ocorreu um erro ao deletar o tipo', true)\n\n          });\n      }\n    });\n  }\n\n  atualizarTipoProduto(event: Event) {\n    event.preventDefault();\n    this.progress = true;\n    console.log(this.formTipoProduto.value)\n    this.service.atualizarTipoProduto(this.formTipoProduto.value)\n      .subscribe(response => {\n        this.service.msg('Tipo Produto Atualizado!');\n        this.carregarTipoProdutos();\n        this.listarTipoProduto(this.paginaTipo, this.tamanhoTipo);\n        this.progress = false;\n      }, errorResponse => {\n        this.progress = false;\n        this.errors = errorResponse.error.errors;\n        this.service.msg(this.errors, true);\n      });\n  }\n\n  detalhesTipoProduto(tipoProduto: TipoProduto) {\n    this.dialog.open(ProdutoDetalheComponent, {\n      data: tipoProduto\n\n    }).afterClosed().subscribe(response => {\n      if (!this.filtroTableTipo) {\n        this.listarTipoProduto(this.paginaTipo, this.tamanhoTipo);\n      } else {\n        this.service.buscarProdutos(this.filtroTableTipo, this.paginaTipo, this.tamanhoTipo)\n          .subscribe(responseAt => {\n            this.tipos = responseAt.content;\n            this.totalElementosTipo = responseAt.totalElements;\n            this.paginaTipo = responseAt.number;\n            this.dataSourceTipoProduto.data = this.tipos;\n          });\n      }\n    });\n  }\n\n  listarTipoProduto(pagina = 0, tamanho = 4) {\n    this.service.getAllTipoProdutos(pagina, tamanho)\n      .subscribe(response => {\n        this.tipos = response.content;\n        this.totalElementosTipo = response.totalElements;\n        this.paginaTipo = response.number;\n        this.dataSourceTipoProduto.data = this.tipos;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg('Não foi possível Carregar Tipos de Produtos', true);\n      });\n  }\n\n  novoTipoProduto(event: Event) {\n    event.preventDefault();\n    this.tipoProdutoNovo = new TipoProduto();\n    this.formTipoProduto.reset();\n  }\n\n  carregarTipoProdutos() {\n    this.service.carregarTipoProdutos()\n      .subscribe(response => {\n        this.carregaTipoProdutos = response;\n      }, errorResponse => {\n        this.errors = errorResponse.error.errors;\n        console.log(errorResponse);\n        this.service.msg('Não foi possível Carregar os tipos', true);\n      });\n  }\n\n  applyFilterTipo(event: Event) {\n    this.filtroTableTipo = (event.target as HTMLInputElement).value;\n    this.service.buscarTipoProdutos(this.filtroTableTipo, 0, 4)\n      .subscribe(response => {\n        this.tipos = response.content;\n        this.totalElementosTipo = response.totalElements;\n        this.paginaTipo = response.number;\n        this.dataSourceTipoProduto.data = this.tipos;\n      },\n        errorResponse => {\n          this.service.msg('erro ao buscar', true);\n        });\n    this.dataSourceTipoProduto.filter = this.filtroTableTipo.trim().toLowerCase();\n\n  }\n\n\n\n  // COMPARAR OS SELECTS DO OS DADOS DO BANCO\n  compararObj(obj1, obj2) {\n    return obj1 && obj2 ? (obj1.id === obj2.id) : obj1 === obj2;\n  }\n\n  paginar(event: PageEvent) {\n    this.pagina = event.pageIndex;\n    this.tamanho = event.pageSize;\n    this.listarProdutos(this.pagina, this.tamanho);\n  }\n\n  paginarCategoria(event: PageEvent) {\n    this.paginaCategoria = event.pageIndex;\n    this.tamanhoCategoria = event.pageSize;\n    this.listarCategoriaProduto(this.paginaCategoria, this.tamanhoCategoria);\n  }\n\n  paginarTipo(event: PageEvent) {\n    this.paginaTipo = event.pageIndex;\n    this.tamanhoTipo = event.pageSize;\n    this.listarTipoProduto(this.paginaTipo, this.tamanhoTipo);\n  }\n\n}\n","<mat-tab-group>\n    <mat-tab label=\"Novo produto\">\n\n        <ng-template mat-tab-label>\n            <mat-icon>add</mat-icon>\n            Novo Produto\n        </ng-template>\n\n        <mat-card>\n            <br> <br>\n\n            <mat-card-title>{{ produtoNovo.id ? \"Atualizar\" : \"Cadastro\" }}</mat-card-title> <br>\n\n            <mat-divider></mat-divider> <br>\n            <mat-card-content>\n\n                <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                    fxLayoutGap.lt-md=\"0px\">\n                    <mat-card-subtitle fxFlex=\"100\">\n                        <ol class=\"breadcrumb mb-4\">\n                            <li class=\"breadcrumb-item active\"> Produto </li>\n                        </ol>\n                    </mat-card-subtitle>\n                </div>\n\n                <form fxLayout=\"column\" [formGroup]=\"formProduto\" (ngSubmit)=\"submitProduto()\">\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\" *ngIf=\"formProduto.controls.id.value\">\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>ID :</mat-label>\n                            <input matInput value=\"{{ produtoNovo.id }}\" disabled>\n                        </mat-form-field>\n\n                        <mat-form-field>\n                            <mat-label>Data de Cadastro</mat-label>\n                            <input matInput type=\"date\" value=\"{{ produtoNovo.dataCadastro }}\" disabled>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"100\">\n                            <mat-label>Descrição</mat-label>\n                            <input matInput formControlName=\"nomeProduto\" placeholder=\"Descrição\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"50\">\n                            <mat-label>Categoria</mat-label>\n                            <mat-select placeholder=\"selecione a categoria\" formControlName=\"categoriaProduto\"\n                                [compareWith]=\"compararObj\">\n                                <mat-option *ngFor=\"let categoria of carregaCategoriaProdutos\" [value]=\"categoria\">\n                                    {{ categoria.nomeCategoriaProduto }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                        <mat-form-field fxFlex=\"50\">\n                            <mat-label>Tipo</mat-label>\n                            <mat-select placeholder=\"selecione a tipo\" formControlName=\"tipoProduto\"\n                                [compareWith]=\"compararObj\">\n                                <mat-option *ngFor=\"let tipo of carregaTipoProdutos\" [value]=\"tipo\">\n                                    {{ tipo.nomeTipoProduto }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n\n                    </div>\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field>\n                            <mat-label>Preço de compra</mat-label>\n                            <input matInput type=\"number\" formControlName=\"valorCompra\" class=\"valor\">\n                            <span matPrefix>R$&nbsp;</span>\n                        </mat-form-field>\n\n\n                        <mat-form-field>\n                            <mat-label>Preço de venda</mat-label>\n                            <input matInput type=\"number\" formControlName=\"valorVenda\" class=\"valor\">\n                            <span matPrefix>R$&nbsp;</span>\n                        </mat-form-field>\n\n                    </div>\n\n                    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                        <button mat-stroked-button [disabled]=\"formProduto.invalid\" type=\"submit\"\n                            *ngIf=\"!formProduto.controls.id.value && !progress\" color=\"primary\">\n                            <mat-icon>save</mat-icon>\n                            Cadastrar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formProduto.controls.id.value && !progress\"\n                            [disabled]=\"formProduto.invalid\" (click)=\"atualizarProdutos($event)\" color=\"primary\">\n                            <mat-icon>refresh</mat-icon>\n                            Atualizar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formProduto.controls.id.value && !progress\"\n                            (click)=\"PreparadeletarProdutoForm(formProduto.value, $event)\" color=\"warn\">\n                            <mat-icon>delete</mat-icon>\n                            Apagar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formProduto.controls.id.value && !progress\"\n                            (click)=\"novoProduto($event)\" style=\" color: #28a745\">\n                            <mat-icon>add</mat-icon>\n                            Novo Produto\n                        </button>\n\n                    </div>\n\n                </form>\n\n            </mat-card-content>\n        </mat-card>\n    </mat-tab>\n\n    <mat-tab label=\"Categoria do produto\">\n        <ng-template mat-tab-label>\n            <mat-icon>add</mat-icon>\n            Nova Categoria Produto\n        </ng-template>\n\n        <mat-card>\n            <br><br>\n            <mat-card-title>{{ categoriaProdutoNovo.id ? \"Atualizar\" : \"Cadastro\" }}</mat-card-title> <br>\n\n            <mat-divider></mat-divider> <br>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                    fxLayoutGap.lt-md=\"0px\">\n                    <mat-card-subtitle fxFlex=\"100\">\n                        <ol class=\"breadcrumb mb-4\">\n                            <li class=\"breadcrumb-item active\"> Categoria </li>\n                        </ol>\n                    </mat-card-subtitle>\n                </div>\n\n            <mat-card-content>\n\n                <form fxLayout=\"column\" [formGroup]=\"formCategoriaProduto\" (ngSubmit)=\"submitCategoriaProduto()\">\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\" *ngIf=\"formCategoriaProduto.controls.id.value\">\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>ID :</mat-label>\n                            <input matInput value=\"{{ categoriaProdutoNovo.id }}\" disabled>\n                        </mat-form-field>\n\n                        <mat-form-field>\n                            <mat-label>Data de Cadastro</mat-label>\n                            <input matInput type=\"date\" value=\"{{ categoriaProdutoNovo.dataCadastro }}\" disabled>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"100\">\n                            <mat-label>Descrição</mat-label>\n                            <input matInput formControlName=\"nomeCategoriaProduto\" placeholder=\"Descrição\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                        <button mat-stroked-button [disabled]=\"formCategoriaProduto.invalid\" type=\"submit\"\n                            *ngIf=\"!formCategoriaProduto.controls.id.value && !progress\" color=\"primary\">\n                            <mat-icon>save</mat-icon>\n                            Cadastrar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formCategoriaProduto.controls.id.value && !progress\"\n                            [disabled]=\"formCategoriaProduto.invalid\" (click)=\"atualizarCategoriaProduto($event)\"\n                            color=\"primary\">\n                            <mat-icon>refresh</mat-icon>\n                            Atualizar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formCategoriaProduto.controls.id.value && !progress\"\n                            (click)=\"PreparadeletarCategoriaForm(formCategoriaProduto.value, $event)\" color=\"warn\">\n                            <mat-icon>delete</mat-icon>\n                            Apagar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formCategoriaProduto.controls.id.value && !progress\"\n                            (click)=\"novaCategoria($event)\" style=\" color: #28a745\">\n                            <mat-icon>add</mat-icon>\n                            Nova Categoria\n                        </button>\n\n                    </div>\n                </form>\n\n            </mat-card-content>\n        </mat-card>\n\n\n        <mat-card>\n            <br>\n            <br>\n            <mat-card-header>\n                <mat-card-title>Categorias</mat-card-title> <br>\n            </mat-card-header>\n            <mat-card-content>\n\n                <mat-divider></mat-divider> <br>\n\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Buscar categoria</mat-label>\n                    <input matInput placeholder=\"buscar\" (keyup)=\"applyFilterCategoria($event)\">\n                </mat-form-field>\n                <table mat-table [dataSource]=\"dataSourceCategoriaProduto\" class=\"mat-elevation-z8 full-width\">\n\n\n                    <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef> ID </th>\n                        <td mat-cell *matCellDef=\"let categoria\"> {{ categoria.id }} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"categoria\">\n                        <th mat-header-cell *matHeaderCellDef>Categoria</th>\n                        <td mat-cell *matCellDef=\"let categoria\">{{ categoria.nomeCategoriaProduto }}</td>\n                    </ng-container>\n\n\n                    <ng-container matColumnDef=\"dataCadastro\">\n                        <th mat-header-cell *matHeaderCellDef>Data de Cadastro</th>\n                        <td mat-cell *matCellDef=\"let categoria\">{{ categoria.dataCadastro }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"detalhes\">\n                        <th mat-header-cell *matHeaderCellDef>Detalhes</th>\n                        <td mat-cell *matCellDef=\"let categoria\">\n                            <button mat-icon-button (click)=\"detalhesCategoriaproduto(categoria)\">\n                                <mat-icon color=\"primary\">assignment</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"apagar\">\n                        <th mat-header-cell *matHeaderCellDef>Apagar</th>\n                        <td mat-cell *matCellDef=\"let categoria\">\n                            <button mat-icon-button (click)=\"PreparadeletarCategoriaList(categoria, $event)\">\n                                <mat-icon color=\"warn\">delete_forever</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"colunasCategoria\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: colunasCategoria;\"></tr>\n                </table>\n\n                <mat-paginator [length]=\"totalElementosCategoria\" [pageIndex]=\"paginaCategoria\"\n                    [pageSize]=\"tamanhoCategoria\" [pageSizeOptions]=\"pageSizeOptionsCategoria\" showFirstLastButtons\n                    (page)=\"paginarCategoria($event)\"></mat-paginator>\n\n            </mat-card-content>\n        </mat-card>\n\n\n    </mat-tab>\n\n    <mat-tab label=\"tipo do Produto\">\n        <ng-template mat-tab-label>\n            <mat-icon>add</mat-icon>\n            Novo Tipo Produto\n        </ng-template>\n\n        <mat-card>\n            <br> <br>\n            <mat-card-title>{{ tipoProdutoNovo.id ? \"Atualizar\" : \"Cadastro\" }}</mat-card-title> <br>\n\n            <mat-divider></mat-divider> <br>\n\n            <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                    fxLayoutGap.lt-md=\"0px\">\n                    <mat-card-subtitle fxFlex=\"100\">\n                        <ol class=\"breadcrumb mb-4\">\n                            <li class=\"breadcrumb-item active\"> Tipo do Produto </li>\n                        </ol>\n                    </mat-card-subtitle>\n                </div>\n\n            <mat-card-content>\n\n                <form fxLayout=\"column\" [formGroup]=\"formTipoProduto\" (ngSubmit)=\"submitTipoProduto()\">\n\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\" *ngIf=\"formTipoProduto.controls.id.value\">\n                        <mat-form-field fxFlex=\"15\">\n                            <mat-label>ID :</mat-label>\n                            <input matInput value=\"{{ tipoProdutoNovo.id }}\" disabled>\n                        </mat-form-field>\n\n                        <mat-form-field>\n                            <mat-label>Data de Cadastro</mat-label>\n                            <input matInput type=\"texte\" value=\"{{ tipoProdutoNovo.dataCadastro }}\" disabled>\n                        </mat-form-field>\n                    </div>\n                    <div class=\"input-row\" fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"20px\"\n                        fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-form-field fxFlex=\"100\">\n                            <mat-label>Descrição</mat-label>\n                            <input matInput formControlName=\"nomeTipoProduto\" placeholder=\"Descrição\">\n                        </mat-form-field>\n\n                    </div>\n\n                    <div fxLayout=\"row\" fxLayout.lt-md=\"column\" fxLayoutGap=\"50px\" fxLayoutGap.lt-md=\"0px\">\n\n                        <mat-spinner [diameter]=\"30\" *ngIf=\"progress\"> </mat-spinner>\n                        <button mat-stroked-button [disabled]=\"formTipoProduto.invalid\" type=\"submit\"\n                            *ngIf=\"!formTipoProduto.controls.id.value && !progress\" color=\"primary\">\n                            <mat-icon>save</mat-icon>\n                            Cadastrar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formTipoProduto.controls.id.value && !progress\"\n                            [disabled]=\"formTipoProduto.invalid\" (click)=\"atualizarTipoProduto($event)\" color=\"primary\">\n                            <mat-icon>refresh</mat-icon>\n                            Atualizar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formTipoProduto.controls.id.value && !progress\"\n                            (click)=\"PreparadeleteTipoProdutoForm(formTipoProduto.value, $event)\" color=\"warn\">\n                            <mat-icon>delete</mat-icon>\n                            Apagar\n                        </button>\n\n                        <button mat-stroked-button *ngIf=\"formTipoProduto.controls.id.value && !progress\"\n                            (click)=\"novoTipoProduto($event)\" style=\" color: #28a745\">\n                            <mat-icon>add</mat-icon>\n                            Novo Tipo Produto\n                        </button>\n\n                    </div>\n                </form>\n            </mat-card-content>\n        </mat-card>\n\n\n\n        <mat-card>\n            <br>\n            <br>\n            <mat-card-header>\n                <mat-card-title>Tipos</mat-card-title> <br>\n            </mat-card-header>\n            <mat-card-content>\n\n                <mat-divider></mat-divider> <br>\n\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Buscar Tipo categoria</mat-label>\n                    <input matInput placeholder=\"buscar\" (keyup)=\"applyFilterTipo($event)\">\n                </mat-form-field>\n                <table mat-table [dataSource]=\"dataSourceTipoProduto\" class=\"mat-elevation-z8 full-width\">\n\n\n                    <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef> ID </th>\n                        <td mat-cell *matCellDef=\"let tipo\"> {{ tipo.id }} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"tipo\">\n                        <th mat-header-cell *matHeaderCellDef>Tipo</th>\n                        <td mat-cell *matCellDef=\"let tipo\">{{ tipo.nomeTipoProduto }}</td>\n                    </ng-container>\n\n\n                    <ng-container matColumnDef=\"dataCadastro\">\n                        <th mat-header-cell *matHeaderCellDef>Data de Cadastro</th>\n                        <td mat-cell *matCellDef=\"let tipo\">{{ tipo.dataCadastro }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"detalhes\">\n                        <th mat-header-cell *matHeaderCellDef>Detalhes</th>\n                        <td mat-cell *matCellDef=\"let tipo\">\n                            <button mat-icon-button (click)=\"detalhesTipoProduto(tipo)\">\n                                <mat-icon color=\"primary\">assignment</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"apagar\">\n                        <th mat-header-cell *matHeaderCellDef>Apagar</th>\n                        <td mat-cell *matCellDef=\"let tipo\">\n                            <button mat-icon-button (click)=\"PreparadeleteTipoProdutoList(tipo, $event)\">\n                                <mat-icon color=\"warn\">delete_forever</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"colunasTipo\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: colunasTipo;\"></tr>\n                </table>\n\n                <mat-paginator [length]=\"totalElementosTipo\" [pageIndex]=\"paginaTipo\" [pageSize]=\"tamanhoTipo\"\n                    [pageSizeOptions]=\"pageSizeOptionsTipo\" showFirstLastButtons (page)=\"paginarTipo($event)\">\n                </mat-paginator>\n\n            </mat-card-content>\n        </mat-card>\n\n    </mat-tab>\n\n    <mat-tab label=\"Produtos\">\n        <ng-template mat-tab-label>\n            <mat-icon>list</mat-icon>\n            Produtos\n        </ng-template>\n\n\n        <mat-card>\n            <br>\n            <br>\n\n            <mat-card-title>Produtos</mat-card-title> <br>\n\n            <mat-card-content>\n\n                <mat-divider></mat-divider> <br>\n\n                <mat-form-field class=\"full-width\">\n                    <mat-label>Buscar Produtos</mat-label>\n                    <input matInput placeholder=\"buscar\" (keyup)=\"applyFilterProduto($event)\">\n                </mat-form-field>\n                <table mat-table [dataSource]=\"dataSourceProduto\" class=\"mat-elevation-z8 full-width\">\n\n\n                    <ng-container matColumnDef=\"id\">\n                        <th mat-header-cell *matHeaderCellDef> ID </th>\n                        <td mat-cell *matCellDef=\"let produto\"> {{produto.id}} </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"produto\">\n                        <th mat-header-cell *matHeaderCellDef>Produto</th>\n                        <td mat-cell *matCellDef=\"let produto\">{{ produto.nomeProduto }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"categoria\">\n                        <th mat-header-cell *matHeaderCellDef>Categoria</th>\n                        <td mat-cell *matCellDef=\"let produto\">{{ produto.categoriaProduto.nomeCategoriaProduto }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"tipo\">\n                        <th mat-header-cell *matHeaderCellDef>Tipo</th>\n                        <td mat-cell *matCellDef=\"let produto\">{{ produto.tipoProduto.nomeTipoProduto }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"dataCadastro\">\n                        <th mat-header-cell *matHeaderCellDef>Data de Cadastro</th>\n                        <td mat-cell *matCellDef=\"let produto\">{{ produto.dataCadastro }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"detalhes\">\n                        <th mat-header-cell *matHeaderCellDef>Detalhes</th>\n                        <td mat-cell *matCellDef=\"let produto\">\n                            <button mat-icon-button (click)=\"DetalhesProduto(produto)\">\n                                <mat-icon color=\"primary\">assignment</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"apagar\">\n                        <th mat-header-cell *matHeaderCellDef>Apagar</th>\n                        <td mat-cell *matCellDef=\"let produto\">\n                            <button mat-icon-button (click)=\"preparaDelecaoProdutoList(produto,$event)\">\n                                <mat-icon color=\"warn\">delete_forever</mat-icon>\n                            </button>\n                        </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"colunasProduto\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: colunasProduto;\"></tr>\n                </table>\n\n                <mat-paginator [length]=\"totalElementos\" [pageIndex]=\"pagina\" [pageSize]=\"tamanho\"\n                    [pageSizeOptions]=\"pageSizeOptions\" showFirstLastButtons (page)=\"paginar($event)\"></mat-paginator>\n\n            </mat-card-content>\n        </mat-card>\n\n    </mat-tab>\n</mat-tab-group>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LayoutComponent } from '../layout/layout.component';\nimport { ProdutoComponent } from './produto/produto.component';\nimport { AuthGuard } from '../guard/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'produtos', component: LayoutComponent, canActivate: [AuthGuard], children: [\n      { path: 'principal', component: ProdutoComponent },\n      { path: '', redirectTo: '/produtos/principal', pathMatch: 'full' }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProdutosRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProdutosRoutingModule } from './produtos-routing.module';\nimport { ProdutoComponent } from './produto/produto.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { MatSelectModule } from '@angular/material/select';\nimport { ProdutoDetalheComponent } from './produto-detalhe/produto-detalhe.component';\nimport { ProdutoDeleteComponent } from './produto-delete/produto-delete.component';\n\n\n@NgModule({\n  declarations: [ProdutoComponent, ProdutoDetalheComponent, ProdutoDeleteComponent],\n  imports: [\n    CommonModule,\n    ProdutosRoutingModule,\n    MatButtonModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatSnackBarModule,\n    MatDialogModule,\n    MatIconModule,\n    MatDividerModule,\n    MatRadioModule,\n    MatTabsModule,\n    MatTableModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatProgressSpinnerModule,\n    TextMaskModule,\n    MatPaginatorModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    \n  ],\n  exports: [\n    ProdutoComponent,\n    ProdutoDeleteComponent,\n    ProdutoDetalheComponent\n  ]\n})\nexport class ProdutosModule { } \n","export class TipoProduto {\r\n\r\n    id: number;\r\n    dataCadastro: string;\r\n    nomeTipoProduto: string;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Usuario } from '../login/usuario';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  apiUrl: string = environment.apiBaseUrl + '/api/usuarios';\n  tokenUrl: string = environment.apiBaseUrl + environment.obterTokenUrl;\n  clientID: string = environment.clienteId;\n  ClientSecret: string = environment.clienteSecret;\n  jwtHelper: JwtHelperService = new JwtHelperService();\n\n\n  constructor(\n    private http: HttpClient,\n    private snack: MatSnackBar\n  ) { }\n\n  obterToken() {\n    const tokenString = sessionStorage.getItem('access_token');\n    if (tokenString) {\n      const token = JSON.parse(tokenString).access_token;\n      return token;\n    }\n    return null;\n  }\n\n  isAuthenticated(): boolean {\n    const token = this.obterToken();\n    if (token) {\n      const expired = this.jwtHelper.isTokenExpired(token);\n      return !expired;\n    }\n    return false;\n  }\n\n  encerrarSessao() {\n    sessionStorage.removeItem('access_token');\n  }\n\n  getUsuarioAuthenticado() {\n    const token = this.obterToken();\n    if (token) {\n     const usuario = this.jwtHelper.decodeToken(token).user_name;\n     return usuario;\n    }\n    return null;\n  }\n\n  msg(msg: string, isError: boolean = false): void {\n\n    this.snack.open(msg, '', {\n      duration: 3000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'center',\n      panelClass: isError ? ['msg-error'] : ['msg-sucess']\n    });\n\n\n  }\n\n  salvar(usuario: Usuario): Observable<any> {\n    return this.http.post<any>(this.apiUrl, usuario);\n  }\n\n  login(username: string, password: string): Observable<any> {\n    const params = new HttpParams()\n      .set('username', username)\n      .set('password', password)\n      .set('grant_type', 'password');\n    const headers = {\n      // tslint:disable-next-line: object-literal-key-quotes\n      'Authorization': 'Basic ' + btoa(`${this.clientID}:${this.ClientSecret}`),\n      'Content-type': 'application/x-www-form-urlencoded'\n    };\n    return this.http.post(this.tokenUrl, params.toString(), { headers });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Endereco } from '../clientes/endereco';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BuscarCepService {\n\n  apiCep: string = environment.buscarCep;\n\n    constructor(private http: HttpClient) { }\n\n\nbuscarCep(cep: string): Observable < Endereco > {\n  return this.http.get<Endereco>(`${this.apiCep}/${cep}/json/`);\n}\n}\n","import { Injectable } from '@angular/core';\nimport { Cliente } from '../clientes/cliente';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment';\n\nimport { Endereco } from '../clientes/endereco';\nimport { PaginarComponents } from '../util/paginarComponents';\n\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  apiBaseUrl: string = environment.apiBaseUrl + '/api/clientes';\n  apiCep: string = environment.buscarCep;\n\n  constructor(private http: HttpClient, private snack: MatSnackBar) { }\n\n  // tslint:disable-next-line: ban-types\n  msg(msg: string, isError: Boolean = false): void {\n    this.snack.open(msg, '', {\n      duration: 3000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: isError ? ['msg-error'] : ['msg-sucess']\n    });\n  }\n\n  salvar(cliente: Cliente): Observable<Cliente> {\n\n    return this.http.post<Cliente>(this.apiBaseUrl, cliente);\n\n  }\n\n  atualizar(cliente: Cliente): Observable<Cliente> {\n\n    return this.http.put<any>(`${this.apiBaseUrl}/${cliente.id}`, cliente);\n\n  }\n\n  deletar(cliente: Cliente): Observable<any> {\n\n    return this.http.delete<any>(`${this.apiBaseUrl}/${cliente.id}`);\n\n  }\n\n  getClienteAll(page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseUrl}?${params.toString()}`);\n\n  }\n\n  carregarClientes(): Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(`${this.apiBaseUrl}/carregar-cliente`);\n  }\n\n  buscarCliente(filtro: string, page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('filtro', filtro)\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseUrl}/buscar-cliente?${params.toString()}`);\n  }\n\n\n  getClienteById(id: number): Observable<Cliente> {\n\n    return this.http.get<any>(`${this.apiBaseUrl}/${id}`);\n\n  }\n\n  getClienteByCPF(cpf: string): Observable<Cliente> {\n\n    return this.http.get<any>(`${this.apiBaseUrl}/cpf/${cpf}`);\n\n  }\n\n  buscarCep(cep: string): Observable<Endereco> {\n    return this.http.get<Endereco>(`${this.apiCep}/${cep}/json/`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\nimport { Empresa } from '../empresa/empresa'\nimport { Endereco } from '../clientes/endereco';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmpresaService {\n\n  apiBaseUrl: string = environment.apiBaseUrl + '/api/empresa';\n  apiCep: string = environment.buscarCep;\n  \n  constructor(\n    private snack: MatSnackBar,\n    private http: HttpClient\n  ) { }\n\n  msg(msg: string, isError: boolean = false): void {\n    this.snack.open(msg, '', {\n      duration: 3000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: isError ? ['msg-error'] : ['msg-sucess']\n    });\n  }\n\n  salvar(empresa: Empresa): Observable<Empresa> {\n    return this.http.post<Empresa>(this.apiBaseUrl, empresa);\n  }\n\n  atualizar(empresa: Empresa): Observable<Empresa>{\n    return this.http.put<any>(`${this.apiBaseUrl}/${empresa.id}`, empresa);  \n  }\n  \n  carregar(): Observable<Empresa>{\n    return this.http.get<any>(this.apiBaseUrl)\n  }\n\n  buscarCep(cep: string): Observable<Endereco> {\n    return this.http.get<Endereco>(`${this.apiCep}/${cep}/json/`);\n  }\n  \n  upload(empresa: Empresa, formData: FormData): Observable<any> {\n    return this.http.put(`${this.apiBaseUrl}/${empresa.id}/upload`, formData, { responseType : 'blob' })\n  }\n\n  apagarlogo(empresa: Empresa): Observable<any> {    \n    return this.http.patch(`${this.apiBaseUrl}/${empresa.id}/delete`, empresa)\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment';\nimport { FormaPagamento } from '../formas-pagamentos/forma-pagamento';\nimport { Observable } from 'rxjs';\nimport { PaginarComponents } from '../util/paginarComponents';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormaPagamentoService {\n\n  apiBaseUrl: string = environment.apiBaseUrl + '/api/forma-pagamento';\n\n  constructor(\n    private snack: MatSnackBar,\n    private http: HttpClient,\n  ) { }\n\n  msg(msg: string, isError: boolean = false): void {\n    this.snack.open(msg, '', {\n      duration: 3000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: isError ? ['msg-error'] : ['msg-sucess']\n    });\n  }\n\n  salvar(formaPagamento: FormaPagamento): Observable<FormaPagamento> {\n    return this.http.post<FormaPagamento>(this.apiBaseUrl, formaPagamento);\n  }\n\n  atualizar(formaPagamento: FormaPagamento): Observable<FormaPagamento> {\n    return this.http.put<any>(`${this.apiBaseUrl}/${formaPagamento.id}`, formaPagamento);\n  }\n\n  deletar(formaPagamento: FormaPagamento): Observable<any> {\n    return this.http.delete<any>(`${this.apiBaseUrl}/${formaPagamento.id}`);\n  }\n\n  carregarFp(): Observable<FormaPagamento[]> {\n    return this.http.get<FormaPagamento[]>(this.apiBaseUrl);\n  }\n\n  listaFormaPagamento(page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseUrl}/page?${params.toString()}`);\n  }\n\n  buscaFormaPagamento(filtro, page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('filtro', filtro)\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseUrl}/buscar?${params.toString()}`);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Fornecedor } from '../fornecedores/fornecedor/fornecedor';\nimport { Observable } from 'rxjs';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { PaginarComponents } from '../util/paginarComponents';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FornecedorService {\n\n  apiBaseUrl: string = environment.apiBaseUrl + '/api/fornecedor';\n\n  constructor(\n    private snack: MatSnackBar,\n    private http: HttpClient,\n  ) { }\n\n  msg(msg: string, isError: boolean = false): void {\n    this.snack.open(msg, '', {\n      duration: 3000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: isError ? ['msg-error'] : ['msg-sucess']\n    });\n  }\n\n  salvar(fornecedor: Fornecedor): Observable<Fornecedor> {\n    return this.http.post<Fornecedor>(this.apiBaseUrl, fornecedor);\n  }\n\n  atualizar(fornecedor: Fornecedor): Observable<Fornecedor> {\n    return this.http.put<any>(`${this.apiBaseUrl}/${fornecedor.id}`, fornecedor);\n  }\n\n  deletar(fornecedor: Fornecedor): Observable<any> {\n    return this.http.delete<any>(`${this.apiBaseUrl}/${fornecedor.id}`);\n  }\n\n  getFornecedorAll(page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseUrl}?${params.toString()}`);\n  }\n\n  buscarFornecedor(filtro: string, page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('filtro', filtro)\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseUrl}/buscarFornecedor?${params.toString()}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from '/Users/eric_/projetos/frontend-genrencia/src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable } from 'rxjs';\nimport { Lancamento } from '../lancamentos/lancamento';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LancamentoService {\n\n  apiBaseUrl: string = environment.apiBaseUrl + '/api/lancamentos';\n  apiCep: string = environment.buscarCep;\n\n  constructor(\n    private snack: MatSnackBar,\n    private http: HttpClient\n  ) { }\n\n  msg(msg: string, isError: boolean = false): void {\n    this.snack.open(msg, '', {\n      duration: 3000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: isError ? ['msg-error'] : ['msg-sucess']\n    });\n  }\n\n  salvar(lancamento: Lancamento): Observable<Lancamento> {\n    return this.http.post<Lancamento>(this.apiBaseUrl, lancamento);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Produto } from '../produtos/produto';\nimport { Observable } from 'rxjs';\nimport { CategoriaProduto } from '../produtos/categoria-produto';\nimport { TipoProduto } from '../produtos/tipo-produto';\nimport { PaginarComponents } from '../util/paginarComponents';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProdutoService {\n\n  apiBaseUrlprod: string = environment.apiBaseUrl + '/api/produtos';\n  apiBaseURlcat: string = environment.apiBaseUrl + '/api/produtos/categoria-produto';\n  apiBaseURlTipo: string = environment.apiBaseUrl + '/api/produtos/tipo-produto';\n\n  constructor(\n    private snack: MatSnackBar,\n    private http: HttpClient,\n  ) { }\n\n  msg(msg: string, isError: boolean = false): void {\n    this.snack.open(msg, '', {\n      duration: 3000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: isError ? ['msg-error'] : ['msg-sucess']\n    });\n  }\n\n  /*------------------------------URLS PRODUTOS----------------------------------------*/\n\n  salvarProduto(produto: Produto): Observable<Produto> {\n    return this.http.post<any>(this.apiBaseUrlprod, produto);\n  }\n\n  getAllProdutos(page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseUrlprod}?${params.toString()}`);\n  }\n\n  carregarProdutos(): Observable<Produto[]>{\n    return this.http.get<Produto[]>(`${this.apiBaseUrlprod}/carregar-produtos`);\n  }\n\n  buscarProdutos(filtro: string, page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('filtro', filtro)\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseUrlprod}/buscar-produto?${params.toString()}`);\n  }\n\n  atualizarProduto(produto: Produto): Observable<Produto> {\n    return this.http.put<any>(`${this.apiBaseUrlprod}/${produto.id}`, produto);\n  }\n\n  deleteProduto(produto: Produto): Observable<any> {\n    return this.http.delete<any>(`${this.apiBaseUrlprod}/${produto.id}`);\n  }\n\n  /*------------------------URLS CATEGORIA PRODUTOS---------------------------------------*/\n\n\n  salvarCategoriaProduto(categoria: CategoriaProduto): Observable<CategoriaProduto> {\n    return this.http.post<CategoriaProduto>(this.apiBaseURlcat, categoria);\n  }\n\n  atualizarCategoriaProduto(categoria: CategoriaProduto): Observable<CategoriaProduto> {\n    return this.http.put<any>(`${this.apiBaseURlcat}/${categoria.id}`, categoria);\n  }\n\n  deleteCategoriaProduto(categoria: CategoriaProduto): Observable<any> {\n    return this.http.delete<any>(`${this.apiBaseURlcat}/${categoria.id}`);\n  }\n  carregarCategoriasProdutos(): Observable<CategoriaProduto[]> {\n    return this.http.get<CategoriaProduto[]>(this.apiBaseURlcat);\n  }\n\n  getAllCategoriaProdutos(page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseURlcat}/list?${params.toString()}`);\n  }\n\n  buscarCategoriaProdutos(filtro: string, page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('filtro', filtro)\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseURlcat}/buscar?${params.toString()}`);\n  }\n\n  /*------------------------------URLS TIPOS DE PRODUTOS------------------------------------*/\n\n\n  salvarTipoProduto(tipo: TipoProduto): Observable<TipoProduto> {\n    return this.http.post<TipoProduto>(this.apiBaseURlTipo, tipo);\n  }\n\n  atualizarTipoProduto(tipoProduto: TipoProduto): Observable<CategoriaProduto> {\n    return this.http.put<any>(`${this.apiBaseURlTipo}/${tipoProduto.id}`, tipoProduto);\n  }\n\n  deleteTipoProduto(tipoProduto: TipoProduto): Observable<any> {\n    return this.http.delete<any>(`${this.apiBaseURlTipo}/${tipoProduto.id}`);\n  }\n\n  carregarTipoProdutos(): Observable<TipoProduto[]> {\n    return this.http.get<TipoProduto[]>(this.apiBaseURlTipo);\n  }\n\n  getAllTipoProdutos(page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseURlTipo}/list?${params.toString()}`);\n  }\n\n  buscarTipoProdutos(filtro: string, page, size): Observable<PaginarComponents> {\n    const params = new HttpParams()\n      .set('filtro', filtro)\n      .set('page', page)\n      .set('size', size);\n    return this.http.get<any>(`${this.apiBaseURlTipo}/buscar?${params.toString()}`);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  usuarioLogado: string;\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n    this.usuarioLogado = this.authService.getUsuarioAuthenticado();\n  }\n\n}\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark mat-elevation-z4\">\n    <a class=\"navbar-brand\" href=\"#\">GerenciaRE</a>\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0\">\n            <i class=\"fas fa-bars\"></i>\n    </button>\n    <span class=\"spacer\"></span>\n    <div>\n        <h3>Usuario Logado: {{ usuarioLogado }}</h3>\n    </div>\n</nav>\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  usuarioLogado: string;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router \n  ) { }\n\n  ngOnInit(): void {\n\n    this.usuarioLogado = this.authService.getUsuarioAuthenticado();\n  }\n\n  logout() {\n    this.authService.encerrarSessao();\n    this.router.navigate(['/login']);\n  }\n\n}\n","<mat-sidenav-container id=\"layoutSidenav_nav\">\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\n\n\n        <div class=\"sb-sidenav-menu\">\n            <div class=\"nav\">\n                <div class=\"sb-sidenav-menu-heading\">Sistema</div>\n\n                <mat-nav-list>\n                    <a mat-nav-list class=\"nav-link\" routerLink=\"/home\" routerLinkActive=\"selected\">\n                        <div class=\"sb-nav-link-icon\"><i class=\"fas fa-tachometer-alt\"></i></div>\n                        <div class=\"sb-nav-link-icon\"> TEste </div> \n                    </a>\n                </mat-nav-list>\n\n                <div class=\"sb-sidenav-menu-heading\">Consulta / Cadastro</div>\n\n\n                <mat-nav-list>\n\n                    <a mat-list-item class=\"nav-link\" routerLink=\"/clientes/principal\" routerLinkActive=\"selected\">\n                        <div class=\"sb-nav-link-icon \"> <span class=\"material-icons \"> \n                            face    \n                        </span> </div>\n                        <div class=\"sb-nav-link-icon\"> Clientes </div> \n                         \n                    </a>\n\n                </mat-nav-list>\n\n                <mat-nav-list>\n\n                    <a mat-list-item class=\"nav-link \" routerLink=\"/produtos/principal\" routerLinkActive=\"selected\">\n                        <div class=\"sb-nav-link-icon \"> <span class=\"material-icons \"> \n                            <i class=\"fab fa-product-hunt\"></i>\n                        </span> </div>\n                        <div class=\"sb-nav-link-icon\"> Produtos </div>                         \n                    </a>\n\n                </mat-nav-list>               \n\n                <mat-nav-list>\n                    <a mat-list-item class=\"nav-link \" routerLink=\"/fornecedores/principal\" routerLinkActive=\"selected\">\n                        <div class=\"sb-nav-link-icon \">\n                            <span class=\"material-icons \"> shopping_cart</span> </div>\n                            <div class=\"sb-nav-link-icon\"> Fornecedores </div>                         \n                    </a>\n                </mat-nav-list>\n\n                <mat-nav-list>\n                    <a mat-list-item class=\"nav-link \" routerLink=\"/forma-pagamento/principal\" routerLinkActive=\"selected\">\n                        <div class=\"sb-nav-link-icon \">\n                            <span class=\"material-icons \"> payment </span> </div>\n                            <div class=\"sb-nav-link-icon\"> Forma de Pagamento </div>                         \n                    </a>\n                </mat-nav-list>\n\n                <div class=\"sb-sidenav-menu-heading\">Configurações Gerais</div>\n\n                <mat-nav-list>\n\n                    <a mat-list-item class=\"nav-link\"  routerLink=\"/configuracoes\" routerLinkActive=\"selected\">\n                        <div class=\"sb-nav-link-icon \"> <span class=\"material-icons \"> \n                            settings    \n                        </span> </div>\n                        <div class=\"sb-nav-link-icon\"> Configurações </div>  \n                    </a>\n\n                </mat-nav-list>\n\n                <div class=\"sb-sidenav-menu-heading \">Logout</div>\n\n                <mat-nav-list>\n                    <a mat-list-item class=\"nav-link \" href=\"# \" (click)=\"logout(); \">\n                        <div class=\"sb-nav-link-icon \"></div>\n                        <span class=\"material-icons \">\n                        exit_to_app</span> Sair\n                    </a>\n                </mat-nav-list>\n\n            </div>\n        </div>\n\n\n    </nav>\n</mat-sidenav-container>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { RouterModule } from '@angular/router';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\n\n\n\n\n\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n    SidebarComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatListModule,\n    MatSidenavModule\n\n  ],\n  exports: [\n    NavbarComponent,\n    SidebarComponent\n  ]\n})\nexport class TemplateModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor() { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    const tokenString = sessionStorage.getItem('access_token');\n\n    const url = request.url;\n\n    if (tokenString && !url.endsWith('oauth/token') && !url.startsWith('https://viacep.com.br/ws')) {\n\n      const token = JSON.parse(tokenString);\n\n      const jwt = token.access_token;\n\n      request = request.clone({\n        setHeaders: {\n          Authorization: 'Bearer ' + jwt\n        }\n      });\n    }\n\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\n@Injectable()\r\nexport class MascaraUtil {\r\n    public static mascaraCpf = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\r\n    public static mascaraCnpj = [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\r\n    public static mascaraCelular = ['(', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\r\n    public static mascaraTelefoneFixo = ['(', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\r\n    public static mascaraCep = [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/];\r\n    public static mascaraNascimento = [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\r\n    public static qtdHoras = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, /\\d/];\r\n    public static mascaraRg = [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/ ];\r\n    public static mascaraNit = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, '-', /\\d/];\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n // apiBaseUrl: 'http://localhost:8080',\n apiBaseUrl: 'https://api-gerencia.herokuapp.com',\n  clienteId: 'my-angular-app',\n  clienteSecret: '@321',\n  obterTokenUrl: '/oauth/token',\n  buscarCep: 'https://viacep.com.br/ws'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}